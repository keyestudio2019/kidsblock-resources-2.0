/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',
        RGB_CATEGORY: 'RGB LED',
        RGB_DIGITAL: 'RGB Lamp Red#%1 R_state%2 Green#%3 G_State%4 Blue#%5 B_State%6',
        RGB_ANALOG: 'RGB Lamp Red#%1 R_analogWrite%2 Green#%3 G_analogWrite%4 Blue#%5 B_analogWrite%6',
        BUZZER_CATEGORY: 'Passive buzzer',
        BUZZER_TONE: 'Tone PIN#%1 frequency%2',
        BUZZER_TONE_D: 'Tone PIN#%1 frequency%2 duration%3',
        BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
        BUZZER_NOTONE: 'noTone%1',
     
        LM35_CATEGORY: 'Temperature',
        LM35_READ_TEMPERATURE: 'LM35 read temperature PIN: %1',
        IR_CATEGORY: 'IR Remote',
        IRSEND_CATEGORY: 'IR Send',
        IR_SEND: 'IRsend %1 PIN#%2 data%3 bits%4',
        IR_SEND_RAW: 'IRsend(RAW) PIN#%1 Array%2 listLength%3 frequency%4',
        IR_INIT: 'IR remote init PIN#%1',
        IR_DATA: 'Received data',
        IR_READ: 'Read the data',
        IR_REFRESH: 'Refresh data',
  
        ADXL345_CATEGORY: 'Acceleration',
        ADXL345_READ: 'ADXL345 read %1',
        DHT_CATEGORY: 'DHT',
        DHT_INIT: 'Init dht %1 pin %2 mode %3',
        DHT_READ_TEMPERATURE: 'Dht %1 read temperature %2',
        DHT_READ_HUMIDITY: 'Dht %1 read humidity',
        KSENCODER_CATEGORY: 'Encoder',
        KSENCODER_INIT: 'Init encoder %1 DT %2 CLK %3',
        KSENCODER_READ: 'Read encoder %1',
        KSENCODER_WRITE: 'Encoder %1 write %2',
        KSENCODER_BUTTON: 'Read the rotary encoder button PIN# %1',
        HC_SR04_CATEGORY: 'Ultrasonic',
        HC_SR04_READ_DISTANCE: 'HC-SR04 trig pin %1 echo pin %2 read distance %3',
        JOYSTICK_CATEGORY: 'JoyStick',
        JOYSTICK_Z_STATE: 'Interface %1 joystick button(Z) was be pushed?',
        JOYSTICK_XY_VALUE: 'read interface %1 joystick %2 axis',
        X: 'X',
        Y :'Y',
        FOURDIGITCLOCKDISPLAY_CATEGORY: '4-Digit Display',
        FOURDIGITCLOCKDISPLAY_INIT: 'init 4-digit display pin DIO %1 CLK %2',
        FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: 'set brightness %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: 'display number %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: 'display string %1',
        FOURDIGITCLOCKDISPLAY_DISPLAY: 'display %1 at bit %2',
        FOURDIGITCLOCKDISPLAY_SETPOINT: 'set point %1',
        FOURDIGITCLOCKDISPLAY_STATE_ON: 'on',
        FOURDIGITCLOCKDISPLAY_STATE_OFF: 'off',
        FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: 'It will take effect after the next update of the display.',
        FOURDIGITCLOCKDISPLAY_CLEAR: 'clear'
       
    });
    Object.assign(Blockly.ScratchMsgs.locales['de'], {
        KS_VARIABLE_LABEL:'Variablentyp',
        KS_variables_declare:'Deklarieren Sie %1 Variablentyp %2 Name %3 Zugewiesen an %4',
        KS_variables_set:'Variable %1 um %2 setzen',
        KS_variables_change:'Variablenmodus %1 %2 ändern',
        KS_variables_value: 'Variable %1',
        KS_variables_setString:'Setze %1 String-Variable um %2',
        KS_global:'Global',
        KS_local:'Lokal',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'lang',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'Zeichenfolge',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'Wort',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'Logik',
        KS_judge:'%1 %2 %3',
        RGB_CATEGORY: 'RGB-LED',
        RGB_DIGITAL: 'RGB-Lampe Rot#%1 R_state%2 Grün#%3 G_State%4 Blau#%5 B_State%6',
        RGB_ANALOG: 'RGB-Lampe Rot#%1 R_analogWrite%2 Grün#%3 G_analogWrite%4 Blau#%5 B_analogWrite%6',
        BUZZER_CATEGORY: 'Passiver Summer',
        BUZZER_TONE: 'Ton-PIN#%1 Frequenz%2',
        BUZZER_TONE_D: 'Ton-PIN#%1 Häufigkeit%2 Dauer%3',
        BUZZER_MUSIC: 'Ton PIN#%1 Musik abspielen%2',
        BUZZER_NOTONE: 'noTone%1',
    
        LM35_CATEGORY: 'Temperatur',
        LM35_READ_TEMPERATURE: 'LM35 hat Temperatur-PIN gelesen: %1',
        IR_CATEGORY: 'IR-Fernbedienung',
        IRSEND_CATEGORY: 'IR-Senden',
        IR_SEND: 'IRsend %1 PIN#%2 Daten%3 Bits%4',
        IR_SEND_RAW: 'IRsend(RAW) PIN#%1 Array%2 listLength%3 Häufigkeit%4',
        IR_INIT: 'IR-Ferninitialisierungs-PIN#%1',
        IR_DATA: 'Empfangene Daten',
        IR_READ: 'Daten lesen',
        IR_REFRESH: 'Daten aktualisieren',
 
        ADXL345_CATEGORY: 'Beschleunigung',
        ADXL345_READ: 'ADXL345 hat %1 gelesen',
        DHT_CATEGORY: 'DHT',
        DHT_INIT: 'Dht %1 Pin %2 Modus %3 initiieren',
        DHT_READ_TEMPERATURE: 'Dht %1 hat Temperatur %2 gelesen',
        DHT_READ_HUMIDITY: 'Dht %1 hat die Luftfeuchtigkeit gelesen',
        KSENCODER_CATEGORY: 'Encoder',
        KSENCODER_INIT: 'Encoder %1 DT %2 CLK %3 initialisieren',
        KSENCODER_READ: 'Encoder %1 lesen',
        KSENCODER_WRITE: 'Encoder %1 schreibt %2',
        KSENCODER_BUTTON: 'Lesen Sie die PIN# %1 des Drehgeberknopfes',
        HC_SR04_CATEGORY: 'Ultraschall',
        HC_SR04_READ_DISTANCE: 'HC-SR04 Trig-Pin %1 Echo-Pin %2 Leseabstand %3',
        JOYSTICK_CATEGORY: 'JoyStick',
        JOYSTICK_Z_STATE: 'Schnittstelle %1 Joystick-Taste (Z) wurde gedrückt?',
        JOYSTICK_XY_VALUE: 'Schnittstelle %1 Joystick %2 Achse lesen',
        X: 'X',
        Y: 'Y',
        FOURDIGITCLOCKDISPLAY_CATEGORY: '4-stellige Anzeige',
        FOURDIGITCLOCKDISPLAY_INIT: '4-stelligen Anzeige-Pin DIO %1 CLK %2 initiieren',
        FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: 'Helligkeit %1 einstellen',
        FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: 'Anzeigenummer %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: 'Zeichenfolge %1 anzeigen',
        FOURDIGITCLOCKDISPLAY_DISPLAY: '%1 bei Bit %2 anzeigen',
        FOURDIGITCLOCKDISPLAY_SETPOINT: 'Sollwert %1',
        FOURDIGITCLOCKDISPLAY_STATE_ON: 'ein',
        FOURDIGITCLOCKDISPLAY_STATE_OFF: 'aus',
        FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: 'Es wird nach der nächsten Aktualisierung der Anzeige wirksam.',
        FOURDIGITCLOCKDISPLAY_CLEAR: 'clear'
    });
    Object.assign(Blockly.ScratchMsgs.locales['es'], {
        KS_VARIABLE_LABEL:'Tipo de variable',
        KS_variables_declare:'Declarar %1 variable Tipo %2 Nombre %3 Asignado a %4',
        KS_variables_set:'Establecer %1 variable por %2',
        KS_variables_change:'Cambiar %1 modo variable %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Establecer %1 variable de cadena por %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'largo',
        KS_MATH_FLOAT: 'flotante',
        KS_MATH_BOOLEAN: 'booleano',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'carácter',
        KS_MATH_STRING: 'cadena',
        KS_MATH_UNSIGNED_INT: 'int sin firmar',
        KS_MATH_WORD: 'palabra',
        KS_MATH_UNSIGNED_LONG: 'largo sin firmar',
        KS_MATH_UNSIGNED_CHAR: 'caracter sin firmar',
        KS_MATH_DOUBLE: 'doble',

        KS_TEXT_LABEL:'TEXTO',
        KS_char: 'char%1',
        KS_string: 'cadena%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'lógica',
        KS_judge:'%1 %2 %3',
        RGB_CATEGORÍA: 'LED RGB',
        RGB_DIGITAL: 'Lámpara RGB Rojo#%1 R_state%2 Verde#%3 G_State%4 Azul#%5 B_State%6',
        RGB_ANALOG: 'Lámpara RGB Rojo#%1 R_analogWrite%2 Verde#%3 G_analogWrite%4 Azul#%5 B_analogWrite%6',
        BUZZER_CATEGORY: 'Zumbador pasivo',
        BUZZER_TONE: 'Tono PIN#%1 frecuencia%2',
        BUZZER_TONE_D: 'Tono PIN#%1 frecuencia%2 duración%3',
        BUZZER_MUSIC: 'Tono PIN#%1 reproducir música%2',
        BUZZER_NOTONE: 'sin tono%1',
    
        LM35_CATEGORY: 'Temperatura',
        LM35_READ_TEMPERATURE: 'LM35 lee temperatura PIN: %1',
        IR_CATEGORY: 'Remoto IR',
        IRSEND_CATEGORY: 'Envío IR',
        IR_SEND: 'Enviar IR %1 PIN#%2 datos%3 bits%4',
        IR_SEND_RAW: 'IRsend(RAW) PIN#%1 Array%2 listLength%3 frecuencia%4',
        IR_INIT: 'PIN de inicio remoto IR#%1',
        IR_DATA: 'Datos recibidos',
        IR_READ: 'Leer los datos',
        IR_REFRESH: 'Actualizar datos',
 
        ADXL345_CATEGORY: 'Aceleración',
        ADXL345_READ: 'ADXL345 leído %1',
        DHT_CATEGORY: 'DHT',
        DHT_INIT: 'Iniciar dht %1 pin %2 modo %3',
        DHT_READ_TEMPERATURE: 'Dht %1 lee temperatura %2',
        DHT_READ_HUMIDITY: 'Dht %1 humedad de lectura',
        KSENCODER_CATEGORY: 'Codificador',
        KSENCODER_INIT: 'Iniciar codificador %1 DT %2 CLK %3',
        KSENCODER_READ: 'Leer codificador %1',
        KSENCODER_WRITE: 'Codificador %1 escritura %2',
        KSENCODER_BUTTON: 'Leer el botón del codificador rotatorio PIN# %1',
        HC_SR04_CATEGORY: 'Ultrasónico',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin de activación %1 pin de eco %2 distancia de lectura %3',
        JOYSTICK_CATEGORY: 'JoyStick',
        JOYSTICK_Z_STATE: '¿Se presionó la interfaz %1 botón de joystick (Z)?',
        JOYSTICK_XY_VALUE: 'interfaz de lectura %1 joystick %2 eje',
        X: 'X',
        Y :'Y',
        FOURDIGITCLOCKDISPLAY_CATEGORY: 'Pantalla de 4 dígitos',
        FOURDIGITCLOCKDISPLAY_INIT: 'iniciar pin de pantalla de 4 dígitos DIO %1 CLK %2',
        FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: 'establecer brillo %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: 'mostrar número %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: 'mostrar cadena %1',
        FOURDIGITCLOCKDISPLAY_DISPLAY: 'mostrar %1 en el bit %2',
        FOURDIGITCLOCKDISPLAY_SETPOINT: 'punto de ajuste %1',
        FOURDIGITCLOCKDISPLAY_STATE_ON: 'activado',
        FOURDIGITCLOCKDISPLAY_STATE_OFF: 'apagado',
        FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: 'Tendrá efecto después de la próxima actualización de la pantalla.',
        FOURDIGITCLOCKDISPLAY_CLEAR: 'borrar'
    });
    Object.assign(Blockly.ScratchMsgs.locales['fr'], {
        KS_VARIABLE_LABEL:'Type de variable',
         KS_variables_declare:'Déclarer %1 variable Type %2 Nom %3 Attribué à %4',
         KS_variables_set: 'Définir la variable %1 par %2',
         KS_variables_change:'Changer %1 mode variable %2',
         KS_variables_value: 'variable %1',
         KS_variables_setString: 'Définir la variable chaîne %1 par %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'entier',
         KS_MATH_LONG: 'long',
         KS_MATH_FLOAT: 'flottant',
         KS_MATH_BOOLEAN: 'booléen',
         KS_MATH_BYTE: 'octet',
         KS_MATH_CHAR: 'car',
         KS_MATH_STRING: 'chaîne',
         KS_MATH_UNSIGNED_INT: 'entier non signé',
         KS_MATH_WORD: 'mot',
         KS_MATH_UNSIGNED_LONG: 'long non signé',
         KS_MATH_UNSIGNED_CHAR: 'caractère non signé',
         KS_MATH_DOUBLE: 'doubler',

         KS_TEXT_LABEL:'TEXTE',
         KS_char: 'car%1',
         KS_string: 'chaîne%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'logique',
         KS_judge:'%1 %2 %3',
         RGB_CATEGORY: 'DEL RVB',
         RGB_DIGITAL: 'Lampe RVB Rouge#%1 R_state%2 Vert#%3 G_State%4 Bleu#%5 B_State%6',
         RGB_ANALOG: 'Lampe RVB Rouge#%1 R_analogWrite%2 Vert#%3 G_analogWrite%4 Bleu#%5 B_analogWrite%6',
         BUZZER_CATEGORY: "Sonnerie passive",
         BUZZER_TONE: 'Tonalité PIN #%1 fréquence%2',
         BUZZER_TONE_D: 'Tonalité PIN #%1 fréquence%2 durée%3',
         BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
         BUZZER_NOTONE: 'pas de tonalité%1',
     
         LM35_CATEGORY: 'Température',
         LM35_READ_TEMPERATURE: 'Le code PIN de température de lecture LM35:%1',
         IR_CATEGORY: 'Télécommande infrarouge',
         IRSEND_CATEGORY: "Envoi IR",
         IR_SEND: 'IRenvoi %1 PIN#%2 données%3 bits%4',
         IR_SEND_RAW: 'IRsend(RAW) PIN#%1 Array%2 listLength%3 frequency%4',
         IR_INIT: 'PIN d"initialisation à distance IR#%1',
         IR_DATA: 'Données reçues',
         IR_READ: 'Lire les données',
         IR_REFRESH: 'Actualiser les données',
  
         ADXL345_CATEGORY: 'Accélération',
         ADXL345_READ: 'ADXL345 a lu %1',
         DHT_CATEGORY: 'DHT',
         DHT_INIT: 'Init dht %1 broche %2 mode %3',
         DHT_READ_TEMPERATURE: 'Dht %1 a lu la température %2',
         DHT_READ_HUMIDITY: 'Dht %1 lecture de l"humidité',
         KSENCODER_CATEGORY: 'Encodeur',
         KSENCODER_INIT: 'Init codeur %1 DT %2 CLK %3',
         KSENCODER_READ: 'Lire l"encodeur %1',
         KSENCODER_WRITE: 'L"encodeur %1 écrit %2',
         KSENCODER_BUTTON: 'Lire le PIN du bouton de l"encodeur rotatif # %1',
         HC_SR04_CATEGORY: 'Ultrasons',
         HC_SR04_READ_DISTANCE: 'broche de déclenchement HC-SR04 %1 broche d"écho %2 distance de lecture %3',
         JOYSTICK_CATEGORY: 'JoyStick',
         JOYSTICK_Z_STATE: 'Le bouton du joystick de l"interface%1 (Z) a été enfoncé?',
         JOYSTICK_XY_VALUE: 'lecture interface %1 joystick %2 axe',
         X: 'X',
         Y :'Y',
         FOURDIGITCLOCKDISPLAY_CATEGORY: 'Affichage à 4 chiffres',
         FOURDIGITCLOCKDISPLAY_INIT: 'initialisation de la broche d"affichage à 4 chiffres DIO %1 CLK %2',
         FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: 'définir la luminosité %1',
         FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: 'afficher le numéro %1',
         FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: 'chaîne d"affichage %1',
         FOURDIGITCLOCKDISPLAY_DISPLAY: 'affiche %1 au bit %2',
         FOURDIGITCLOCKDISPLAY_SETPOINT: 'point de consigne %1',
         FOURDIGITCLOCKDISPLAY_STATE_ON: 'activé',
         FOURDIGITCLOCKDISPLAY_STATE_OFF: 'désactivé',
         FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: 'Il prendra effet après la prochaine mise à jour de l"affichage.',
         FOURDIGITCLOCKDISPLAY_CLEAR: 'effacer'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ja'], {
        KS_VARIABLE_LABEL:'変数タイプ',
         KS_variables_declare:'%1 変数を宣言します。タイプ %2 名前 %3 を %4 に割り当てます',
         KS_variables_set:'%1 変数を %2 で設定',
         KS_variables_change:'%1 変数モード %2 を変更',
         KS_variables_value: '変数 %1',
         KS_variables_setString:'%1 文字列変数を %2 で設定',
         KS_global:'グローバル',
         KS_local:'ローカル',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: '長い',
         KS_MATH_FLOAT: '浮動小数点',
         KS_MATH_BOOLEAN: 'ブール値',
         KS_MATH_BYTE: 'バイト',
         KS_MATH_CHAR: '文字',
         KS_MATH_STRING: '文字列',
         KS_MATH_UNSIGNED_INT: '符号なし整数',
         KS_MATH_WORD: '単語',
         KS_MATH_UNSIGNED_LONG: '符号なしロング',
         KS_MATH_UNSIGNED_CHAR: '符号なし文字',
         KS_MATH_DOUBLE: '倍精度',

         KS_TEXT_LABEL:'テキスト',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'ロジック',
         KS_judge:'%1 %2 %3',
         RGB_CATEGORY: 'RGB LED',
         RGB_DIGITAL: 'RGB ランプ 赤#%1 R_state%2 緑#%3 G_State%4 青#%5 B_State%6',
         RGB_ANALOG: 'RGB ランプ 赤#%1 R_analogWrite%2 緑#%3 G_analogWrite%4 青#%5 B_analogWrite%6',
         BUZZER_CATEGORY: 'パッシブブザー',
         BUZZER_TONE: 'トーン PIN#%1 頻度%2',
         BUZZER_TONE_D: 'トーン PIN#%1 頻度%2 期間%3',
         BUZZER_MUSIC: 'トーン PIN#%1 音楽%2 を再生',
         BUZZER_NOTONE: 'noTone%1',
     
         LM35_CATEGORY: '温度',
         LM35_READ_TEMPERATURE: 'LM35 読み取り温度 PIN: %1',
         IR_CATEGORY: 'IR リモコン',
         IRSEND_CATEGORY: 'IR 送信',
         IR_SEND: 'IRsend %1 PIN#%2 データ%3 ビット%4',
         IR_SEND_RAW: 'IRsend(RAW) PIN#%1 配列%2 リスト長%3 周波数%4',
         IR_INIT: 'IR リモート初期化 PIN#%1',
         IR_DATA: '受信データ',
         IR_READ: 'データを読み取る',
         IR_REFRESH: 'データを更新',
  
         ADXL345_CATEGORY: '加速',
         ADXL345_READ: 'ADXL345 読み取り %1',
         DHT_CATEGORY: 'DHT',
         DHT_INIT: 'dht %1 ピン %2 モード %3 を初期化します',
         DHT_READ_TEMPERATURE: 'Dht %1 読み取り温度 %2',
         DHT_READ_HUMIDITY: 'Dht %1 読み取り湿度',
         KSENCODER_CATEGORY: 'エンコーダー',
         KSENCODER_INIT: '初期化エンコーダー %1 DT %2 CLK %3',
         KSENCODER_READ: 'エンコーダー %1 を読み取ります',
         KSENCODER_WRITE: 'エンコーダー %1 書き込み %2',
         KSENCODER_BUTTON: 'ロータリー エンコーダー ボタン PIN# %1 を読み取ります',
         HC_SR04_CATEGORY: '超音波',
         HC_SR04_READ_DISTANCE: 'HC-SR04 トリガー ピン %1 エコー ピン %2 読み取り距離 %3',
         JOYSTICK_CATEGORY: 'ジョイスティック',
         JOYSTICK_Z_STATE: 'インターフェイス %1 ジョイスティック ボタン (Z) が押されました?',
         JOYSTICK_XY_VALUE: 'インターフェイス %1 ジョイスティック %2 軸を読み取り',
         X: 'X',
         Y: 'Y',
         FOURDIGITCLOCKDISPLAY_CATEGORY: '4 桁表示',
         FOURDIGITCLOCKDISPLAY_INIT: '4 桁表示ピン DIO %1 CLK %2 を初期化',
         FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: '明るさを設定 %1',
         FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: '表示番号 %1',
         FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: '表示文字列 %1',
         FOURDIGITCLOCKDISPLAY_DISPLAY: 'ビット %2 に %1 を表示',
         FOURDIGITCLOCKDISPLAY_SETPOINT: '設定値 %1',
         FOURDIGITCLOCKDISPLAY_STATE_ON: 'オン',
         FOURDIGITCLOCKDISPLAY_STATE_OFF: 'オフ',
         FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: '次回の表示更新後に有効になります。',
         FOURDIGITCLOCKDISPLAY_CLEAR: 'クリア'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ko'], {
        KS_VARIABLE_LABEL:'변수 유형',
         KS_variables_declare:'%1 변수 유형 %2 이름 %3 선언 %4에 할당됨',
         KS_variables_set:'%1 변수를 %2로 설정',
         KS_variables_change:'%1 변수 모드 %2 변경',
         KS_variables_value: '변수 %1',
         KS_variables_setString:'%1 문자열 변수를 %2로 설정',
         KS_global:'글로벌',
         KS_local:'로컬',
         KS_MATH_INT: '정수',
         KS_MATH_LONG: '긴',
         KS_MATH_FLOAT: '부동',
         KS_MATH_BOOLEAN: '부울',
         KS_MATH_BYTE: '바이트',
         KS_MATH_CHAR: '문자',
         KS_MATH_STRING: '문자열',
         KS_MATH_UNSIGNED_INT: '부호 없는 정수',
         KS_MATH_WORD: '단어',
         KS_MATH_UNSIGNED_LONG: '부호 없는 롱',
         KS_MATH_UNSIGNED_CHAR: '부호 없는 문자',
         KS_MATH_DOUBLE: '더블',

         KS_TEXT_LABEL:'텍스트',
         KS_char: '문자%1',
         KS_string: '문자열%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'논리',
         KS_judge:'%1 %2 %3',
         RGB_CATEGORY: 'RGB LED',
         RGB_DIGITAL: 'RGB 램프 빨강#%1 R_state%2 초록#%3 G_State%4 파랑#%5 B_State%6',
         RGB_ANALOG: 'RGB 램프 빨강#%1 R_analogWrite%2 초록#%3 G_analogWrite%4 파랑#%5 B_analogWrite%6',
         BUZZER_CATEGORY: '패시브 버저',
         BUZZER_TONE: '톤 PIN#%1 주파수%2',
         BUZZER_TONE_D: 'Tone PIN#%1 주파수%2 지속시간%3',
         BUZZER_MUSIC: 'Tone PIN#%1 음악 재생%2',
         BUZZER_NOTONE: '노톤%1',
     
         LM35_CATEGORY: '온도',
         LM35_READ_TEMPERATURE: 'LM35 읽기 온도 PIN: %1',
         IR_CATEGORY: 'IR 리모트',
         IRSEND_CATEGORY: 'IR 보내기',
         IR_SEND: 'IRsend %1 PIN#%2 데이터%3 비트%4',
         IR_SEND_RAW: 'IRsend(RAW) PIN#%1 배열%2 listLength%3 빈도%4',
         IR_INIT: 'IR 원격 초기화 PIN#%1',
         IR_DATA: '데이터 수신',
         IR_READ: '데이터 읽기',
         IR_REFRESH: '데이터 새로 고침',
  
         ADXL345_CATEGORY: '가속',
         ADXL345_READ: 'ADXL345 읽기 %1',
         DHT_CATEGORY: 'DHT',
         DHT_INIT: 'dht %1 핀 %2 모드 %3 초기화',
         DHT_READ_TEMPERATURE: 'Dht %1 읽기 온도 %2',
         DHT_READ_HUMIDITY: 'Dht %1 습도 읽기',
         KSENCODER_CATEGORY: '인코더',
         KSENCODER_INIT: '엔코더 %1 DT %2 CLK %3 초기화',
         KSENCODER_READ: '인코더 %1 읽기',
         KSENCODER_WRITE: '인코더 %1 쓰기 %2',
         KSENCODER_BUTTON: '로터리 인코더 버튼 PIN# %1 읽기',
         HC_SR04_CATEGORY: '초음파',
         HC_SR04_READ_DISTANCE: 'HC-SR04 트리거 핀 %1 에코 핀 %2 읽기 거리 %3',
         JOYSTICK_CATEGORY: '조이스틱',
         JOYSTICK_Z_STATE: '인터페이스 %1 조이스틱 버튼(Z)을 눌렀습니까?',
         JOYSTICK_XY_VALUE: '인터페이스 %1 조이스틱 %2 축 읽기',
         X: 'X',
         Y :'Y',
         FOURDIGITCLOCKDISPLAY_CATEGORY: '4자리 디스플레이',
         FOURDIGITCLOCKDISPLAY_INIT: '초기화 4자리 디스플레이 핀 DIO %1 CLK %2',
         FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: '밝기 %1 설정',
         FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: '디스플레이 번호 %1',
         FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: '표시 문자열 %1',
         FOURDIGITCLOCKDISPLAY_DISPLAY: '비트 %2에 %1 표시',
         FOURDIGITCLOCKDISPLAY_SETPOINT: '설정 포인트 %1',
         FOURDIGITCLOCKDISPLAY_STATE_ON: '켜기',
         FOURDIGITCLOCKDISPLAY_STATE_OFF: '꺼짐',
         FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: '디스플레이의 다음 업데이트 이후에 적용됩니다.',
         FOURDIGITCLOCKDISPLAY_CLEAR: '지우기'
    });
    Object.assign(Blockly.ScratchMsgs.locales['pl'], {
        KS_VARIABLE_LABEL:'Typ zmiennej',
        KS_variables_declare:'Deklaracja %1 zmiennej Typ %2 Nazwa %3 Przypisana do %4',
        KS_variables_set:'Ustaw zmienną %1 na %2',
        KS_variables_change:'Zmień tryb zmiennej %1 %2',
        KS_variables_value: 'zmienna %1',
        KS_variables_setString:'Ustaw zmienną łańcuchową %1 o %2',
        KS_global:'Globalny',
        KS_local:'Lokalny',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'długi',
        KS_MATH_FLOAT: 'pływa',
        KS_MATH_BOOLEAN: 'wartość logiczna',
        KS_MATH_BYTE: 'bajt',
        KS_MATH_CHAR: 'znak',
        KS_MATH_STRING: 'ciąg znaków',
        KS_MATH_UNSIGNED_INT: 'bez znaku int',
        KS_MATH_WORD: 'słowo',
        KS_MATH_UNSIGNED_LONG: 'długi bez znaku',
        KS_MATH_UNSIGNED_CHAR: 'znak bez znaku',
        KS_MATH_DOUBLE: 'podwójne',

        KS_TEXT_LABEL:'TEKST',
        KS_char: 'znak%1',
        KS_string: 'ciąg%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logika',
        KS_judge:'%1%2%3',
        RGB_CATEGORY: 'LED RGB',
        RGB_DIGITAL: 'Lampa RGB Czerwona#%1 R_state%2 Zielona#%3 G_State%4 Niebieska#%5 B_State%6',
        RGB_ANALOG: 'Lampa RGB Czerwona#%1 R_analogWrite%2 Zielona#%3 G_analogWrite%4 Niebieska#%5 B_analogWrite%6',
        BUZZER_CATEGORY: 'Brzęczyk pasywny',
        BUZZER_TONE: 'Ton PIN#%1 częstotliwość%2',
        BUZZER_TONE_D: 'Ton PIN#%1 częstotliwość%2 czas trwania%3',
        BUZZER_MUSIC: 'Ton PIN#%1 odtwarzanie muzyki%2',
        BUZZER_NOTONE: 'brak tonu%1',
    
        LM35_CATEGORY: 'Temperatura',
        LM35_READ_TEMPERATURE: 'LM35 odczyt temperatury PIN: %1',
        IR_CATEGORY: 'Pilot na podczerwień',
        IRSEND_CATEGORY: 'Wysyłanie IR',
        IR_SEND: 'IRwyślij %1 PIN#%2 dane%3 bity%4',
        IR_SEND_RAW: 'IRsend(RAW) PIN#%1 Tablica%2 listaDługość%3 częstotliwość%4',
        IR_INIT: 'PIN zdalnej inicjalizacji IR#%1',
        IR_DATA: 'Otrzymane dane',
        IR_READ: 'Odczytaj dane',
        IR_REFRESH: 'Odśwież dane',
 
        ADXL345_CATEGORY: 'Przyspieszenie',
        ADXL345_READ: 'ADXL345 odczyt %1',
        DHT_CATEGORY: 'DHT',
        DHT_INIT: 'Uruchom dht %1 pin %2 tryb %3',
        DHT_READ_TEMPERATURE: 'Dht %1 odczyt temperatury %2',
        DHT_READ_HUMIDITY: 'Dht %1 odczyt wilgotności',
        KSENCODER_CATEGORY: 'Koder',
        KSENCODER_INIT: 'Uruchamianie enkodera %1 DT %2 CLK %3',
        KSENCODER_READ: 'Odczyt kodera %1',
        KSENCODER_WRITE: 'Koder %1 zapisuje %2',
        KSENCODER_BUTTON: 'Odczytaj przycisk enkodera obrotowego PIN# %1',
        HC_SR04_CATEGORY: 'Ultradźwięki',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin wyzwalający %1 pin echa %2 odległość odczytu %3',
        JOYSTICK_CATEGORY: 'JoyStick',
        JOYSTICK_Z_STATE: 'Interfejs %1 przycisk joysticka (Z) został wciśnięty?',
        JOYSTICK_XY_VALUE: 'odczyt interfejsu %1 joystick %2 oś',
        X: 'X',
        Y: 'Y',
        FOURDIGITCLOCKDISPLAY_CATEGORY: '4-cyfrowy wyświetlacz',
        FOURDIGITCLOCKDISPLAY_INIT: 'początkowy 4-cyfrowy pin wyświetlacza DIO %1 CLK %2',
        FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: 'ustaw jasność %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: 'wyświetl numer %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: 'wyświetl łańcuch %1',
        FOURDIGITCLOCKDISPLAY_DISPLAY: 'wyświetl %1 w bicie %2',
        FOURDIGITCLOCKDISPLAY_SETPOINT: 'wartość zadana %1',
        FOURDIGITCLOCKDISPLAY_STATE_ON: 'włączone',
        FOURDIGITCLOCKDISPLAY_STATE_OFF: 'wyłączony',
        FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: 'Zacznie działać po następnej aktualizacji wyświetlacza.',
        FOURDIGITCLOCKDISPLAY_CLEAR: 'wyczyść'
    });
    Object.assign(Blockly.ScratchMsgs.locales['pt'], {
        KS_VARIABLE_LABEL:'Tipo de variável',
         KS_variables_declare:'Declare %1 variável Tipo %2 Nome %3 Atribuído a %4',
         KS_variables_set:'Definir %1 variável por %2',
         KS_variables_change:'Alterar %1 modo de variável %2',
         KS_variables_value: 'variável %1',
         KS_variables_setString:'Definir variável de string %1 por %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: 'longo',
         KS_MATH_FLOAT: 'flutuar',
         KS_MATH_BOOLEAN: 'booleano',
         KS_MATH_BYTE: 'byte',
         KS_MATH_CHAR: 'char',
         KS_MATH_STRING: 'string',
         KS_MATH_UNSIGNED_INT: 'int unsigned',
         KS_MATH_WORD: 'palavra',
         KS_MATH_UNSIGNED_LONG: 'não assinado longo',
         KS_MATH_UNSIGNED_CHAR: 'caractere não assinado',
         KS_MATH_DOUBLE: 'duplo',

         KS_TEXT_LABEL:'TEXT',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'lógica',
         KS_judge:'%1 %2 %3',
         RGB_CATEGORY: 'LED RGB',
         RGB_DIGITAL: 'RGB Lamp Red#%1 R_state%2 Green#%3 G_State%4 Blue#%5 B_State%6',
         RGB_ANALOG: 'RGB Lamp Red#%1 R_analogWrite%2 Green#%3 G_analogWrite%4 Blue#%5 B_analogWrite%6',
         BUZZER_CATEGORY: 'Campainha passiva',
         BUZZER_TONE: 'Tom PIN#%1 frequência%2',
         BUZZER_TONE_D: 'Tom PIN#%1 frequência%2 duração%3',
         BUZZER_MUSIC: 'Tone PIN#%1 toca música%2',
         BUZZER_NOTONE: 'noTone%1',
     
         LM35_CATEGORY: 'Temperatura',
         LM35_READ_TEMPERATURE: 'LM35 leu o PIN da temperatura: %1',
         IR_CATEGORY: 'IR Remoto',
         IRSEND_CATEGORY: 'Envio IR',
         IR_SEND: 'IRenviar %1 PIN#%2 dados%3 bits%4',
         IR_SEND_RAW: 'IRsend(RAW) PIN#%1 Array%2 listLength%3 frequency%4',
         IR_INIT: 'PIN de inicialização remota IV#%1',
         IR_DATA: 'Dados recebidos',
         IR_READ: 'Ler os dados',
         IR_REFRESH: 'Atualizar dados',
  
         ADXL345_CATEGORY: 'Aceleração',
         ADXL345_READ: 'ADXL345 leu %1',
         DHT_CATEGORY: 'DHT',
         DHT_INIT: 'Iniciar dht %1 pino %2 modo %3',
         DHT_READ_TEMPERATURE: 'Dht %1 lê temperatura %2',
         DHT_READ_HUMIDITY: 'Dht %1 ler umidade',
         KSENCODER_CATEGORY: 'Codificador',
         KSENCODER_INIT: 'Iniciar codificador %1 DT %2 CLK %3',
         KSENCODER_READ: 'Ler codificador %1',
         KSENCODER_WRITE: 'Codificador %1 grava %2',
         KSENCODER_BUTTON: 'Ler o botão do codificador rotativo PIN# %1',
         HC_SR04_CATEGORY: 'Ultrassônico',
         HC_SR04_READ_DISTANCE: 'HC-SR04 pino de ativação %1 pino de eco %2 distância de leitura %3',
         JOYSTICK_CATEGORY: 'JoyStick',
         JOYSTICK_Z_STATE: 'Interface %1 botão(Z) do joystick foi pressionado?',
         JOYSTICK_XY_VALUE: 'ler interface %1 joystick %2 eixo',
         X: 'X',
         Y: 'Y',
         FOURDIGITCLOCKDISPLAY_CATEGORY: 'Exibição de 4 dígitos',
         FOURDIGITCLOCKDISPLAY_INIT: 'iniciar pino de exibição de 4 dígitos DIO %1 CLK %2',
         FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: 'definir brilho %1',
         FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: 'mostrar número %1',
         FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: 'exibir string %1',
         FOURDIGITCLOCKDISPLAY_DISPLAY: 'exibe %1 no bit %2',
         FOURDIGITCLOCKDISPLAY_SETPOINT: 'ponto de ajuste %1',
         FOURDIGITCLOCKDISPLAY_STATE_ON: 'ligado',
         FOURDIGITCLOCKDISPLAY_STATE_OFF: 'desligado',
         FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: 'Entrará em vigor após a próxima atualização do display.',
         FOURDIGITCLOCKDISPLAY_CLEAR: 'limpar'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ru'], {
        KS_VARIABLE_LABEL:'Тип переменной',
        KS_variables_declare:'Объявить %1 числовую переменную, тип %2, имя %3, присвоенное значение %4',
        KS_variables_declare2:'Объявить %1 строковую переменную типа %2, имя %3, присвоенное значение %4',
        KS_variables_set:'Установить переменную %1 как %2',
        KS_variables_change:'Установить  %1 режим переменной %2',
        KS_variables_value: 'Переменная %1',
        KS_variables_setString:'Установить строковую переменную %1 в %2',
        KS_global:'глобальный',
        KS_local:'локальный',
        KS_MATH_INT: 'целое число',
        KS_MATH_LONG: 'Длинное целое',
        KS_MATH_FLOAT: 'Десятичный',
        KS_MATH_BOOLEAN: 'логическое значение',
        KS_MATH_BYTE: 'Байт',
        KS_MATH_CHAR: 'Персонаж',
        KS_MATH_STRING: 'Строка',
        KS_MATH_UNSIGNED_INT: 'Целое без знака',
        KS_MATH_WORD: 'Слово',
        KS_MATH_UNSIGNED_LONG: 'Длинное целое число без знака',
        KS_MATH_UNSIGNED_CHAR: 'Беззнаковый символ',
        KS_MATH_DOUBLE: 'Число двойной точности с плавающей запятой',

        KS_TEXT_LABEL:'Текст',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL: 'Логика',
        KS_judge:'%1 %2 %3',
        RGB_CATEGORY: 'Свет RGB',
        RGB_DIGITAL: 'Уровень RGB светло-красный#%1 равен %2, зеленый#%3 равен %4, уровень синего#%5 равен %6',
        RGB_ANALOG: 'RGB светло-красный#%1 аналоговый выход%2 зеленый#%3 аналоговый выход%4 синий#%5 аналоговый выход%6',
    
        BUZZER_CATEGORY: 'Пассивный зуммер',
        BUZZER_TONE: 'Воспроизведение звукового контакта %1 на частоте %2',
        BUZZER_TONE_D: 'Воспроизвести звуковой контакт %1, частота %2, доля %3',
        BUZZER_MUSIC: 'Зуммер %1 воспроизводит музыку %2',
        BUZZER_NOTONE: 'Конец звукового контакта %1',
     
        LM35_CATEGORY: 'Температура',
        LM35_READ_TEMPERATURE: 'Чтение значения температуры LM35 с контакта: %1',
        IRSEND_CATEGORY: 'Инфракрасное излучение',
        IR_SEND: 'Инфракрасное излучение (%1) контакт %2, значение %3, номер бита %4',
        IR_SEND_RAW: 'Вывод инфракрасного излучения (RAW) %1, массив %2, длина массива %3, частота %4',
        IR_CATEGORY: 'Инфракрасный прием',
        IR_INIT: 'Инициализировать инфракрасный приемный контакт %1',
        IR_DATA: 'Получены данные инфракрасного дистанционного управления',
        IR_READ: 'Чтение данных приема инфракрасного излучения',
        IR_REFRESH: 'Обновить данные приема инфракрасного излучения',
        ADXL345_CATEGORY: 'Ускорение',
        ADXL345_READ: 'Читать ADXL345 %1',
        DHT_CATEGORY: 'Температура и влажность',
        DHT_INIT: 'Инициализировать контакт %1 %2 модели %3',
        DHT_READ_TEMPERATURE: 'dht %1 считать температуру %2',
        DHT_READ_HUMIDITY: 'dht %1 считанная влажность',
    
        KSENCODER_CATEGORY: 'Поворотный энкодер',
        KSENCODER_INIT: 'Инициализировать угловой энкодер %1, контакт DT %2 CLK %3',
        KSENCODER_READ: 'Чтение поворотного энкодера %1',
        KSENCODER_WRITE: 'Поворотному датчику %1 присвоено значение %2',
        KSENCODER_BUTTON: 'Читать значение контакта кнопки поворотного энкодера № %1',
        HC_SR04_CATEGORY: 'Ультразвук',
        HC_SR04_READ_DISTANCE: 'Триггерный контакт ультразвукового датчика %1, эхо-контакт %2, расстояние считывания %3',
        JOYSTICK_CATEGORY: 'Джойстик',
        JOYSTICK_Z_STATE: 'Нажата кнопка джойстика интерфейса %1 (Z)',
        JOYSTICK_XY_VALUE: 'Чтение интерфейса %1 джойстика %2 оси',
        X: 'X',
        Y: 'Y',
        FOURDIGITCLOCKDISPLAY_CATEGORY: '4-значная цифровая трубка',
        FOURDIGITCLOCKDISPLAY_INIT: 'Инициализировать 4-битный цифровой ламповый вывод DIO %1 CLK %2',
        FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: 'Установить яркость %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: 'Отобразить номер %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: 'Отображать символ %1',
        FOURDIGITCLOCKDISPLAY_DISPLAY: 'Отобразить %1, позиция %2',
        FOURDIGITCLOCKDISPLAY_SETPOINT: 'Уставка %1',
        FOURDIGITCLOCKDISPLAY_STATE_ON: 'Вкл.',
        FOURDIGITCLOCKDISPLAY_STATE_OFF: 'Выкл.',
        FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: 'Вступит в силу после следующего обновления дисплея.',
        FOURDIGITCLOCKDISPLAY_CLEAR: 'Очистить'
      
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        KS_VARIABLE_LABEL:'變量類型',
        KS_variables_declare:'聲明 %1 數字變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_declare2:'聲明 %1 字符串變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_set:'設置 %1 變量 為 %2',
        KS_variables_change:'設置 %1 變量 模式 %2',
        KS_variables_value: '變量 %1',
        KS_variables_setString:'設置 %1 字符串變量 為 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整數',
        KS_MATH_LONG: '長整數',
        KS_MATH_FLOAT: '小數',
        KS_MATH_BOOLEAN: '布爾',
        KS_MATH_BYTE: '字節',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '無符號整數',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '無符號長整數',
        KS_MATH_UNSIGNED_CHAR: '無符號字符',
        KS_MATH_DOUBLE: '雙精度浮點數',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'邏輯',
        KS_judge:'%1 %2 %3',
        RGB_CATEGORY: 'RGB燈',
        RGB_DIGITAL: 'RGB燈 紅#%1 電平為%2 綠#%3 電平為%4 藍#%5 電平為%6',
        RGB_ANALOG: 'RGB燈 紅#%1 模擬輸出%2 綠#%3 模擬輸出%4 藍#%5 模擬輸出%6',
     
        BUZZER_CATEGORY: '無源蜂鳴器',
        BUZZER_TONE: '播放聲音 引腳%1 頻率%2',
        BUZZER_TONE_D: '播放聲音 引腳%1 頻率%2 節拍%3',
        BUZZER_MUSIC: '蜂鳴器 引腳%1 播放音樂%2',
        BUZZER_NOTONE: '結束聲音 引腳%1',
      
        LM35_CATEGORY: '溫度',
        LM35_READ_TEMPERATURE: '讀取LM35溫度值 引腳：%1',
        IRSEND_CATEGORY: '紅外發射',
        IR_SEND: '紅外發射（%1)引腳%2 數值%3 比特數%4',
        IR_SEND_RAW: '紅外發射(RAW)引腳%1 數組%2 數組長度%3 頻率%4',
        IR_CATEGORY: '紅外接收',
        IR_INIT: '初始化紅外接收 引腳%1',
        IR_DATA: '接收到紅外遙控的數據',
        IR_READ: '讀取紅外接收數據',
        IR_REFRESH: '刷新紅外接收數據',
        ADXL345_CATEGORY: '加速度',
        ADXL345_READ: '讀取ADXL345 %1',
        DHT_CATEGORY: '溫濕度',
        DHT_INIT: '初始化 dht %1 引腳 %2 型號 %3',
        DHT_READ_TEMPERATURE: 'dht %1 讀取溫度 %2',
        DHT_READ_HUMIDITY: 'dht %1 讀取濕度',
     
        KSENCODER_CATEGORY: '旋轉編碼器',
        KSENCODER_INIT: '初始化 旋轉編碼器 %1 引腳DT %2 CLK %3',
        KSENCODER_READ: '讀取 旋轉編碼器 %1',
        KSENCODER_WRITE: '旋轉編碼器 %1 賦值為 %2',
        KSENCODER_BUTTON: '讀旋轉編碼器按鈕值 引腳# %1',
        HC_SR04_CATEGORY: '超聲波',
        HC_SR04_READ_DISTANCE: '超聲波傳感器 trig 引腳 %1 echo 引腳 %2 讀取距離 %3',
        JOYSTICK_CATEGORY: '搖桿',
        JOYSTICK_Z_STATE: '接口%1搖桿按鈕(Z)被按下',
        JOYSTICK_XY_VALUE: '讀取接口%1搖桿%2軸',
        X: 'X',
        Y :'Y',
        FOURDIGITCLOCKDISPLAY_CATEGORY: '4位數碼管',
        FOURDIGITCLOCKDISPLAY_INIT: '初始化4位數碼管引腳 DIO %1 CLK %2',
        FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: '設置亮度 %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: '顯示數字 %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: '顯示字符 %1',
        FOURDIGITCLOCKDISPLAY_DISPLAY: '顯示 %1 第 %2 位',
        FOURDIGITCLOCKDISPLAY_SETPOINT: '設置點 %1',
        FOURDIGITCLOCKDISPLAY_STATE_ON: '開',
        FOURDIGITCLOCKDISPLAY_STATE_OFF: '關',
        FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: '將在下次更新顯示後生效.',
        FOURDIGITCLOCKDISPLAY_CLEAR: '清空'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',
        RGB_CATEGORY: 'RGB灯',
        RGB_DIGITAL: 'RGB灯 红#%1 电平为%2 绿#%3 电平为%4 蓝#%5 电平为%6',
        RGB_ANALOG: 'RGB灯 红#%1 模拟输出%2 绿#%3 模拟输出%4 蓝#%5 模拟输出%6',
     
        BUZZER_CATEGORY: '无源蜂鸣器',
        BUZZER_TONE: '播放声音 引脚%1 频率%2',
        BUZZER_TONE_D: '播放声音 引脚%1 频率%2 节拍%3',
        BUZZER_MUSIC: '蜂鸣器 引脚%1 播放音乐%2',
        BUZZER_NOTONE: '结束声音 引脚%1',
      
        LM35_CATEGORY: '温度',
        LM35_READ_TEMPERATURE: '读取LM35温度值 引脚：%1',
        IRSEND_CATEGORY: '红外发射',
        IR_SEND: '红外发射（%1)引脚%2 数值%3 比特数%4',
        IR_SEND_RAW: '红外发射(RAW)引脚%1 数组%2 数组长度%3 频率%4',
        IR_CATEGORY: '红外接收',
        IR_INIT: '初始化红外接收 引脚%1',
        IR_DATA: '接收到红外遥控的数据',
        IR_READ: '读取红外接收数据',
        IR_REFRESH: '刷新红外接收数据',
        ADXL345_CATEGORY: '加速度',
        ADXL345_READ: '读取ADXL345 %1',
        DHT_CATEGORY: '温湿度',
        DHT_INIT: '初始化 dht %1 引脚 %2 型号 %3',
        DHT_READ_TEMPERATURE: 'dht %1 读取温度 %2',
        DHT_READ_HUMIDITY: 'dht %1 读取湿度',
     
        KSENCODER_CATEGORY: '旋转编码器',
        KSENCODER_INIT: '初始化 旋转编码器 %1 引脚DT %2 CLK %3',
        KSENCODER_READ: '读取 旋转编码器 %1',
        KSENCODER_WRITE: '旋转编码器 %1 赋值为 %2',
        KSENCODER_BUTTON: '读旋转编码器按钮值 引脚# %1',
        HC_SR04_CATEGORY: '超声波',
        HC_SR04_READ_DISTANCE: '超声波传感器 trig 引脚 %1 echo 引脚 %2 读取距离 %3',
        JOYSTICK_CATEGORY: '摇杆',
        JOYSTICK_Z_STATE: '接口%1摇杆按钮(Z)被按下',
        JOYSTICK_XY_VALUE: '读取接口%1摇杆%2轴',
        X: 'X',
        Y :'Y',
        FOURDIGITCLOCKDISPLAY_CATEGORY: '4位数码管',
        FOURDIGITCLOCKDISPLAY_INIT: '初始化4位数码管引脚 DIO %1 CLK %2',
        FOURDIGITCLOCKDISPLAY_SETBRIGHTNESS: '设置亮度 %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYNUMBER: '显示数字 %1',
        FOURDIGITCLOCKDISPLAY_DISPLAYSTRING: '显示字符 %1',
        FOURDIGITCLOCKDISPLAY_DISPLAY: '显示 %1 第 %2 位',
        FOURDIGITCLOCKDISPLAY_SETPOINT: '设置点 %1',
        FOURDIGITCLOCKDISPLAY_STATE_ON: '开',
        FOURDIGITCLOCKDISPLAY_STATE_OFF: '关',
        FOURDIGITCLOCKDISPLAY_SETPOINT_TOOLTIP: '将在下次更新显示后生效.',
        FOURDIGITCLOCKDISPLAY_CLEAR: '清空'
        
    });
    return Blockly;
}

exports = addMsg;
