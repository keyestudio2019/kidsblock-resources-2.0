/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED interface %1  state %2 ',
        LED_ON: 'open',
        LED_OFF: 'close',
        LED_ANALOG: 'LED  %1 analogWrite%2 ',
        BUTTON_CATEGORY: 'button',
        BUTTON_READ_STATE: 'interface %1 button was be pushed?',
        BUTTON_READ_VALUE: 'The state value of button in interface %1',
        LIGHTSENSOR_CATEGORY: 'light sensor ',
        LIGHTSENSOR_READ_VALUE: 'read the value of interface %1',
        ANALOGVOICE_CATEGORY: 'Analog voice sensor',
        ANALOGVOICE_READ_VALUE: 'read the value of interface %1',
        BUZZER_CATEGORY: 'Passive buzzer',
        BUZZER_TONE: 'Tone PIN#%1 frequency%2',
        BUZZER_TONE_D: 'Tone PIN#%1 frequency%2 duration%3',
        BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
        BUZZER_NOTONE: 'noTone%1',
        BBRGBLEDSTRIP_CATEGORY: 'RGB',
        BBRGBLEDSTRIP_INIT: 'init RGB length %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'set pixel %1 color %2',
        BBRGBLEDSTRIP_FILL: 'fill from pixel %1 count %2 with color %3',
        BBRGBLEDSTRIP_COLOR: 'RGB color R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'set brightness %1',
        RGB_CHANGE: 'set RGB pin %1 brightness%2  time of full clour change%3',
        RGB_LOOP: 'set RGB pin %1 brightness%2  time of full clour loop%3',
        BBRGBLEDSTRIP_CLEAR: 'clear all',
        BBRGBLEDSTRIP_SHOW: 'display',
        MATRIXDISPLAY_CATEGORY: ' Matrix Display',
        MatrixDisplay_INIT: 'init  Matrix display  %1',
        MatrixDisplay_DISPLAY: 'Matrix %1 displays %2 No.%3 image name %4',
        MatrixDisplay_DRAWPIXEL: ' Matrix display draw pixel x: %1 y: %2',
        MatrixDisplay_COLOR_RED: 'red',
        MatrixDisplay_COLOR_BLACK: 'black',
        MatrixDisplay_DRAWLINE: ' Matrix display draw line x0: %1 y0: %2, x1: %3 y1: %4',
        MatrixDisplay_DRAWRECTANGLE: 'Matrix display draw rectangle x: %1 y: %2 :width %3 length: %4',
        MatrixDisplay_DRAWCIRCLE: 'Matrix display draw circle x: %1 y: %2 :radius %3 ',
        MatrixDisplay_SHOWCHAR: ' Matrix display show char or number: %1',
        MatrixDisplay_SHOW_LOOP: ' Matrix display loop show : %1',
        MatrixDisplay_IMAGE: ' Matrix display image %1'
      
    });
    Object.assign(Blockly.ScratchMsgs.locales['de'], {
        KS_VARIABLE_LABEL:'Variablentyp',
        KS_variables_declare:'Deklarieren Sie %1 Variablentyp %2 Name %3 Zugewiesen an %4',
        KS_variables_set:'Variable %1 um %2 setzen',
        KS_variables_change:'Variablenmodus %1 %2 ändern',
        KS_variables_value: 'Variable %1',
        KS_variables_setString:'Setze %1 String-Variable um %2',
        KS_global:'Global',
        KS_local:'Lokal',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'lang',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'Zeichenfolge',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'Wort',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'Logik',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED-Schnittstelle %1 Zustand %2 ',
        LED_ON: 'offen',
        LED_OFF: 'schließen',
        LED_ANALOG: 'LED %1 analogWrite%2 ',
        BUTTON_CATEGORY: 'Schaltfläche',
        BUTTON_READ_STATE: 'Schnittstelle %1-Taste wurde gedrückt?',
        BUTTON_READ_VALUE: 'Der Statuswert der Schaltfläche in Schnittstelle %1',
        LIGHTSENSOR_CATEGORY: 'Lichtsensor',
        LIGHTSENSOR_READ_VALUE: 'den Wert der Schnittstelle %1 lesen',
        ANALOGVOICE_CATEGORY: 'Analoger Sprachsensor',
        ANALOGVOICE_READ_VALUE: 'den Wert der Schnittstelle %1 lesen',
        BUZZER_CATEGORY: 'Passiver Summer',
        BUZZER_TONE: 'Ton-PIN#%1 Frequenz%2',
        BUZZER_TONE_D: 'Ton-PIN#%1 Häufigkeit%2 Dauer%3',
        BUZZER_MUSIC: 'Ton PIN#%1 Musik abspielen%2',
        BUZZER_NOTONE: 'noTone%1',
        BBRGBLEDSTRIP_CATEGORY: 'RGB',
        BBRGBLEDSTRIP_INIT: 'init RGB-Länge %1 Pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'Pixel %1 Farbe %2 festlegen',
        BBRGBLEDSTRIP_FILL: 'Von Pixel %1 Anzahl %2 mit Farbe %3 füllen',
        BBRGBLEDSTRIP_COLOR: 'RGB-Farbe R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'Helligkeit %1 einstellen',
        RGB_CHANGE: 'RGB-Pin %1 Helligkeit%2 Zeitpunkt der vollständigen Farbänderung festlegen%3',
        RGB_LOOP: 'Setze RGB-Pin %1 Helligkeit%2 Zeit der vollständigen Farbschleife%3',
        BBRGBLEDSTRIP_CLEAR: 'Alles löschen',
        BBRGBLEDSTRIP_SHOW: 'Anzeige',
        MATRIXDISPLAY_CATEGORY: 'Matrix',
        MatrixDisplay_INIT: 'Matrix %1 initiieren',
        MatrixDisplay_DISPLAY: 'Matrix %1 Anzeige %2 Nr.%3 Bild name %4',
        MatrixDisplay_DRAWPIXEL: 'Matrix display draw pixel x: %1 y: %2',
        MatrixDisplay_COLOR_RED: 'rot',
        MatrixDisplay_COLOR_BLACK: 'schwarz',
        MatrixDisplay_DRAWLINE: 'Matrix display line x0: %1 y0: %2, x1: %3 y1: %4',
        MatrixDisplay_DRAWRECTANGLE: 'Matrix Display zeichnet Rechteck x: %1 y: %2 :width %3 Länge: %4',
        MatrixDisplay_DRAWCIRCLE: 'Matrix display Zeichne Kreis x: %1 y: %2 :radius %3 ',
        MatrixDisplay_SHOWCHAR: 'Matrix display show char or number: %1',
        MatrixDisplay_SHOW_LOOP: 'Matrix display loop show: %1',
        MatrixDisplay_IMAGE: 'Matrix anzeige bild %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['es'], {
        KS_VARIABLE_LABEL:'Tipo de variable',
        KS_variables_declare:'Declarar %1 variable Tipo %2 Nombre %3 Asignado a %4',
        KS_variables_set:'Establecer %1 variable por %2',
        KS_variables_change:'Cambiar %1 modo variable %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Establecer %1 variable de cadena por %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'largo',
        KS_MATH_FLOAT: 'flotante',
        KS_MATH_BOOLEAN: 'booleano',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'carácter',
        KS_MATH_STRING: 'cadena',
        KS_MATH_UNSIGNED_INT: 'int sin firmar',
        KS_MATH_WORD: 'palabra',
        KS_MATH_UNSIGNED_LONG: 'largo sin firmar',
        KS_MATH_UNSIGNED_CHAR: 'caracter sin firmar',
        KS_MATH_DOUBLE: 'doble',

        KS_TEXT_LABEL:'TEXTO',
        KS_char: 'char%1',
        KS_string: 'cadena%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'lógica',
        KS_judge:'%1 %2 %3',
        CATEGORÍA_LED: 'LED',
        LED_SET_LED_STATE: 'Interfaz LED %1 estado %2 ',
        LED_ON: 'abierto',
        LED_OFF: 'cerrar',
        LED_ANALOG: 'LED %1 escritura analógica%2 ',
        BUTTON_CATEGORY: 'botón',
        BUTTON_READ_STATE: '¿se presionó el botón de la interfaz %1?',
        BUTTON_READ_VALUE: 'El valor de estado del botón en la interfaz %1',
        LIGHTSENSOR_CATEGORY: 'sensor de luz',
        LIGHTSENSOR_READ_VALUE: 'leer el valor de la interfaz %1',
        ANALOGVOICE_CATEGORY: 'Sensor de voz analógico',
        ANALOGVOICE_READ_VALUE: 'leer el valor de la interfaz %1',
        BUZZER_CATEGORY: 'Zumbador pasivo',
        BUZZER_TONE: 'Tono PIN#%1 frecuencia%2',
        BUZZER_TONE_D: 'Tono PIN#%1 frecuencia%2 duración%3',
        BUZZER_MUSIC: 'Tono PIN#%1 reproducir música%2',
        BUZZER_NOTONE: 'sin tono%1',
        BBRGBLEDSTRIP_CATEGORY: 'RGB',
        BBRGBLEDSTRIP_INIT: 'iniciar longitud RGB %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'establecer píxel %1 color %2',
        BBRGBLEDSTRIP_FILL: 'rellenar desde el píxel %1 contar %2 con el color %3',
        BBRGBLEDSTRIP_COLOR: 'Color RGB R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'establecer brillo %1',
        RGB_CHANGE: 'establecer pin RGB %1 brillo%2 tiempo de cambio de color completo%3',
        RGB_LOOP: 'establecer pin RGB %1 brillo%2 tiempo de bucle de color completo%3',
        BBRGBLEDSTRIP_CLEAR: 'borrar todo',
        BBRGBLEDSTRIP_SHOW: 'pantalla',
        MATRIXDISPLAY_CATEGORY: 'Matriz',
        MatrixDisplay_INIT: 'iniciar pantalla de matriz %1',
        MatrixDisplay_DISPLAY: 'Matriz %1 visualización %2 No.%3 nombre de imagen %4',
        MatrixDisplay_DRAWPIXEL: 'píxel de dibujo de pantalla Matriz x: %1 y: %2',
        MatrixDisplay_COLOR_RED: 'rojo',
        MatrixDisplay_COLOR_BLACK: 'negro',
        MatrixDisplay_DRAWLINE: ' línea de dibujo de pantalla Matriz x0: %1 y0: %2, x1: %3 y1: %4',
        MatrixDisplay_DRAWRECTANGLE: 'Matriz muestra dibujar rectángulo x: %1 y: %2 :ancho %3 largo: %4',
        MatrixDisplay_DRAWCIRCLE: 'Matriz muestra dibujar círculo x: %1 y: %2 :radio %3 ',
        MatrixDisplay_SHOWCHAR: ' Matriz muestra mostrar carácter o número: %1',
        MatrixDisplay_SHOW_LOOP: ' espectáculo de bucle de visualización Matriz: %1',
        MatrixDisplay_IMAGE: 'imagen de visualización de Matriz %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['fr'], {
         KS_VARIABLE_LABEL:'Type de variable',
         KS_variables_declare:'Déclarer %1 variable Type %2 Nom %3 Attribué à %4',
         KS_variables_set: 'Définir la variable %1 par %2',
         KS_variables_change:'Changer %1 mode variable %2',
         KS_variables_value: 'variable %1',
         KS_variables_setString: 'Définir la variable chaîne %1 par %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'entier',
         KS_MATH_LONG: 'long',
         KS_MATH_FLOAT: 'flottant',
         KS_MATH_BOOLEAN: 'booléen',
         KS_MATH_BYTE: 'octet',
         KS_MATH_CHAR: 'car',
         KS_MATH_STRING: 'chaîne',
         KS_MATH_UNSIGNED_INT: 'entier non signé',
         KS_MATH_WORD: 'mot',
         KS_MATH_UNSIGNED_LONG: 'long non signé',
         KS_MATH_UNSIGNED_CHAR: 'caractère non signé',
         KS_MATH_DOUBLE: 'doubler',

         KS_TEXT_LABEL:'TEXTE',
         KS_char: 'car%1',
         KS_string: 'chaîne%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'logique',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'DEL',
         LED_SET_LED_STATE: 'interface LED %1 état %2 ',
         LED_ON: 'ouvert',
         LED_OFF: 'fermer',
         LED_ANALOG: 'LED %1 analogWrite%2 ',
         BUTTON_CATEGORY: 'bouton',
         BUTTON_READ_STATE: 'le bouton de l"interface %1 a été enfoncé?',
         BUTTON_READ_VALUE: 'La valeur d"état du bouton dans l"interface %1',
         LIGHTSENSOR_CATEGORY: 'capteur de lumière',
         LIGHTSENSOR_READ_VALUE: 'Lire la valeur de l"interface %1',
         ANALOGVOICE_CATEGORY: 'Capteur vocal analogique',
         ANALOGVOICE_READ_VALUE: 'lire la valeur de l"interface %1',
         BUZZER_CATEGORY: "Sonnerie passive",
         BUZZER_TONE: 'Tonalité PIN #%1 fréquence%2',
         BUZZER_TONE_D: 'Tonalité PIN #%1 fréquence%2 durée%3',
         BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
         BUZZER_NOTONE: 'pas de tonalité%1',
         BBRGBLEDSTRIP_CATEGORY: 'RVB',
         BBRGBLEDSTRIP_INIT: 'init longueur RVB %1 broche %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'définir le pixel %1 couleur %2',
         BBRGBLEDSTRIP_FILL: 'remplir à partir du pixel %1 compter %2 avec la couleur %3',
         BBRGBLEDSTRIP_COLOR: 'Couleur RVB R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'définir la luminosité %1',
         RGB_CHANGE: 'définir la broche RVB %1 luminosité%2 temps de changement complet de couleur%3',
         RGB_LOOP: 'définir la broche RVB %1 luminosité%2 temps de boucle de couleur complète%3',
         BBRGBLEDSTRIP_CLEAR: 'tout effacer',
         BBRGBLEDSTRIP_SHOW: 'affichage',
         MATRIXDISPLAY_CATEGORY: 'Matrice',
         MatrixDisplay_INIT: 'affichage de la matrice d"initialisation %1',
         MatrixDisplay_DISPLAY: 'Matrice %1 affichage %2 N°%3 nom de l"image %4',
         MatrixDisplay_DRAWPIXEL: ' affichage Matrice dessiner pixel x : %1 y : %2',
         MatrixDisplay_COLOR_RED: 'rouge',
         MatrixDisplay_COLOR_BLACK: 'noir',
         MatrixDisplay_DRAWLINE: ' affichage Matrice dessiner une ligne x0: %1 y0: %2, x1: %3 y1: %4',
         MatrixDisplay_DRAWRECTANGLE: 'Matrice display draw rectangle x: %1 y: %2 :width %3 length: %4',
         MatrixDisplay_DRAWCIRCLE: 'affichage Matrice dessine cercle x: %1 y: %2 :rayon %3 ',
         MatrixDisplay_SHOWCHAR: 'affichage Matrice afficher le caractère ou le nombre: %1',
         MatrixDisplay_SHOW_LOOP: 'affichage de la boucle d"affichage Matrice: %1',
         MatrixDisplay_IMAGE: 'image d"affichage Matrice %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ja'], {
        KS_VARIABLE_LABEL:'変数タイプ',
         KS_variables_declare:'%1 変数を宣言します。タイプ %2 名前 %3 を %4 に割り当てます',
         KS_variables_set:'%1 変数を %2 で設定',
         KS_variables_change:'%1 変数モード %2 を変更',
         KS_variables_value: '変数 %1',
         KS_variables_setString:'%1 文字列変数を %2 で設定',
         KS_global:'グローバル',
         KS_local:'ローカル',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: '長い',
         KS_MATH_FLOAT: '浮動小数点',
         KS_MATH_BOOLEAN: 'ブール値',
         KS_MATH_BYTE: 'バイト',
         KS_MATH_CHAR: '文字',
         KS_MATH_STRING: '文字列',
         KS_MATH_UNSIGNED_INT: '符号なし整数',
         KS_MATH_WORD: '単語',
         KS_MATH_UNSIGNED_LONG: '符号なしロング',
         KS_MATH_UNSIGNED_CHAR: '符号なし文字',
         KS_MATH_DOUBLE: '倍精度',

         KS_TEXT_LABEL:'テキスト',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'ロジック',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'LED インターフェイス %1 状態 %2 ',
         LED_ON: '開く',
         LED_OFF: '閉じる',
         LED_ANALOG: 'LED %1 アナログ書き込み%2 ',
         BUTTON_CATEGORY: 'ボタン',
         BUTTON_READ_STATE: 'インターフェイス %1 ボタンが押されました?',
         BUTTON_READ_VALUE: 'インターフェイス %1 のボタンの状態値',
         LIGHTSENSOR_CATEGORY: '光センサー ',
         LIGHTSENSOR_READ_VALUE: 'インターフェイス %1 の値を読み取ります',
         ANALOGVOICE_CATEGORY: 'アナログ音声センサー',
         ANALOGVOICE_READ_VALUE: 'インターフェイス %1 の値を読み取ります',
         BUZZER_CATEGORY: 'パッシブブザー',
         BUZZER_TONE: 'トーン PIN#%1 頻度%2',
         BUZZER_TONE_D: 'トーン PIN#%1 頻度%2 期間%3',
         BUZZER_MUSIC: 'トーン PIN#%1 音楽%2 を再生',
         BUZZER_NOTONE: 'noTone%1',
         BBRGBLEDSTRIP_CATEGORY: 'RGB',
         BBRGBLEDSTRIP_INIT: '初期化 RGB 長さ %1 ピン %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'ピクセル %1 カラー %2 を設定',
         BBRGBLEDSTRIP_FILL: 'ピクセル %1 カウント %2 から色 %3 で塗りつぶします',
         BBRGBLEDSTRIP_COLOR: 'RGB カラー R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: '明るさを設定 %1',
         RGB_CHANGE: 'RGB ピン %1 明るさ%2 の全色変化時間%3 を設定',
         RGB_LOOP: '全色ループ%3のRGBピン%1の明るさ%2時間を設定',
         BBRGBLEDSTRIP_CLEAR: 'すべてクリア',
         BBRGBLEDSTRIP_SHOW: '表示',
         MATRIXDISPLAY_CATEGORY: ' マトリックス',
         MatrixDisplay_INIT: 'マトリックス 初期化 %1',
         MatrixDisplay_DISPLAY: 'マトリクス %1 表示 %2 No.%3 画像名 %4',
         MatrixDisplay_DRAWPIXEL: ' マトリックス 表示描画ピクセル x: %1 y: %2',
         MatrixDisplay_COLOR_RED: '赤',
         MatrixDisplay_COLOR_BLACK: '黒',
         MatrixDisplay_DRAWLINE: ' マトリックス表示描画線 x0: %1 y0: %2, x1: %3 y1: %4',
         MatrixDisplay_DRAWRECTANGLE: 'マトリックス 表示描画四角形 x: %1 y: %2 :幅 %3 長さ: %4',
         MatrixDisplay_DRAWCIRCLE: 'マトリックス表示描画円 x: %1 y: %2 :半径 %3 ',
         MatrixDisplay_SHOWCHAR: ' マトリックス 表示は文字または数値を表示します: %1',
         MatrixDisplay_SHOW_LOOP: ' マトリックス 表示ループ表示 : %1',
         MatrixDisplay_IMAGE: ' マトリックス表示イメージ %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ko'], {
        KS_VARIABLE_LABEL:'변수 유형',
         KS_variables_declare:'%1 변수 유형 %2 이름 %3 선언 %4에 할당됨',
         KS_variables_set:'%1 변수를 %2로 설정',
         KS_variables_change:'%1 변수 모드 %2 변경',
         KS_variables_value: '변수 %1',
         KS_variables_setString:'%1 문자열 변수를 %2로 설정',
         KS_global:'글로벌',
         KS_local:'로컬',
         KS_MATH_INT: '정수',
         KS_MATH_LONG: '긴',
         KS_MATH_FLOAT: '부동',
         KS_MATH_BOOLEAN: '부울',
         KS_MATH_BYTE: '바이트',
         KS_MATH_CHAR: '문자',
         KS_MATH_STRING: '문자열',
         KS_MATH_UNSIGNED_INT: '부호 없는 정수',
         KS_MATH_WORD: '단어',
         KS_MATH_UNSIGNED_LONG: '부호 없는 롱',
         KS_MATH_UNSIGNED_CHAR: '부호 없는 문자',
         KS_MATH_DOUBLE: '더블',

         KS_TEXT_LABEL:'텍스트',
         KS_char: '문자%1',
         KS_string: '문자열%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'논리',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'LED 인터페이스 %1 상태 %2',
         LED_ON: '열기',
         LED_OFF: '닫기',
         LED_ANALOG: 'LED %1 analogWrite%2 ',
         BUTTON_CATEGORY: '버튼',
         BUTTON_READ_STATE: '인터페이스 %1 버튼이 눌렸습니까?',
         BUTTON_READ_VALUE: '인터페이스 %1에 있는 버튼의 상태 값',
         LIGHTSENSOR_CATEGORY: '광센서',
         LIGHTSENSOR_READ_VALUE: '인터페이스 %1의 값 읽기',
         ANALOGVOICE_CATEGORY: '아날로그 음성 센서',
         ANALOGVOICE_READ_VALUE: '인터페이스 %1의 값 읽기',
         BUZZER_CATEGORY: '패시브 버저',
         BUZZER_TONE: '톤 PIN#%1 주파수%2',
         BUZZER_TONE_D: 'Tone PIN#%1 주파수%2 지속시간%3',
         BUZZER_MUSIC: 'Tone PIN#%1 음악 재생%2',
         BUZZER_NOTONE: '노톤%1',
         BBRGBLEDSTRIP_CATEGORY: 'RGB',
         BBRGBLEDSTRIP_INIT: '초기화 RGB 길이 %1 핀 %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: '픽셀 %1 색상 %2 설정',
         BBRGBLEDSTRIP_FILL: '색상 %3로 픽셀 %1 카운트 %2에서 채우기',
         BBRGBLEDSTRIP_COLOR: 'RGB 색상 R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: '밝기 %1 설정',
         RGB_CHANGE: 'RGB 핀 %1 밝기%2 전체 색상 변경 시간%3 설정',
         RGB_LOOP: 'RGB 핀 %1 밝기%2 풀 클로어 루프 시간%3 설정',
         BBRGBLEDSTRIP_CLEAR: '모두 지우기',
         BBRGBLEDSTRIP_SHOW: '디스플레이',
         MATRIXDISPLAY_CATEGORY: ' 매트릭스',
         MatrixDisplay_INIT: '매트릭스 디스플레이 %1 초기화',
         MatrixDisplay_DISPLAY: '매트릭스 %1 디스플레이 %2 번호%3 이미지 이름 %4',
         MatrixDisplay_DRAWPIXEL: ' 매트릭스 디스플레이 그리기 픽셀 x: %1 y: %2',
         MatrixDisplay_COLOR_RED: '빨간색',
         MatrixDisplay_COLOR_BLACK: '검은색',
         MatrixDisplay_DRAWLINE: ' 매트릭스 디스플레이 그리기 선 x0: %1 y0: %2, x1: %3 y1: %4',
         MatrixDisplay_DRAWRECTANGLE: '매트릭스 디스플레이 그리기 사각형 x: %1 y: %2 :너비 %3 길이: %4',
         MatrixDisplay_DRAWCIRCLE: '매트릭스 디스플레이 그리기 원 x: %1 y: %2 :반지름 %3 ',
         MatrixDisplay_SHOWCHAR: ' 매트릭스 디스플레이 표시 문자 또는 숫자: %1',
         MatrixDisplay_SHOW_LOOP: ' 매트릭스 디스플레이 루프 쇼: %1',
         MatrixDisplay_IMAGE: ' 매트릭스 디스플레이 이미지 %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['pl'], {
        KS_VARIABLE_LABEL:'Typ zmiennej',
        KS_variables_declare:'Deklaracja %1 zmiennej Typ %2 Nazwa %3 Przypisana do %4',
        KS_variables_set:'Ustaw zmienną %1 na %2',
        KS_variables_change:'Zmień tryb zmiennej %1 %2',
        KS_variables_value: 'zmienna %1',
        KS_variables_setString:'Ustaw zmienną łańcuchową %1 o %2',
        KS_global:'Globalny',
        KS_local:'Lokalny',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'długi',
        KS_MATH_FLOAT: 'pływa',
        KS_MATH_BOOLEAN: 'wartość logiczna',
        KS_MATH_BYTE: 'bajt',
        KS_MATH_CHAR: 'znak',
        KS_MATH_STRING: 'ciąg znaków',
        KS_MATH_UNSIGNED_INT: 'bez znaku int',
        KS_MATH_WORD: 'słowo',
        KS_MATH_UNSIGNED_LONG: 'długi bez znaku',
        KS_MATH_UNSIGNED_CHAR: 'znak bez znaku',
        KS_MATH_DOUBLE: 'podwójne',

        KS_TEXT_LABEL:'TEKST',
        KS_char: 'znak%1',
        KS_string: 'ciąg%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logika',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'Interfejs LED %1 stan %2',
        LED_ON: 'otwarty',
        LED_OFF: 'zamknij',
        LED_ANALOG: 'LED %1 analogWrite%2',
        BUTTON_CATEGORY: 'przycisk',
        BUTTON_READ_STATE: 'przycisk %1 interfejsu został wciśnięty?',
        BUTTON_READ_VALUE: 'Wartość stanu przycisku w interfejsie %1',
        LIGHTSENSOR_CATEGORY: 'czujnik światła',
        LIGHTSENSOR_READ_VALUE: 'odczytaj wartość interfejsu %1',
        ANALOGVOICE_CATEGORY: 'Analogowy czujnik głosu',
        ANALOGVOICE_READ_VALUE: 'odczytaj wartość interfejsu %1',
        BUZZER_CATEGORY: 'Brzęczyk pasywny',
        BUZZER_TONE: 'Ton PIN#%1 częstotliwość%2',
        BUZZER_TONE_D: 'Ton PIN#%1 częstotliwość%2 czas trwania%3',
        BUZZER_MUSIC: 'Ton PIN#%1 odtwarzanie muzyki%2',
        BUZZER_NOTONE: 'brak tonu%1',
        BBRGBLEDSTRIP_CATEGORY: 'RGB',
        BBRGBLEDSTRIP_INIT: 'początkowa długość RGB %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'ustaw piksel %1 kolor %2',
        BBRGBLEDSTRIP_FILL: 'wypełnij piksel %1 liczba %2 kolorem %3',
        BBRGBLEDSTRIP_COLOR: 'Kolor RGB R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'ustaw jasność %1',
        RGB_CHANGE: 'ustaw pin RGB %1 jasność%2 czas pełnej zmiany koloru%3',
        RGB_LOOP: 'ustaw pin RGB %1 jasność%2 czas pełnej pętli koloru%3',
        BBRGBLEDSTRIP_CLEAR: 'wyczyść wszystko',
        BBRGBLEDSTRIP_SHOW: 'wyświetlanie',
        MATRIXDISPLAY_CATEGORY: 'Macierz',
        MatrixDisplay_INIT: 'wyświetlanie Macierz początkowej %1',
        MatrixDisplay_DISPLAY: 'Macierz %1 wyświetlacz %2 Nr%3 nazwa obrazu %4',
        MatrixDisplay_DRAWPIXEL: 'wyświetlacz Macierz rysuje piksel x: %1 y: %2',
        MatrixDisplay_COLOR_RED: 'czerwony',
        MatrixDisplay_COLOR_BLACK: 'czarny',
        MatrixDisplay_DRAWLINE: ' Macierz wyświetla linię rysowania x0: %1 y0: %2, x1: %3 y1: %4',
        MatrixDisplay_DRAWRECTANGLE: 'wyświetlacz Macierz rysuje prostokąt x: %1 y: %2 :szerokość %3 długość: %4',
        MatrixDisplay_DRAWCIRCLE: 'Macierz display rysuje okrąg x: %1 y: %2:promień %3',
        MatrixDisplay_SHOWCHAR: 'wyświetlacz Macierz pokazuje znak lub numer: %1',
        MatrixDisplay_SHOW_LOOP: 'pokaz pętli wyświetlacza Macierz: %1',
        MatrixDisplay_IMAGE: 'Macierz wyświetla obraz %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['pt'], {
        KS_VARIABLE_LABEL:'Tipo de variável',
         KS_variables_declare:'Declare %1 variável Tipo %2 Nome %3 Atribuído a %4',
         KS_variables_set:'Definir %1 variável por %2',
         KS_variables_change:'Alterar %1 modo de variável %2',
         KS_variables_value: 'variável %1',
         KS_variables_setString:'Definir variável de string %1 por %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: 'longo',
         KS_MATH_FLOAT: 'flutuar',
         KS_MATH_BOOLEAN: 'booleano',
         KS_MATH_BYTE: 'byte',
         KS_MATH_CHAR: 'char',
         KS_MATH_STRING: 'string',
         KS_MATH_UNSIGNED_INT: 'int unsigned',
         KS_MATH_WORD: 'palavra',
         KS_MATH_UNSIGNED_LONG: 'não assinado longo',
         KS_MATH_UNSIGNED_CHAR: 'caractere não assinado',
         KS_MATH_DOUBLE: 'duplo',

         KS_TEXT_LABEL:'TEXT',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'lógica',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'interface LED %1 estado %2 ',
         LED_ON: 'aberto',
         LED_OFF: 'fechar',
         LED_ANALOG: 'LED %1 analogWrite%2 ',
         BUTTON_CATEGORY: 'botão',
         BUTTON_READ_STATE: 'botão da interface %1 foi pressionado?',
         BUTTON_READ_VALUE: 'O valor do estado do botão na interface %1',
         LIGHTSENSOR_CATEGORY: 'sensor de luz ',
         LIGHTSENSOR_READ_VALUE: 'ler o valor da interface %1',
         ANALOGVOICE_CATEGORY: 'Sensor de voz analógico',
         ANALOGVOICE_READ_VALUE: 'ler o valor da interface %1',
         BUZZER_CATEGORY: 'Campainha passiva',
         BUZZER_TONE: 'Tom PIN#%1 frequência%2',
         BUZZER_TONE_D: 'Tom PIN#%1 frequência%2 duração%3',
         BUZZER_MUSIC: 'Tone PIN#%1 toca música%2',
         BUZZER_NOTONE: 'noTone%1',
         BBRGBLEDSTRIP_CATEGORY: 'RGB',
         BBRGBLEDSTRIP_INIT: 'comprimento RGB inicial %1 pino %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'definir pixel %1 cor %2',
         BBRGBLEDSTRIP_FILL: 'preencher do pixel %1 contagem %2 com a cor %3',
         BBRGBLEDSTRIP_COLOR: 'Cor RGB R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'definir brilho %1',
         RGB_CHANGE: 'definir o pino RGB %1 brilho%2 tempo de mudança de cor total%3',
         RGB_LOOP: 'definir o pino RGB %1 brilho%2 tempo do loop de clour completo%3',
         BBRGBLEDSTRIP_CLEAR: 'limpar tudo',
         BBRGBLEDSTRIP_SHOW: 'exibir',
         MATRIXDISPLAY_CATEGORY: 'Matriz',
         MatrixDisplay_INIT: 'inicializar exibição de matriz %1',
         MatrixDisplay_DISPLAY: 'Matriz %1 exibição %2 Nº%3 nome da imagem %4',
         MatrixDisplay_DRAWPIXEL: 'Matriz display desenha pixel x: %1 y: %2',
         MatrixDisplay_COLOR_RED: 'vermelho',
         MatrixDisplay_COLOR_BLACK: 'preto',
         MatrixDisplay_DRAWLINE: 'Matriz display draw line x0: %1 y0: %2, x1: %3 y1: %4',
         MatrixDisplay_DRAWRECTANGLE: 'Matriz display desenhar retângulo x: %1 y: %2 :largura %3 comprimento: %4',
         MatrixDisplay_DRAWCIRCLE: 'Matriz display desenha círculo x: %1 y: %2 :radius %3 ',
         MatrixDisplay_SHOWCHAR: 'exibição Matriz mostra caractere ou número: %1',
         MatrixDisplay_SHOW_LOOP: 'Matriz display loop show: %1',
         MatrixDisplay_IMAGE: ' imagem de exibição Matriz %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ru'], {
        KS_VARIABLE_LABEL: 'Тип переменной',
         KS_variables_declare:'Объявить переменную %1 Тип %2 Имя %3 Назначено %4',
         KS_variables_set:'Установить переменную %1 на %2',
         KS_variables_change:'Изменить режим переменной %1 %2',
         KS_variables_value: 'переменная %1',
         KS_variables_setString:'Установить %1 строковую переменную на %2',
         KS_global: 'Глобальный',
         KS_local: 'Местный',
         KS_MATH_INT: 'целое',
         KS_MATH_LONG: 'длинный',
         KS_MATH_FLOAT: 'плавающая',
         KS_MATH_BOOLEAN: 'логическое значение',
         KS_MATH_BYTE: 'байт',
         KS_MATH_CHAR: 'символ',
         KS_MATH_STRING: 'строка',
         KS_MATH_UNSIGNED_INT: 'целое число без знака',
         KS_MATH_WORD: 'слово',
         KS_MATH_UNSIGNED_LONG: 'длинное без знака',
         KS_MATH_UNSIGNED_CHAR: 'беззнаковый символ',
         KS_MATH_DOUBLE: 'двойной',

         KS_TEXT_LABEL:'TEKCT',
         KS_char: 'символ%1',
         KS_string: 'строка%1',
         KS_data: '%1',

         KS_LOGIC_LABEL: 'логика',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'Светодиодный интерфейс %1, состояние %2',
         LED_ON: 'открыто',
         LED_OFF: 'закрыть',
         LED_ANALOG: 'LED %1 AnalogWrite%2 ',
         BUTTON_CATEGORY: 'кнопка',
         BUTTON_READ_STATE: 'кнопка интерфейса %1 была нажата?',
         BUTTON_READ_VALUE: 'Значение состояния кнопки в интерфейсе %1',
         LIGHTSENSOR_CATEGORY: 'датчик освещенности',
         LIGHTSENSOR_READ_VALUE: 'прочитать значение интерфейса %1',
         ANALOGVOICE_CATEGORY: 'Аналоговый датчик голоса',
         ANALOGVOICE_READ_VALUE: 'прочитать значение интерфейса %1',
         BUZZER_CATEGORY: 'Пассивный зуммер',
         BUZZER_TONE: 'Тон PIN#%1, частота%2',
         BUZZER_TONE_D: 'Тональный PIN-код #%1, частота%2, продолжительность%3',
         BUZZER_MUSIC: 'Тон PIN#%1 для воспроизведения музыки%2',
         BUZZER_NOTONE: 'noTone%1',
         BBRGBLEDSTRIP_CATEGORY: 'RGB',
         BBRGBLEDSTRIP_INIT: 'инициальная длина RGB %1 вывод %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'установить для пикселя %1 цвет %2',
         BBRGBLEDSTRIP_FILL: 'залить от пикселя %1 отсчета %2 цветом %3',
         BBRGBLEDSTRIP_COLOR: 'Цвет RGB R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'установить яркость%1',
         RGB_CHANGE: 'установить контакт RGB %1, яркость%2, время полного изменения цвета%3',
         RGB_LOOP: 'установить пин RGB %1, яркость%2, время полного цикла стирания%3',
         BBRGBLEDSTRIP_CLEAR: 'очистить все',
         BBRGBLEDSTRIP_SHOW: 'отображать',
         MATRIXDISPLAY_CATEGORY: 'матрицы светильник',
         MatrixDisplay_INIT: 'инициализировать инструмент матрицы %1',
         MatrixDisplay_DISPLAY: 'матрицы %1 отображение %2 №%3 имя изображения %4',
         MatrixDisplay_DRAWPIXEL: 'пиксель отрисовки дисплея матрицы x: %1 y: %2',
         MatrixDisplay_COLOR_RED: 'красный',
         MatrixDisplay_COLOR_BLACK: 'черный',
         MatrixDisplay_DRAWLINE: 'линия рисования отображения матрицы x0: %1 y0: %2, x1: %3 y1: %4',
         MatrixDisplay_DRAWRECTANGLE: 'прямоугольник рисования отображения матрицы x: %1 y: %2 :width %3 длина: %4',
         MatrixDisplay_DRAWCIRCLE: 'отображение матрицы рисует круг x: %1 y: %2 :радиус %3 ',
         MatrixDisplay_SHOWCHAR: 'отображение матрицы показывает символ или число: %1',
         MatrixDisplay_SHOW_LOOP: 'показ цикла отображения матрицы: %1',
         MatrixDisplay_IMAGE: 'отображаемое изображение матрицы %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        KS_VARIABLE_LABEL:'變量類型',
        KS_variables_declare:'聲明 %1 數字變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_declare2:'聲明 %1 字符串變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_set:'設置 %1 變量 為 %2',
        KS_variables_change:'設置 %1 變量 模式 %2',
        KS_variables_value: '變量 %1',
        KS_variables_setString:'設置 %1 字符串變量 為 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整數',
        KS_MATH_LONG: '長整數',
        KS_MATH_FLOAT: '小數',
        KS_MATH_BOOLEAN: '布爾',
        KS_MATH_BYTE: '字節',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '無符號整數',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '無符號長整數',
        KS_MATH_UNSIGNED_CHAR: '無符號字符',
        KS_MATH_DOUBLE: '雙精度浮點數',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'邏輯',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED燈 %1 狀態為 %2',
        LED_ON: '點亮',
        LED_OFF: '熄滅',
        LED_ANALOG: 'LED燈 %1 模擬輸出%2',
        BUTTON_CATEGORY: '按鍵開關',
        BUTTON_READ_STATE: '按鍵 %1 是否被按下？ ',
        BUTTON_READ_VALUE: '按鍵 %1 的狀態值',
        LIGHTSENSOR_CATEGORY: '光線傳感器',
        LIGHTSENSOR_READ_VALUE: '讀取接口 %1光線強度',
        ANALOGVOICE_CATEGORY: '聲音傳感器',
        ANALOGVOICE_READ_VALUE: '讀取接口 %1 聲音強度',
        BUZZER_CATEGORY: '無源蜂鳴器',
        BUZZER_TONE: '播放聲音 引腳%1 頻率%2',
        BUZZER_TONE_D: '播放聲音 引腳%1 頻率%2 節拍%3',
        BUZZER_MUSIC: '蜂鳴器 引腳%1 播放音樂%2',
        BUZZER_NOTONE: '結束聲音 引腳%1',
        BBRGBLEDSTRIP_CATEGORY: 'RGB',
     
        BBRGBLEDSTRIP_INIT: '初始化RGB 燈顆數 %1 引腳 %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: '設置像素 %1 顏色 %2',
        BBRGBLEDSTRIP_FILL: '從像素 %1 開始 到像素 %2 顏色 %3',
        BBRGBLEDSTRIP_COLOR: 'RGB 顏色 R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: '設置亮度 %1',
        RGB_CHANGE: '設置RGB引腳%1 亮度%2  七彩變化時間%3',
        RGB_LOOP: '設置RGB引腳%1 亮度%2  七彩循環時間%3',
        BBRGBLEDSTRIP_CLEAR: '清除所有',
        BBRGBLEDSTRIP_SHOW: '顯示', 
        MATRIXDISPLAY_CATEGORY: '點陣屏',
        MatrixDisplay_INIT: '初始化點陣屏 %1',
        MatrixDisplay_DISPLAY: '點陣屏%1 顯示%2 第%3組圖案 名稱%4',
        MatrixDisplay_DRAWPIXEL: '點陣屏繪製點 x: %1 y: %2 ',
        MatrixDisplay_COLOR_RED: '紅色',
        MatrixDisplay_COLOR_BLACK: '黑色',
        MatrixDisplay_DRAWLINE: '點陣屏繪製直線 x0: %1 y0: %2, x1: %3 y1: %4',
        MatrixDisplay_DRAWRECTANGLE: '點陣屏繪製長方形 x: %1 y: %2 寬: %3 長: %4',
        MatrixDisplay_DRAWCIRCLE: '點陣屏繪製圓形 x: %1 y: %2 半徑: %3 ',
        MatrixDisplay_SHOWCHAR: '點陣屏 顯示字符或數字: %1',
        MatrixDisplay_SHOW_LOOP: '點陣屏 滾動顯示: %1',
        MatrixDisplay_IMAGE: '點陣屏顯示圖片 %1'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED灯 %1 状态为 %2',
        LED_ON: '点亮',
        LED_OFF: '熄灭',
        LED_ANALOG: 'LED灯 %1 模拟输出%2',
        BUTTON_CATEGORY: '按键开关',
        BUTTON_READ_STATE: '按键 %1 是否被按下？',
        BUTTON_READ_VALUE: '按键 %1 的状态值',
        LIGHTSENSOR_CATEGORY: '光线传感器',
        LIGHTSENSOR_READ_VALUE: '读取接口 %1光线强度',
        ANALOGVOICE_CATEGORY: '声音传感器',
        ANALOGVOICE_READ_VALUE: '读取接口 %1 声音强度',
        BUZZER_CATEGORY: '无源蜂鸣器',
        BUZZER_TONE: '播放声音 引脚%1 频率%2',
        BUZZER_TONE_D: '播放声音 引脚%1 频率%2 节拍%3',
        BUZZER_MUSIC: '蜂鸣器 引脚%1 播放音乐%2',
        BUZZER_NOTONE: '结束声音 引脚%1',
        BBRGBLEDSTRIP_CATEGORY: 'RGB',
     
        BBRGBLEDSTRIP_INIT: '初始化RGB 灯颗数 %1 引脚 %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: '设置像素 %1 颜色 %2',
        BBRGBLEDSTRIP_FILL: '从像素 %1 开始 到像素 %2 颜色 %3',
        BBRGBLEDSTRIP_COLOR: 'RGB 颜色 R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: '设置亮度 %1',
        RGB_CHANGE: '设置RGB引脚%1 亮度%2  七彩变化时间%3',
        RGB_LOOP: '设置RGB引脚%1 亮度%2  七彩循环时间%3',
        BBRGBLEDSTRIP_CLEAR: '清除所有',
        BBRGBLEDSTRIP_SHOW: '显示', 
        MATRIXDISPLAY_CATEGORY: '点阵屏',
        MatrixDisplay_INIT: '初始化点阵屏 %1',
        MatrixDisplay_DISPLAY: '点阵屏%1 显示%2 第%3组图案 名称%4',
        MatrixDisplay_DRAWPIXEL: '点阵屏绘制点 x: %1 y: %2 ',
        MatrixDisplay_COLOR_RED: '红色',
        MatrixDisplay_COLOR_BLACK: '黑色',
        MatrixDisplay_DRAWLINE: '点阵屏绘制直线 x0: %1 y0: %2, x1: %3 y1: %4',
        MatrixDisplay_DRAWRECTANGLE: '点阵屏绘制长方形 x: %1 y: %2 宽: %3 长: %4',
        MatrixDisplay_DRAWCIRCLE: '点阵屏绘制圆形 x: %1 y: %2 半径: %3 ',
        MatrixDisplay_SHOWCHAR: '点阵屏 显示字符或数字: %1',
        MatrixDisplay_SHOW_LOOP: '点阵屏 滚动显示: %1',
        MatrixDisplay_IMAGE: '点阵屏显示图片 %1' 
    });
    return Blockly;
}

exports = addMsg;
