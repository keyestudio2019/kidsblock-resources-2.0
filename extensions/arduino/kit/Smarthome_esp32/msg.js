/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {

     
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',
        BT_SERIAL_CATEGORY: 'Read Bluetooth',
        BLE_DATA: 'Serial readStringUntil #',
        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: 'Passive buzzer',
        BUZZER_TONE: 'Tone PIN#%1 frequency%2',
        BUZZER_TONE_D: 'Tone PIN#%1 frequency%2 duration%3',
        BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
        BUZZER_NOTONE: 'noTone%1',
        MOTOR130_CATEGORY: 'Small fan',
        MOTOR130: 'Small fan INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'servo',
        KS_SERVO1_ANGLE: 'servo1 PIN#%1 channel%2 degree%3 delay%4',
        KS_SERVO1_READ: 'servo1 PIN#%1 read degree',
        KS_SERVO2_ANGLE: 'servo2 PIN#%1 channel%2 degree%3 delay%4',
        KS_SERVO2_READ: 'servo2 PIN#%1 read degree',
        HC_SR04_CATEGORY: 'Ultrasonic',
        HC_SR04_READ_DISTANCE: 'HC-SR04 trig pin %1 echo pin %2 read distance %3',
        BBRGBLEDSTRIP_CATEGORY: 'RGB LED ',
        BBRGBLEDSTRIP_INIT: 'init RGB LED length %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'set pixel %1 color %2',
        BBRGBLEDSTRIP_FILL: 'fill from pixel %1 count %2 with color %3',
        BBRGBLEDSTRIP_COLOR: 'RGB LED color R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'set brightness %1',
        BBRGBLEDSTRIP_CLEAR: 'clear all',
        BBRGBLEDSTRIP_SHOW: 'refresh',
        RC522_CATEGORY: 'RFID module',
        RC522_INIT: 'init RFID',
        RC522_READ: 'Read the card value',
        DHT_CATEGORY: 'Temperature and humidity',
        DHT_init: ' DHT pin %1 mode %2',
        KE_DHT: ' DHT get %1',
        LCD_CATEGORY: 'LCD1602 IIC',
        LCD_INIT: 'init lcd I2C address %1',
        LCD_SETCURSORPOSITION: 'set lcd cursor position x: %1 y: %2',
        LCD_PRINT: 'lcd print %1',
        LCD_CLEAR: 'clear lcd',
        LCD_SETBACKLIGHT: 'set lcd back light %1',
        LCD_SATE_ON: 'on',
        LCD_SATE_OFF: 'off',
        LCD_SETCURSORSTYLE: 'set lcd cursor %1 style %2',
        LCD_SATE_DISPLAY: 'display',
        LCD_SATE_HIDE: 'hide',
        LCD_STYLE_BLINK: 'blink',
        LCD_STYLE_NOBLINK: 'no-blink',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: 'wifi connect ssid:%1 password:%2',
        WIFI_READ: 'WiFi read',
        CLIENT_PRINT: ' WIFI print %1',
        DHT_PRINT: ' WIFI print DHT %1', 

     

    });
    Object.assign(Blockly.ScratchMsgs.locales['de'], {
        KS_VARIABLE_LABEL:'Variablentyp',
        KS_variables_declare:'Deklarieren Sie %1 Variablentyp %2 Name %3 Zugewiesen an %4',
        KS_variables_set:'Variable %1 um %2 setzen',
        KS_variables_change:'Variablenmodus %1 %2 ändern',
        KS_variables_value: 'Variable %1',
        KS_variables_setString:'Setze %1 String-Variable um %2',
        KS_global:'Global',
        KS_local:'Lokal',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'lang',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'Zeichenfolge',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'Wort',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',
        BT_SERIAL_CATEGORY: 'Bluetooth lesen',
        BLE_DATA: 'Serial readStringUntil #',
        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'Logik',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: 'Passiver Summer',
        BUZZER_TONE: 'Ton-PIN#%1 Frequenz%2',
        BUZZER_TONE_D: 'Ton-PIN#%1 Häufigkeit%2 Dauer%3',
        BUZZER_MUSIC: 'Ton PIN#%1 Musik abspielen%2',
        BUZZER_NOTONE: 'noTone%1',
        MOTOR130_CATEGORY: 'Kleiner Lüfter',
        MOTOR130: 'Kleiner Lüfter INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'Servo',
        KS_SERVO1_ANGLE: 'servo1 PIN#%1 Kanal%2 Grad%3 Verzögerung%4',
        KS_SERVO1_READ: 'servo1 PIN#%1 Lesegrad',
        KS_SERVO2_ANGLE: 'servo2 PIN#%1 Kanal%2 Grad%3 Verzögerung%4',
        KS_SERVO2_READ: 'servo2 PIN#%1 Lesegrad',
        HC_SR04_CATEGORY: 'Ultraschall',
        HC_SR04_READ_DISTANCE: 'HC-SR04 Trig-Pin %1 Echo-Pin %2 Leseabstand %3',
        BBRGBLEDSTRIP_CATEGORY: 'RGB-LED',
        BBRGBLEDSTRIP_INIT: 'RGB-LED-Länge %1 Pin %2 initialisieren',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'Pixel %1 Farbe %2 festlegen',
        BBRGBLEDSTRIP_FILL: 'Von Pixel %1 Anzahl %2 mit Farbe %3 füllen',
        BBRGBLEDSTRIP_COLOR: 'RGB-LED-Farbe R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'Helligkeit %1 einstellen',
        BBRGBLEDSTRIP_CLEAR: 'Alles löschen',
        BBRGBLEDSTRIP_SHOW: 'aktualisieren',
        RC522_CATEGORY: 'RFID-Modul',
        RC522_INIT: 'RFID initialisieren',
        RC522_READ: 'Kartenwert lesen',
        DHT_CATEGORY: 'Temperatur und Luftfeuchtigkeit',
        DHT_init: ' DHT-Pin %1 Modus %2',
        KE_DHT: ' DHT erhält %1',
        LCD_CATEGORY: 'LCD1602 IIC',
        LCD_INIT: 'LCD-I2C-Adresse %1 initialisieren',
        LCD_SETCURSORPOSITION: 'LCD-Cursorposition x: %1 y: %2 festlegen',
        LCD_PRINT: 'LCD-Druck %1',
        LCD_CLEAR: 'LCD löschen',
        LCD_SETBACKLIGHT: 'LCD-Hintergrundbeleuchtung %1 einstellen',
        LCD_SATE_ON: 'ein',
        LCD_SATE_OFF: 'aus',
        LCD_SETCURSORSTYLE: 'Setze den LCD-Cursor %1 im Stil %2',
        LCD_SATE_DISPLAY: 'Anzeige',
        LCD_SATE_HIDE: 'verstecken',
        LCD_STYLE_BLINK: 'blinkt',
        LCD_STYLE_NOBLINK: 'kein Blinken',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: 'wifi connect ssid:%1 passwort:%2',
        WIFI_READ: 'WiFi lesen',
        CLIENT_PRINT: 'WLAN-Druck %1',
        DHT_PRINT: 'WLAN druckt DHT %1',
    });
    Object.assign(Blockly.ScratchMsgs.locales['es'], {
        KS_VARIABLE_LABEL:'Tipo de variable',
        KS_variables_declare:'Declarar %1 variable Tipo %2 Nombre %3 Asignado a %4',
        KS_variables_set:'Establecer %1 variable por %2',
        KS_variables_change:'Cambiar %1 modo variable %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Establecer %1 variable de cadena por %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'largo',
        KS_MATH_FLOAT: 'flotante',
        KS_MATH_BOOLEAN: 'booleano',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'carácter',
        KS_MATH_STRING: 'cadena',
        KS_MATH_UNSIGNED_INT: 'int sin firmar',
        KS_MATH_WORD: 'palabra',
        KS_MATH_UNSIGNED_LONG: 'largo sin firmar',
        KS_MATH_UNSIGNED_CHAR: 'caracter sin firmar',
        KS_MATH_DOUBLE: 'doble',
        BT_SERIAL_CATEGORY: 'Leer Bluetooth',
        BLE_DATA: 'Serial readStringHasta #',
        KS_TEXT_LABEL:'TEXTO',
        KS_char: 'char%1',
        KS_string: 'cadena%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'lógica',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: 'Zumbador pasivo',
        BUZZER_TONE: 'Tono PIN#%1 frecuencia%2',
        BUZZER_TONE_D: 'Tono PIN#%1 frecuencia%2 duración%3',
        BUZZER_MUSIC: 'Tono PIN#%1 reproducir música%2',
        BUZZER_NOTONE: 'sin tono%1',
        MOTOR130_CATEGORY: 'Ventilador pequeño',
        MOTOR130: 'Ventilador pequeño INA#%1 Estado%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'servo',
        KS_SERVO1_ANGLE: 'servo1 PIN#%1 canal%2 grado%3 retraso%4',
        KS_SERVO1_READ: 'servo1 PIN#%1 grado de lectura',
        KS_SERVO2_ANGLE: 'servo2 PIN#%1 canal%2 grado%3 retraso%4',
        KS_SERVO2_READ: 'servo2 PIN#%1 grado de lectura',
        HC_SR04_CATEGORY: 'Ultrasónico',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin de activación %1 pin de eco %2 distancia de lectura %3',
        BBRGBLEDSTRIP_CATEGORY: 'LED RGB',
        BBRGBLEDSTRIP_INIT: 'iniciar longitud de LED RGB %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'establecer píxel %1 color %2',
        BBRGBLEDSTRIP_FILL: 'rellenar desde el píxel %1 contar %2 con el color %3',
        BBRGBLEDSTRIP_COLOR: 'LED RGB color R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'establecer brillo %1',
        BBRGBLEDSTRIP_CLEAR: 'borrar todo',
        BBRGBLEDSTRIP_SHOW: 'actualizar',
        RC522_CATEGORY: 'Módulo RFID',
        RC522_INIT: 'iniciar RFID',
        RC522_READ: 'Leer el valor de la tarjeta',
        DHT_CATEGORY: 'Temperatura y humedad',
        DHT_init: ' pin DHT %1 modo %2',
        KE_DHT: 'DHT obtener %1',
        LCD_CATEGORY: 'LCD1602 IIC',
        LCD_INIT: 'iniciar dirección I2C lcd %1',
        LCD_SETCURSORPOSITION: 'establecer la posición del cursor LCD x: %1 y: %2',
        LCD_PRINT: 'imprimir LCD %1',
        LCD_CLEAR: 'borrar lcd',
        LCD_SETBACKLIGHT: 'establecer luz de fondo LCD %1',
        LCD_SATE_ON: 'encendido',
        LCD_SATE_OFF: 'apagado',
        LCD_SETCURSORSTYLE: 'establecer cursor lcd %1 estilo %2',
        LCD_SATE_DISPLAY: 'pantalla',
        LCD_SATE_HIDE: 'ocultar',
        LCD_STYLE_BLINK: 'parpadeo',
        LCD_STYLE_NOBLINK: 'sin parpadeo',
        WIFI_CATEGORÍA: 'ESP32 WIFI',
        WIFI_INIT: 'wifi connect ssid:%1 contraseña:%2',
        WIFI_READ: 'Lectura WiFi',
        CLIENT_PRINT: 'Impresión WIFI %1',
        DHT_PRINT: 'WIFI imprimir DHT %1',
    });
    Object.assign(Blockly.ScratchMsgs.locales['fr'], {
        KS_VARIABLE_LABEL:'Type de variable',
         KS_variables_declare:'Déclarer %1 variable Type %2 Nom %3 Attribué à %4',
         KS_variables_set: 'Définir la variable %1 par %2',
         KS_variables_change:'Changer %1 mode variable %2',
         KS_variables_value: 'variable %1',
         KS_variables_setString: 'Définir la variable chaîne %1 par %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'entier',
         KS_MATH_LONG: 'long',
         KS_MATH_FLOAT: 'flottant',
         KS_MATH_BOOLEAN: 'booléen',
         KS_MATH_BYTE: 'octet',
         KS_MATH_CHAR: 'car',
         KS_MATH_STRING: 'chaîne',
         KS_MATH_UNSIGNED_INT: 'entier non signé',
         KS_MATH_WORD: 'mot',
         KS_MATH_UNSIGNED_LONG: 'long non signé',
         KS_MATH_UNSIGNED_CHAR: 'caractère non signé',
         KS_MATH_DOUBLE: 'doubler',
         BT_SERIAL_CATEGORY: 'Lire Bluetooth',
         BLE_DATA: 'Serial readStringUntil #',
         KS_TEXT_LABEL:'TEXTE',
         KS_char: 'car%1',
         KS_string: 'chaîne%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'logique',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: "Sonnerie passive",
         BUZZER_TONE: 'Tonalité PIN #%1 fréquence%2',
         BUZZER_TONE_D: 'Tonalité PIN #%1 fréquence%2 durée%3',
         BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
         BUZZER_NOTONE: 'pas de tonalité%1',
         MOTOR130_CATEGORY: 'Petit ventilateur',
         MOTOR130: 'Petit ventilateur INA#%1 State%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: 'servo',
         KS_SERVO1_ANGLE: 'servo1 PIN#%1 canal%2 degré%3 retard%4',
         KS_SERVO1_READ: 'servo1 PIN #%1 degré de lecture',
         KS_SERVO2_ANGLE: 'servo2 PIN #%1 canal%2 degré%3 retard%4',
         KS_SERVO2_READ: 'servo2 PIN #%1 degré de lecture',
         HC_SR04_CATEGORY: 'Ultrasons',
         HC_SR04_READ_DISTANCE: 'broche de déclenchement HC-SR04 %1 broche d"écho %2 distance de lecture %3',
         BBRGBLEDSTRIP_CATEGORY: 'LED RVB ',
         BBRGBLEDSTRIP_INIT: 'initialisation de la longueur de la LED RVB %1 broche %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'définir le pixel %1 couleur %2',
         BBRGBLEDSTRIP_FILL: 'remplir à partir du pixel %1 compter %2 avec la couleur %3',
         BBRGBLEDSTRIP_COLOR: 'Couleur LED RVB R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'définir la luminosité %1',
         BBRGBLEDSTRIP_CLEAR: 'tout effacer',
         BBRGBLEDSTRIP_SHOW: 'actualiser',
         RC522_CATEGORY: 'Module RFID',
         RC522_INIT : 'init RFID',
         RC522_READ: 'Lire la valeur de la carte',
         DHT_CATEGORY: 'Température et humidité',
         DHT_init: 'Broche DHT %1 mode %2',
         KE_DHT: ' DHT obtient %1',
         LCD_CATEGORY: 'LCD1602 IIC',
         LCD_INIT: 'init lcd adresse I2C %1',
         LCD_SETCURSORPOSITION: 'définir la position du curseur lcd x: %1 y: %2',
         LCD_PRINT: 'impression LCD %1',
         LCD_CLEAR: 'effacer l"écran LCD',
         LCD_SETBACKLIGHT: 'régler le rétroéclairage LCD %1',
         LCD_SATE_ON: 'activé',
         LCD_SATE_OFF: 'désactivé',
         LCD_SETCURSORSTYLE: 'définir le curseur lcd %1 style %2',
         LCD_SATE_DISPLAY: 'affichage',
         LCD_SATE_HIDE: 'masquer',
         LCD_STYLE_BLINK: 'clignote',
         LCD_STYLE_NOBLINK: 'pas de clignotement',
         WIFI_CATEGORY: 'ESP32 WIFI',
         WIFI_INIT: 'ssid de connexion wifi:%1 mot de passe:%2',
         WIFI_READ: 'Lecture Wi-Fi',
         CLIENT_PRINT: 'Impression Wi-Fi %1',
         DHT_PRINT: 'Impression Wi-Fi DHT %1',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ja'], {
        KS_VARIABLE_LABEL:'変数タイプ',
         KS_variables_declare:'%1 変数を宣言します。タイプ %2 名前 %3 を %4 に割り当てます',
         KS_variables_set:'%1 変数を %2 で設定',
         KS_variables_change:'%1 変数モード %2 を変更',
         KS_variables_value: '変数 %1',
         KS_variables_setString:'%1 文字列変数を %2 で設定',
         KS_global:'グローバル',
         KS_local:'ローカル',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: '長い',
         KS_MATH_FLOAT: '浮動小数点',
         KS_MATH_BOOLEAN: 'ブール値',
         KS_MATH_BYTE: 'バイト',
         KS_MATH_CHAR: '文字',
         KS_MATH_STRING: '文字列',
         KS_MATH_UNSIGNED_INT: '符号なし整数',
         KS_MATH_WORD: '単語',
         KS_MATH_UNSIGNED_LONG: '符号なしロング',
         KS_MATH_UNSIGNED_CHAR: '符号なし文字',
         KS_MATH_DOUBLE: '倍精度',
         BT_SERIAL_CATEGORY: 'Bluetooth を読み取る',
         BLE_DATA: 'シリアル readStringUntil #',
         KS_TEXT_LABEL:'テキスト',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'ロジック',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: 'パッシブブザー',
         BUZZER_TONE: 'トーン PIN#%1 頻度%2',
         BUZZER_TONE_D: 'トーン PIN#%1 頻度%2 期間%3',
         BUZZER_MUSIC: 'トーン PIN#%1 音楽%2 を再生',
         BUZZER_NOTONE: 'noTone%1',
         MOTOR130_CATEGORY: '小型ファン',
         MOTOR130: '小型ファン INA#%1 状態%2 INB#%3 アナログ書き込み%4',
         KS_SERVO_CATEGORY: 'サーボ',
         KS_SERVO1_ANGLE: 'サーボ1 PIN#%1 チャネル%2 度%3 遅延%4',
         KS_SERVO1_READ: 'servo1 PIN#%1 読み取り度',
         KS_SERVO2_ANGLE: 'サーボ 2 PIN#%1 チャネル%2 度%3 遅延%4',
         KS_SERVO2_READ: 'servo2 PIN#%1 読み取り度',
         HC_SR04_CATEGORY: '超音波',
         HC_SR04_READ_DISTANCE: 'HC-SR04 トリガー ピン %1 エコー ピン %2 読み取り距離 %3',
         BBRGBLEDSTRIP_CATEGORY: 'RGB LED ',
         BBRGBLEDSTRIP_INIT: 'RGB LED 長さ %1 ピン %2 を初期化',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'ピクセル %1 カラー %2 を設定',
         BBRGBLEDSTRIP_FILL: 'ピクセル %1 カウント %2 から色 %3 で塗りつぶします',
         BBRGBLEDSTRIP_COLOR: 'RGB LED カラー R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: '明るさを設定 %1',
         BBRGBLEDSTRIP_CLEAR: 'すべてクリア',
         BBRGBLEDSTRIP_SHOW: '更新',
         RC522_CATEGORY: 'RFID モジュール',
         RC522_INIT: 'RFID の初期化',
         RC522_READ: 'カード値を読み取ります',
         DHT_CATEGORY: '温度と湿度',
         DHT_init: ' DHT ピン %1 モード %2',
         KE_DHT: ' DHT は %1 を取得',
         LCD_CATEGORY: 'LCD1602 IIC',
         LCD_INIT: '液晶 I2C アドレス %1 の初期化',
         LCD_SETCURSORPOSITION: 'LCD カーソル位置を設定 x: %1 y: %2',
         LCD_PRINT: '液晶印刷 %1',
         LCD_CLEAR: '液晶をクリア',
         LCD_SETBACKLIGHT: 'LCD バックライト %1 を設定',
         LCD_SATE_ON: 'オン',
         LCD_SATE_OFF: 'オフ',
         LCD_SETCURSORSTYLE: 'LCD カーソル %1 スタイル %2 を設定',
         LCD_SATE_DISPLAY: 'ディスプレイ',
         LCD_SATE_HIDE: '非表示',
         LCD_STYLE_BLINK: '点滅',
         LCD_STYLE_NOBLINK: 'まばたきなし',
         WIFI_CATEGORY: 'ESP32 WIFI',
         WIFI_INIT: 'WiFi 接続 ssid:%1 パスワード:%2',
         WIFI_READ: 'WiFi 読み取り',
         CLIENT_PRINT: ' WIFI 印刷 %1',
         DHT_PRINT: ' WIFI 印刷 DHT %1',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ko'], {
        KS_VARIABLE_LABEL:'변수 유형',
         KS_variables_declare:'%1 변수 유형 %2 이름 %3 선언 %4에 할당됨',
         KS_variables_set:'%1 변수를 %2로 설정',
         KS_variables_change:'%1 변수 모드 %2 변경',
         KS_variables_value: '변수 %1',
         KS_variables_setString:'%1 문자열 변수를 %2로 설정',
         KS_global:'글로벌',
         KS_local:'로컬',
         KS_MATH_INT: '정수',
         KS_MATH_LONG: '긴',
         KS_MATH_FLOAT: '부동',
         KS_MATH_BOOLEAN: '부울',
         KS_MATH_BYTE: '바이트',
         KS_MATH_CHAR: '문자',
         KS_MATH_STRING: '문자열',
         KS_MATH_UNSIGNED_INT: '부호 없는 정수',
         KS_MATH_WORD: '단어',
         KS_MATH_UNSIGNED_LONG: '부호 없는 롱',
         KS_MATH_UNSIGNED_CHAR: '부호 없는 문자',
         KS_MATH_DOUBLE: '더블',
         BT_SERIAL_CATEGORY: '블루투스 읽기',
         BLE_DATA: '직렬 readStringUntil #',
         KS_TEXT_LABEL:'텍스트',
         KS_char: '문자%1',
         KS_string: '문자열%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'논리',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: '패시브 버저',
         BUZZER_TONE: '톤 PIN#%1 주파수%2',
         BUZZER_TONE_D: 'Tone PIN#%1 주파수%2 지속시간%3',
         BUZZER_MUSIC: 'Tone PIN#%1 음악 재생%2',
         BUZZER_NOTONE: '노톤%1',
         MOTOR130_CATEGORY: '작은 선풍기',
         MOTOR130: '작은 팬 INA#%1 상태%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: '서보',
         KS_SERVO1_ANGLE: 'servo1 PIN#%1 채널%2 정도%3 지연%4',
         KS_SERVO1_READ: 'servo1 PIN#%1 읽기 정도',
         KS_SERVO2_ANGLE: 'servo2 PIN#%1 채널%2 정도%3 지연%4',
         KS_SERVO2_READ: 'servo2 PIN#%1 읽기 정도',
         HC_SR04_CATEGORY: '초음파',
         HC_SR04_READ_DISTANCE: 'HC-SR04 트리거 핀 %1 에코 핀 %2 읽기 거리 %3',
         BBRGBLEDSTRIP_CATEGORY: 'RGB LED',
         BBRGBLEDSTRIP_INIT: '초기화 RGB LED 길이 %1 핀 %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: '픽셀 %1 색상 %2 설정',
         BBRGBLEDSTRIP_FILL: '색상 %3로 픽셀 %1 카운트 %2에서 채우기',
         BBRGBLEDSTRIP_COLOR: 'RGB LED 색상 R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: '밝기 %1 설정',
         BBRGBLEDSTRIP_CLEAR: '모두 지우기',
         BBRGBLEDSTRIP_SHOW: '새로 고침',
         RC522_CATEGORY: 'RFID 모듈',
         RC522_INIT: '초기화 RFID',
         RC522_READ: '카드 값 읽기',
         DHT_CATEGORY: '온도 및 습도',
         DHT_init: ' DHT 핀 %1 모드 %2',
         KE_DHT: 'DHT는 %1을 얻음',
         LCD_CATEGORY: 'LCD1602 IIC',
         LCD_INIT: '초기화 LCD I2C 주소 %1',
         LCD_SETCURSORPOSITION: 'LCD 커서 위치 설정 x: %1 y: %2',
         LCD_PRINT: 'LCD 인쇄 %1',
         LCD_CLEAR: 'LCD 지우기',
         LCD_SETBACKLIGHT: 'LCD 백라이트 %1 설정',
         LCD_SATE_ON: '켜짐',
         LCD_SATE_OFF: '꺼짐',
         LCD_SETCURSORSTYLE: 'LCD 커서 %1 스타일 %2 설정',
         LCD_SATE_DISPLAY: '디스플레이',
         LCD_SATE_HIDE: '숨기기',
         LCD_STYLE_BLINK: '깜박임',
         LCD_STYLE_NOBLINK: '깜박이지 않음',
         WIFI_CATEGORY: 'ESP32 와이파이',
         WIFI_INIT: 'wifi 연결 ssid:%1 비밀번호:%2',
         WIFI_READ: '와이파이 읽기',
         CLIENT_PRINT: ' WIFI 인쇄 %1',
         DHT_PRINT: ' WIFI DHT %1 인쇄',
    });
    Object.assign(Blockly.ScratchMsgs.locales['pl'], {
        KS_VARIABLE_LABEL:'Typ zmiennej',
        KS_variables_declare:'Deklaracja %1 zmiennej Typ %2 Nazwa %3 Przypisana do %4',
        KS_variables_set:'Ustaw zmienną %1 na %2',
        KS_variables_change:'Zmień tryb zmiennej %1 %2',
        KS_variables_value: 'zmienna %1',
        KS_variables_setString:'Ustaw zmienną łańcuchową %1 o %2',
        KS_global:'Globalny',
        KS_local:'Lokalny',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'długi',
        KS_MATH_FLOAT: 'pływa',
        KS_MATH_BOOLEAN: 'wartość logiczna',
        KS_MATH_BYTE: 'bajt',
        KS_MATH_CHAR: 'znak',
        KS_MATH_STRING: 'ciąg znaków',
        KS_MATH_UNSIGNED_INT: 'bez znaku int',
        KS_MATH_WORD: 'słowo',
        KS_MATH_UNSIGNED_LONG: 'długi bez znaku',
        KS_MATH_UNSIGNED_CHAR: 'znak bez znaku',
        KS_MATH_DOUBLE: 'podwójne',
        BT_SERIAL_CATEGORY: 'Odczyt Bluetooth',
        BLE_DATA: 'Serial readStringDo #',
        KS_TEXT_LABEL:'TEKST',
        KS_char: 'znak%1',
        KS_string: 'ciąg%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logika',
        KS_judge:'%1%2%3',

        BUZZER_CATEGORY: 'Brzęczyk pasywny',
        BUZZER_TONE: 'Ton PIN#%1 częstotliwość%2',
        BUZZER_TONE_D: 'Ton PIN#%1 częstotliwość%2 czas trwania%3',
        BUZZER_MUSIC: 'Ton PIN#%1 odtwarzanie muzyki%2',
        BUZZER_NOTONE: 'brak tonu%1',
        MOTOR130_CATEGORY: 'Mały wentylator',
        MOTOR130: 'Mały wentylator INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'serwo',
        KS_SERVO1_ANGLE: 'serwo1 PIN#%1 kanał%2 stopień%3 opóźnienie%4',
        KS_SERVO1_READ: 'serwo1 PIN#%1 stopień odczytu',
        KS_SERVO2_ANGLE: 'serwo2 PIN#%1 kanał%2 stopień%3 opóźnienie%4',
        KS_SERVO2_READ: 'serwo2 PIN#%1 stopień odczytu',
        HC_SR04_CATEGORY: 'Ultradźwięki',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin wyzwalający %1 pin echa %2 odległość odczytu %3',
        BBRGBLEDSTRIP_CATEGORY: 'LED RGB',
        BBRGBLEDSTRIP_INIT: 'początkowa długość diody LED RGB %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'ustaw piksel %1 kolor %2',
        BBRGBLEDSTRIP_FILL: 'wypełnij piksel %1 liczba %2 kolorem %3',
        BBRGBLEDSTRIP_COLOR: 'Kolor LED RGB R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'ustaw jasność %1',
        BBRGBLEDSTRIP_CLEAR: 'wyczyść wszystko',
        BBRGBLEDSTRIP_SHOW: 'odśwież',
        RC522_CATEGORY: 'Moduł RFID',
        RC522_INIT: 'rozpocznij RFID',
        RC522_READ: 'Odczytaj wartość karty',
        DHT_CATEGORY: 'Temperatura i wilgotność',
        DHT_init: 'DHT pin %1 tryb %2',
        KE_DHT: ' DHT pobiera %1',
        LCD_CATEGORY: 'LCD1602 IIC',
        LCD_INIT: 'początkowy adres I2C lcd %1',
        LCD_SETCURSORPOSITION: 'ustaw pozycję kursora lcd x: %1 y: %2',
        LCD_PRINT: 'wydruk LCD %1',
        LCD_CLEAR: 'wyczyść wyświetlacz',
        LCD_SETBACKLIGHT: 'ustaw podświetlenie lcd %1',
        LCD_SATE_ON: 'włączone',
        LCD_SATE_OFF: 'wyłączony',
        LCD_SETCURSORSTYLE: 'ustaw styl kursora lcd %1 %2',
        LCD_SATE_DISPLAY: 'wyświetlacz',
        LCD_SATE_HIDE: 'ukryj',
        LCD_STYLE_BLINK: 'miga',
        LCD_STYLE_NOBLINK: 'brak mrugnięcia',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: 'identyfikator SSID połączenia Wi-Fi:%1 hasło:%2',
        WIFI_READ: 'Odczyt Wi-Fi',
        CLIENT_PRINT: 'Wydruk WIFI %1',
        DHT_PRINT: 'DRUK WIFI DHT %1',
    });
    Object.assign(Blockly.ScratchMsgs.locales['pt'], {
        KS_VARIABLE_LABEL:'Tipo de variável',
         KS_variables_declare:'Declare %1 variável Tipo %2 Nome %3 Atribuído a %4',
         KS_variables_set:'Definir %1 variável por %2',
         KS_variables_change:'Alterar %1 modo de variável %2',
         KS_variables_value: 'variável %1',
         KS_variables_setString:'Definir variável de string %1 por %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: 'longo',
         KS_MATH_FLOAT: 'flutuar',
         KS_MATH_BOOLEAN: 'booleano',
         KS_MATH_BYTE: 'byte',
         KS_MATH_CHAR: 'char',
         KS_MATH_STRING: 'string',
         KS_MATH_UNSIGNED_INT: 'int unsigned',
         KS_MATH_WORD: 'palavra',
         KS_MATH_UNSIGNED_LONG: 'não assinado longo',
         KS_MATH_UNSIGNED_CHAR: 'caractere não assinado',
         KS_MATH_DOUBLE: 'duplo',
         BT_SERIAL_CATEGORY: 'Ler Bluetooth',
         BLE_DATA: 'Serial readStringUntil #',
         KS_TEXT_LABEL:'TEXT',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'lógica',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: 'Campainha passiva',
         BUZZER_TONE: 'Tom PIN#%1 frequência%2',
         BUZZER_TONE_D: 'Tom PIN#%1 frequência%2 duração%3',
         BUZZER_MUSIC: 'Tone PIN#%1 toca música%2',
         BUZZER_NOTONE: 'noTone%1',
         MOTOR130_CATEGORY: 'Pequeno ventilador',
         MOTOR130: 'Pequeno ventilador INA#%1 Estado%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: 'servo',
         KS_SERVO1_ANGLE: 'servo1 PIN#%1 canal%2 graus%3 atraso%4',
         KS_SERVO1_READ: 'servo1 PIN#%1 grau de leitura',
         KS_SERVO2_ANGLE: 'servo2 PIN#%1 canal%2 graus%3 atraso%4',
         KS_SERVO2_READ: 'servo2 PIN#%1 grau de leitura',
         HC_SR04_CATEGORY: 'Ultrassônico',
         HC_SR04_READ_DISTANCE: 'HC-SR04 pino de ativação %1 pino de eco %2 distância de leitura %3',
         BBRGBLEDSTRIP_CATEGORY: 'LED RGB ',
         BBRGBLEDSTRIP_INIT: 'inicializar comprimento do LED RGB %1 pino %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'definir pixel %1 cor %2',
         BBRGBLEDSTRIP_FILL: 'preencher do pixel %1 contagem %2 com a cor %3',
         BBRGBLEDSTRIP_COLOR: 'RGB LED cor R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'definir brilho %1',
         BBRGBLEDSTRIP_CLEAR: 'limpar tudo',
         BBRGBLEDSTRIP_SHOW: 'atualizar',
         RC522_CATEGORY: 'Módulo RFID',
         RC522_INIT: 'inicializar RFID',
         RC522_READ: 'Ler o valor do cartão',
         DHT_CATEGORY: 'Temperatura e umidade',
         DHT_init: 'pino DHT %1 modo %2',
         KE_DHT: 'DHT obteve %1',
         LCD_CATEGORY: 'LCD1602 IIC',
         LCD_INIT: 'inicializar endereço LCD I2C %1',
         LCD_SETCURSORPOSITION: 'definir a posição do cursor lcd x: %1 y: %2',
         LCD_PRINT: 'impressão LCD %1',
         LCD_CLEAR: 'limpar lcd',
         LCD_SETBACKLIGHT: 'definir luz de fundo do LCD %1',
         LCD_SATE_ON: 'ligado',
         LCD_SATE_OFF: 'desligado',
         LCD_SETCURSORSTYLE: 'definir cursor lcd %1 estilo %2',
         LCD_SATE_DISPLAY: 'exibir',
         LCD_SATE_HIDE: 'ocultar',
         LCD_STYLE_BLINK: 'piscar',
         LCD_STYLE_NOBLINK: 'sem piscar',
         WIFI_CATEGORY: 'ESP32 WIFI',
         WIFI_INIT: 'wifi connect ssid:%1 senha:%2',
         WIFI_READ: 'Leitura WiFi',
         CLIENT_PRINT: 'Impressão WIFI %1',
         DHT_PRINT: 'WIFI imprimir DHT %1',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ru'], {
        KS_VARIABLE_LABEL: 'Тип переменной',
         KS_variables_declare:'Объявить переменную %1 Тип %2 Имя %3 Назначено %4',
         KS_variables_set:'Установить переменную %1 на %2',
         KS_variables_change:'Изменить режим переменной %1 %2',
         KS_variables_value: 'переменная %1',
         KS_variables_setString:'Установить %1 строковую переменную на %2',
         KS_global: 'Глобальный',
         KS_local: 'Местный',
         KS_MATH_INT: 'целое',
         KS_MATH_LONG: 'длинный',
         KS_MATH_FLOAT: 'плавающая',
         KS_MATH_BOOLEAN: 'логическое значение',
         KS_MATH_BYTE: 'байт',
         KS_MATH_CHAR: 'символ',
         KS_MATH_STRING: 'строка',
         KS_MATH_UNSIGNED_INT: 'целое число без знака',
         KS_MATH_WORD: 'слово',
         KS_MATH_UNSIGNED_LONG: 'длинное без знака',
         KS_MATH_UNSIGNED_CHAR: 'беззнаковый символ',
         KS_MATH_DOUBLE: 'двойной',
         BT_SERIAL_CATEGORY: 'Чтение Bluetooth',
         BLE_DATA: 'Серийный номер readStringUntil #',
         KS_TEXT_LABEL:'ТЕКСТ',
         KS_char: 'символ%1',
         KS_string: 'строка%1',
         KS_data: '%1',

         KS_LOGIC_LABEL: 'логика',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: 'Пассивный зуммер',
         BUZZER_TONE: 'Тон PIN#%1, частота%2',
         BUZZER_TONE_D: 'Тональный PIN-код #%1, частота%2, продолжительность%3',
         BUZZER_MUSIC: 'Тон PIN#%1 для воспроизведения музыки%2',
         BUZZER_NOTONE: 'noTone%1',
         MOTOR130_CATEGORY: 'Маленький вентилятор',
         MOTOR130: 'Маленький вентилятор INA#%1 State%2 INB#%3 AnalogWrite%4',
         KS_SERVO_CATEGORY: 'сервопривод',
         KS_SERVO1_ANGLE: 'servo1 PIN#%1 канал%2 градус%3 задержка%4',
         KS_SERVO1_READ: 'servo1 PIN#%1 степень чтения',
         KS_SERVO2_ANGLE: 'servo2 PIN#%1 канал%2 градус%3 задержка%4',
         KS_SERVO2_READ: 'Серво2 PIN #%1 степень чтения',
         HC_SR04_CATEGORY: 'Ультразвук',
         HC_SR04_READ_DISTANCE: 'HC-SR04 триггерный вывод %1 эхо-вывод %2 расстояние чтения %3',
         BBRGBLEDSTRIP_CATEGORY: 'Светодиод RGB',
         BBRGBLEDSTRIP_INIT: 'инициализировать длину светодиода RGB %1 контакт %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'установить для пикселя %1 цвет %2',
         BBRGBLEDSTRIP_FILL: 'залить от пикселя %1 отсчета %2 цветом %3',
         BBRGBLEDSTRIP_COLOR: 'Цвет светодиода RGB R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'установить яркость%1',
         BBRGBLEDSTRIP_CLEAR: 'очистить все',
         BBRGBLEDSTRIP_SHOW: 'обновить',
         RC522_CATEGORY: 'модуль RFID',
         RC522_INIT: 'инициировать RFID',
         RC522_READ: 'Прочитать значение карты',
         DHT_CATEGORY: 'Температура и влажность',
         DHT_init: 'DHT контакт %1 режим %2',
         KE_DHT: 'DHT получить %1',
         LCD_CATEGORY: 'LCD1602 IIC',
         LCD_INIT: 'инициализировать ЖК-адрес I2C %1',
         LCD_SETCURSORPOSITION: 'установить позицию жидкокристаллического курсора x: %1 y: %2',
         LCD_PRINT: 'ЖК-печать %1',
         LCD_CLEAR: 'очистить ЖК-дисплей',
         LCD_SETBACKLIGHT: 'установить подсветку ЖК-дисплея %1',
         LCD_SATE_ON: 'вкл.',
         LCD_SATE_OFF: 'выкл.',
         LCD_SETCURSORSTYLE: 'установить ЖК-курсор %1 в стиле %2',
         LCD_SATE_DISPLAY: 'дисплей',
         LCD_SATE_HIDE: 'скрыть',
         LCD_STYLE_BLINK: 'мигать',
         LCD_STYLE_NOBLINK: 'не мигает',
         WIFI_CATEGORY: "ESP32 WIFI",
         WIFI_INIT: 'ssid для подключения к Wi-Fi:%1, пароль:%2',
         WIFI_READ: 'Чтение WiFi',
         CLIENT_PRINT: 'WIFI печать %1',
         DHT_PRINT: 'WIFI распечатывает DHT %1',
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        KS_VARIABLE_LABEL:'變量類型',
        KS_variables_declare:'聲明 %1 數字變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_declare2:'聲明 %1 字符串變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_set:'設置 %1 變量 為 %2',
        KS_variables_change:'設置 %1 變量 模式 %2',
        KS_variables_value: '變量 %1',
        KS_variables_setString:'設置 %1 字符串變量 為 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整數',
        KS_MATH_LONG: '長整數',
        KS_MATH_FLOAT: '小數',
        KS_MATH_BOOLEAN: '布爾',
        KS_MATH_BYTE: '字節',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '無符號整數',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '無符號長整數',
        KS_MATH_UNSIGNED_CHAR: '無符號字符',
        KS_MATH_DOUBLE: '雙精度浮點數',
        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',
        KS_LOGIC_LABEL:'邏輯',
        KS_judge:'%1 %2 %3',
        BUZZER_CATEGORY: '無源蜂鳴器',
        BUZZER_TONE: '播放聲音 引腳%1 頻率%2',
        BUZZER_TONE_D: '播放聲音 引腳%1 頻率%2 節拍%3',
        BUZZER_MUSIC: '蜂鳴器 引腳%1 播放音樂%2',
        BUZZER_NOTONE: '結束聲音 引腳%1',
        MOTOR130_CATEGORY: '小風扇',
        MOTOR130: '小風扇 INA#%1 電平為%2 INB#%3 模擬輸出值%4',
        BT_SERIAL_CATEGORY: '讀取藍牙信息',
        BLE_DATA: '接收藍牙信息 直到接收到#',
        KS_SERVO_CATEGORY: '舵機',
        KS_SERVO1_ANGLE: '舵機1 引腳%1 通道%2 角度%3 延時(毫秒)%4',
        KS_SERVO1_READ: '舵機1 引腳%1 讀取度數',
        KS_SERVO2_ANGLE: '舵機2 引腳%1 通道%2 角度%3 延時(毫秒)%4',
        KS_SERVO2_READ: '舵機2 引腳%1 讀取度數',
        BBRGBLEDSTRIP_CATEGORY: 'RGB 氛圍燈',
        BBRGBLEDSTRIP_INIT: '初始化RGB 氛圍燈顆數 %1 引腳 %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: '設置像素 %1 顏色 %2',
        BBRGBLEDSTRIP_FILL: '從像素 %1 開始 到像素 %2 顏色 %3',
        BBRGBLEDSTRIP_COLOR: 'RGB 氛圍燈顏色 R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: '設置亮度 %1',
        BBRGBLEDSTRIP_CLEAR: '清除所有',
        BBRGBLEDSTRIP_SHOW: '刷新',   
        RC522_CATEGORY: 'RFID刷卡模塊',
        RC522_INIT: '初始化 RFID',
        RC522_READ: '讀取卡值',
        DHT_CATEGORY: '溫濕度傳感器',
        DHT_init: '溫濕度引腳 %1 型號 %2',
        KE_DHT: '溫濕度獲取 %1',
        LCD_CATEGORY: 'LCD1602模塊',
        LCD_INIT: '初始化 lcd I2C 地址 %1',
        LCD_SETCURSORPOSITION: 'set lcd 光標位置 x: %1 y: %2',
        LCD_PRINT: 'lcd 打印 %1',
        LCD_CLEAR: '清空 lcd',
        LCD_SETBACKLIGHT: '設置 lcd 背光 %1',
        LCD_SATE_ON: '開',
        LCD_SATE_OFF: '關',
        LCD_SETCURSORSTYLE: '設置 lcd 光標 %1 樣式 %2',
        LCD_SATE_DISPLAY: '顯示',
        LCD_SATE_HIDE: '隱藏',
        LCD_STYLE_BLINK: '閃爍',
        LCD_STYLE_NOBLINK: '不閃爍',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: '連接WiFi 名稱%1 密碼%2',
        WIFI_READ: 'WiFi 讀取數據',
        CLIENT_PRINT: ' WIFI 打印 %1', 
        DHT_PRINT: ' WIFI 打印溫濕度 %1',
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {     
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',
        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',
        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',
        BUZZER_CATEGORY: '无源蜂鸣器',
        BUZZER_TONE: '播放声音 引脚%1 频率%2',
        BUZZER_TONE_D: '播放声音 引脚%1 频率%2 节拍%3',
        BUZZER_MUSIC: '蜂鸣器 引脚%1 播放音乐%2',
        BUZZER_NOTONE: '结束声音 引脚%1',
        MOTOR130_CATEGORY: '小风扇',
        MOTOR130: '小风扇 INA#%1 电平为%2 INB#%3 模拟输出值%4',
        BT_SERIAL_CATEGORY: '读取蓝牙信息',
        BLE_DATA: '接收蓝牙信息 直到接收到#',
        KS_SERVO_CATEGORY: '舵机',
        KS_SERVO1_ANGLE: '舵机1 引脚%1 通道%2 角度%3 延时(毫秒)%4',
        KS_SERVO1_READ: '舵机1 引脚%1 读取度数',
        KS_SERVO2_ANGLE: '舵机2 引脚%1 通道%2 角度%3 延时(毫秒)%4',
        KS_SERVO2_READ: '舵机2 引脚%1 读取度数',
        BBRGBLEDSTRIP_CATEGORY: 'RGB 氛围灯',
        BBRGBLEDSTRIP_INIT: '初始化RGB 氛围灯颗数 %1 引脚 %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: '设置像素 %1 颜色 %2',
        BBRGBLEDSTRIP_FILL: '从像素 %1 开始 到像素 %2 颜色 %3',
        BBRGBLEDSTRIP_COLOR: 'RGB 氛围灯颜色 R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: '设置亮度 %1',
        BBRGBLEDSTRIP_CLEAR: '清除所有',
        BBRGBLEDSTRIP_SHOW: '刷新',   
        RC522_CATEGORY: 'RFID刷卡模块',
        RC522_INIT: '初始化 RFID',
        RC522_READ: '读取卡值',
        DHT_CATEGORY: '温湿度传感器',
        DHT_init: '温湿度引脚 %1 型号 %2',
        KE_DHT: '温湿度获取 %1',
        LCD_CATEGORY: 'LCD1602模块',
        LCD_INIT: '初始化 lcd I2C 地址 %1',
        LCD_SETCURSORPOSITION: 'set lcd 光标位置 x: %1 y: %2',
        LCD_PRINT: 'lcd 打印 %1',
        LCD_CLEAR: '清空 lcd',
        LCD_SETBACKLIGHT: '设置 lcd 背光 %1',
        LCD_SATE_ON: '开',
        LCD_SATE_OFF: '关',
        LCD_SETCURSORSTYLE: '设置 lcd 光标 %1 样式 %2',
        LCD_SATE_DISPLAY: '显示',
        LCD_SATE_HIDE: '隐藏',
        LCD_STYLE_BLINK: '闪烁',
        LCD_STYLE_NOBLINK: '不闪烁',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: '连接WiFi 名称%1 密码%2',
        WIFI_READ: 'WiFi 读取数据',
        CLIENT_PRINT: ' WIFI 打印 %1', 
        DHT_PRINT: ' WIFI 打印温湿度 %1', 
        

    });
    return Blockly;
}

exports = addMsg;
