/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',
        Arduino_TFT_CATEGORY:'TFT',
        INITR_GREENTAB:'GREEN TAB(ST7735)',
        INITR_REDTAB:'RED TAB(ST7735)',
        INITR_BLACKTAB:'BLACK LAB(ST7735)',
        Arduino_TFT_begin1:'Initialize TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
        Arduino_TFT_begin2:'Initialize TFT %1 RST# %2 CS# %3 DC %4',
        Arduino_TFT_invertDisplay:'TFT invert display %1',
        YES:'YES',
        NO:'NO',
        Arduino_TFT_backlight:'TFT set backlight BL pin %1 brightness %2',
        Arduino_TFT_setRotation:'TFT Screen rotation %1',
        Arduino_TFT_set_cursor:'TFT Set the cursor position to X %1 Y %2',
        Arduino_TFT_qr_code_display:'QR_code show content %1 x %2 y %3 zoom %4',
        Arduino_TFT_setTextSize:'TFT set font size %1',
        font_micro:'micro',
        font_small:'small',
        font_middle:'middle',
        font_big:'big',
        font_large:'large',
        Arduino_TFT_set_screen_color:'TFT set %1 to %2',
        setTextColor:'Set font color',
        fillScreen:'Screen background color',
        Arduino_TFT_set_text_background_color:'TFT Set font color Font %1  background color %2',
        Arduino_TFT_show_english:'TFT Display English position X %1 Y %2 font color %3 background color %4 content %5 size %6 newline %7',      
       
        Arduino_TFT_show_text:'TFT Display text(english) %1 content %2', 
        print:'nowrap',
        println:'wrap', 
        Arduino_TFT_show_num:'TFT Display number %1 content %2 base %3',
        DEC:'DEC',
        BIN:'BIN',
        OCT:'OCT',
        HEX:'HEX',
        Fast_TFT_draw_pixel:'TFT draw pixel X %1 Y %2 color %3',
        Fast_TFT_draw_line:'TFT drwa line start point X %1 Y %2 end point X %3 Y %4 color %5',
        Fast_TFT_draw_angle_line:'TFT draw angle line Start point X %1 Y %2 length %3 angle %4 color %5',
        Fast_TFT_draw_line1:'TFT %1 Start point X %2 Y %3 length %4 color %5',
        drawFastHLine:'HLine',
        drawFastVLine:'VLine',
        Fast_TFT_draw_rect_change:'TFT draw rect %1 top left corner X %2 Y %3 width %4 height %5 color %6',
        draw:'hollow',
        fill:'fill',
        Fast_TFT_draw_Roundrect_change:'TFT draw round rect %1 top left corner X %2 Y %3 width %4 height %5 radius %6 color %7',
        Fast_TFT_draw_circle:'TFT draw circle %1 Center of a circle X %2 Y %3 radius %4 color %5',
        Fast_TFT_draw_CircleHelper:'TFT draw arc Center of a circle X %1 Y %2 radius %3 segmental arc %4 color %5',
        Fast_TFT_draw_CircleHelper_data:'upper left %1 upper right %2 left lower %3 low right %4',
        Fast_TFT_fill_CircleHelper:'TFT draw filled arc Center of a circle  X %1 Y %2 radius %3 segmental arc %4 length %5 color %6',
        Fast_TFT_oled_fill_CircleHelper_data:'upper left&left lower %1 upper right &low right %2',
        Fast_TFT_draw_ellipse:'TFT draw ellipse %1 Center of a circle X %2 Y %3 X radius %4 Y radius %5 segmental arc %6 color %7',
        draw_ellipse:'hollow',
        fill_ellipse:'fill',
        Fast_TFT_draw_triangle:'TFT draw triangle %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 color %8',
        SD_CATEGORY: 'SD card',
        SD_INIT: 'init SD card PIN MOSI:11 MISO:12 CLK:13 CS: %1',
        SD_TYPE: 'SD type cs# %1',
        SD_LIST: 'list files in SD root cs# %1',
        SD_VAR: 'SD %1 cs# %2',
        SD_JUDGE: '%1 File Exist?',
        SD_DELETE: 'delete %1',
        SD_READ: 'read %1',
        SD_WRITE: 'write SD File %1 Data %2 NewLine %3',
        TFTSD_INIT: 'TFT screen displays SD card image initialization',
        TFTSD_DISPLAY: 'SD card image name %1 X coordinate %2 Y coordinate %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['de'], {
        KS_VARIABLE_LABEL:'Variablentyp',
        KS_variables_declare:'Deklarieren Sie %1 Variablentyp %2 Name %3 Zugewiesen an %4',
        KS_variables_set:'Variable %1 um %2 setzen',
        KS_variables_change:'Variablenmodus %1 %2 ändern',
        KS_variables_value: 'Variable %1',
        KS_variables_setString:'Setze %1 String-Variable um %2',
        KS_global:'Global',
        KS_local:'Lokal',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'lang',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'Zeichenfolge',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'Wort',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'Logik',
        KS_judge:'%1 %2 %3',
        Arduino_TFT_CATEGORY: 'TFT',
        INITR_GREENTAB: 'GRÜN TAB(ST7735)',
        INITR_REDTAB: 'ROT TAB(ST7735)',
        INITR_BLACKTAB: 'SCHWARZ LAB(ST7735)',
        Arduino_TFT_begin1: 'TFT initialisieren %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
        Arduino_TFT_begin2: 'TFT initialisieren %1 RST# %2 CS# %3 DC %4',
        Arduino_TFT_invertDisplay: 'TFT-Anzeige umkehren %1',
        YES: 'JA',
        NO: 'NEIN',
        Arduino_TFT_backlight: 'TFT-Hintergrundbeleuchtung einstellen BL-Pin %1 Helligkeit %2',
        Arduino_TFT_setRotation: 'TFT-Bildschirmrotation %1',
        Arduino_TFT_set_cursor: 'TFT-Cursorposition einstellen X %1 Y %2',
        Arduino_TFT_qr_code_display: 'QR-Code anzeigen Inhalt %1 x %2 y %3 Zoom %4',
        Arduino_TFT_setTextSize: 'TFT-Schriftgröße einstellen %1',
        font_micro: 'Mikro',
        font_small: 'Klein',
        font_middle: 'Mittel',
        font_big: 'Groß',
        font_large: 'Sehr groß',
        Arduino_TFT_set_screen_color: 'TFT %1 auf %2 einstellen',
        setTextColor: 'Schriftfarbe einstellen',
        fillScreen: 'Bildschirmhintergrundfarbe',
        Arduino_TFT_set_text_background_color: 'TFT-Schriftfarbe einstellen Schrift %1 Hintergrundfarbe %2',
        Arduino_TFT_show_english: 'Englischen Text anzeigen Position X %1 Y %2 Schriftfarbe %3 Hintergrundfarbe %4 Inhalt %5 Größe %6 Zeilenumbruch %7',
       
        Arduino_TFT_show_text: 'Text anzeigen (Englisch) %1 Inhalt %2',
        print: 'Ohne Umbruch',
        println: 'Mit Umbruch',
        Arduino_TFT_show_num: 'Nummer anzeigen %1 Inhalt %2 Basis %3',
        DEC: 'DEZ',
        BIN: 'BINÄR',
        OCT: 'OKT',
        HEX: 'HEX',
        Fast_TFT_draw_pixel: 'Pixel zeichnen X %1 Y %2 Farbe %3',
        Fast_TFT_draw_line: 'Linie zeichnen Startpunkt X %1 Y %2 Endpunkt X %3 Y %4 Farbe %5',
        Fast_TFT_draw_angle_line: 'Winkellinie zeichnen Startpunkt X %1 Y %2 Länge %3 Winkel %4 Farbe %5',
        Fast_TFT_draw_line1: 'TFT %1 Startpunkt X %2 Y %3 Länge %4 Farbe %5',
        drawFastHLine: 'Horizontale Linie',
        drawFastVLine: 'Vertikale Linie',
        Fast_TFT_draw_rect_change: 'Rechteck zeichnen %1 obere linke Ecke X %2 Y %3 Breite %4 Höhe %5 Farbe %6',
        draw: 'Hohl',
        fill: 'Füllen',
        Fast_TFT_draw_Roundrect_change: 'Abgerundetes Rechteck zeichnen %1 obere linke Ecke X %2 Y %3 Breite %4 Höhe %5 Radius %6 Farbe %7',
        Fast_TFT_draw_circle: 'Kreis zeichnen %1 Kreismittelpunkt X %2 Y %3 Radius %4 Farbe %5',
        Fast_TFT_draw_CircleHelper: 'Kreisbogen zeichnen Kreismittelpunkt X %1 Y %2 Radius %3 Segmentbogen %4 Farbe %5',
        Fast_TFT_draw_CircleHelper_data: 'obere linke %1 obere rechte %2 linke untere %3 rechte untere %4',
        Fast_TFT_fill_CircleHelper: 'Gefüllten Kreisbogen zeichnen Kreismittelpunkt X %1 Y %2 Radius %3 Segmentbogen %4 Länge %5 Farbe %6',
        Fast_TFT_oled_fill_CircleHelper_data: 'obere linke und linke untere %1 obere rechte und rechte untere %2',
        Fast_TFT_draw_ellipse: 'Ellipse zeichnen %1 Ellipsenmittelpunkt X %2 Y %3 X-Radius %4 Y-Radius %5 Segmentbogen %6 Farbe %7',
        draw_ellipse: 'Hohl',
        fill_ellipse: 'Füllen',
        Fast_TFT_draw_triangle: 'Dreieck zeichnen %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 Farbe %8',
        SD_CATEGORY: 'SD-Karte',
        SD_INIT: 'SD-Karten-PIN MOSI:11 MISO:12 CLK:13 CS: %1 initieren',
        SD_TYPE: 'SD-Typ cs# %1',
        SD_LIST: 'Dateien im SD-Root-CS# %1 auflisten',
        SD_VAR: 'SD %1 cs# %2',
        SD_JUDGE: '%1 Datei vorhanden?',
        SD_DELETE: '%1 löschen',
        SD_READ: '%1 lesen',
        SD_WRITE: 'SD-Datei %1 Daten %2 NewLine %3 schreiben',
        TFTSD_INIT: 'TFT-Bildschirm zeigt SD-Karten-Bildinitialisierung an',
        TFTSD_DISPLAY: 'SD-Karten-Bildname %1 X-Koordinate %2 Y-Koordinate %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['es'], {
        KS_VARIABLE_LABEL:'Tipo de variable',
        KS_variables_declare:'Declarar %1 variable Tipo %2 Nombre %3 Asignado a %4',
        KS_variables_set:'Establecer %1 variable por %2',
        KS_variables_change:'Cambiar %1 modo variable %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Establecer %1 variable de cadena por %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'largo',
        KS_MATH_FLOAT: 'flotante',
        KS_MATH_BOOLEAN: 'booleano',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'carácter',
        KS_MATH_STRING: 'cadena',
        KS_MATH_UNSIGNED_INT: 'int sin firmar',
        KS_MATH_WORD: 'palabra',
        KS_MATH_UNSIGNED_LONG: 'largo sin firmar',
        KS_MATH_UNSIGNED_CHAR: 'caracter sin firmar',
        KS_MATH_DOUBLE: 'doble',

        KS_TEXT_LABEL:'TEXTO',
        KS_char: 'char%1',
        KS_string: 'cadena%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'lógica',
        KS_judge:'%1 %2 %3',
        Arduino_TFT_CATEGORY: 'TFT',
        INITR_GREENTAB: 'Pestaña VERDE(ST7735)',
        INITR_REDTAB: 'Pestaña ROJA(ST7735)',
        INITR_BLACKTAB: 'Pestaña NEGRA(ST7735)',
        Arduino_TFT_begin1: 'Inicializar TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
        Arduino_TFT_begin2: 'Inicializar TFT %1 RST# %2 CS# %3 DC %4',
        Arduino_TFT_invertDisplay: 'Invertir pantalla TFT %1',
        YES: 'SÍ',
        NO: 'NO',
        Arduino_TFT_backlight: 'Establecer retroiluminación TFT pin BL %1 brillo %2',
        Arduino_TFT_setRotation: 'Rotación de pantalla TFT %1',
        Arduino_TFT_set_cursor: 'Establecer posición del cursor TFT en X %1 Y %2',
        Arduino_TFT_qr_code_display: 'Mostrar código QR contenido %1 x %2 y %3 zoom %4',
        Arduino_TFT_setTextSize: 'Establecer tamaño de fuente TFT %1',
        font_micro: 'micro',
        font_small: 'pequeña',
        font_middle: 'mediana',
        font_big: 'grande',
        font_large: 'muy grande',
        Arduino_TFT_set_screen_color: 'Establecer %1 de la pantalla TFT a %2',
        setTextColor: 'Establecer color de fuente',
        fillScreen: 'Color de fondo de pantalla',
        Arduino_TFT_set_text_background_color: 'Establecer color de fuente TFT Fuente %1 color de fondo %2',
        Arduino_TFT_show_english: 'Mostrar texto en inglés posición X %1 Y %2 color de fuente %3 color de fondo %4 contenido %5 tamaño %6 nueva línea %7',
        
        Arduino_TFT_show_text: 'Mostrar texto (inglés) %1 contenido %2',
        print: 'sin envolver',
        println: 'envolver',
        Arduino_TFT_show_num: 'Mostrar número TFT %1 contenido %2 base %3',
        DEC: 'DEC',
        BIN: 'BIN',
        OCT: 'OCT',
        HEX: 'HEX',
        Fast_TFT_draw_pixel: 'Dibujar píxel TFT X %1 Y %2 color %3',
        Fast_TFT_draw_line: 'Dibujar línea TFT punto de inicio X %1 Y %2 punto final X %3 Y %4 color %5',
        Fast_TFT_draw_angle_line: 'Dibujar línea angular TFT Punto de inicio X %1 Y %2 longitud %3 ángulo %4 color %5',
        Fast_TFT_draw_line1: 'TFT %1 Punto de inicio X %2 Y %3 longitud %4 color %5',
        drawFastHLine: 'Línea H',
        drawFastVLine: 'Línea V',
        Fast_TFT_draw_rect_change: 'Dibujar rectángulo TFT %1 esquina superior izquierda X %2 Y %3 ancho %4 altura %5 color %6',
        draw: 'hueco',
        fill: 'relleno',
        Fast_TFT_draw_Roundrect_change: 'Dibujar rectángulo redondeado TFT %1 esquina superior izquierda X %2 Y %3 ancho %4 altura %5 radio %6 color %7',
        Fast_TFT_draw_circle: 'Dibujar círculo TFT %1 Centro de un círculo X %2 Y %3 radio %4 color %5',
        Fast_TFT_draw_CircleHelper: 'Dibujar arco TFT Centro de un círculo X %1 Y %2 radio %3 arco segmentado %4 color %5',
        Fast_TFT_draw_CircleHelper_data: 'superior izquierda %1 superior derecha %2 izquierda inferior %3 derecha inferior %4',
        Fast_TFT_fill_CircleHelper: 'Dibujar arco relleno TFT Centro de un círculo X %1 Y %2 radio %3 arco segmentado %4 longitud %5 color %6',
        Fast_TFT_oled_fill_CircleHelper_data: 'superior izquierda e izquierda inferior %1 superior derecha y derecha inferior %2',
        Fast_TFT_draw_ellipse: 'Dibujar elipse TFT %1 Centro de un círculo X %2 Y %3 radio X %4 radio Y %5 arco segmentado %6 color %7',
        draw_ellipse: 'hueco',
        fill_ellipse: 'relleno',
        Fast_TFT_draw_triangle: 'Dibujar triángulo TFT %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 color %8',
        SD_CATEGORY: 'Tarjeta SD',
        SD_INIT: 'iniciar tarjeta SD PIN MOSI:11 MISO:12 CLK:13 CS: %1',
        SD_TYPE: 'SD tipo cs# %1',
        SD_LIST: 'listar archivos en SD root cs# %1',
        SD_VAR: 'SD %1 cs# %2',
        SD_JUDGE: '¿%1 archivo existe?',
        SD_DELETE: 'eliminar %1',
        SD_READ: 'leer %1',
        SD_WRITE: 'escribir archivo SD %1 Datos %2 NewLine %3',
        TFTSD_INIT: 'Pantalla TFT muestra inicialización de imagen de tarjeta SD',
        TFTSD_DISPLAY: 'Nombre de imagen de tarjeta SD %1 Coordenada X %2 Coordenada Y %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['fr'], {
        KS_VARIABLE_LABEL:'Type de variable',
         KS_variables_declare:'Déclarer %1 variable Type %2 Nom %3 Attribué à %4',
         KS_variables_set: 'Définir la variable %1 par %2',
         KS_variables_change:'Changer %1 mode variable %2',
         KS_variables_value: 'variable %1',
         KS_variables_setString: 'Définir la variable chaîne %1 par %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'entier',
         KS_MATH_LONG: 'long',
         KS_MATH_FLOAT: 'flottant',
         KS_MATH_BOOLEAN: 'booléen',
         KS_MATH_BYTE: 'octet',
         KS_MATH_CHAR: 'car',
         KS_MATH_STRING: 'chaîne',
         KS_MATH_UNSIGNED_INT: 'entier non signé',
         KS_MATH_WORD: 'mot',
         KS_MATH_UNSIGNED_LONG: 'long non signé',
         KS_MATH_UNSIGNED_CHAR: 'caractère non signé',
         KS_MATH_DOUBLE: 'doubler',

         KS_TEXT_LABEL:'TEXTE',
         KS_char: 'car%1',
         KS_string: 'chaîne%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'logique',
         KS_judge:'%1 %2 %3',
         Arduino_TFT_CATEGORY: 'TFT',
         INITR_GREENTAB: 'TAB VERT (ST7735)',
         INITR_REDTAB: 'TAB ROUGE (ST7735)',
         INITR_BLACKTAB: 'TAB NOIR (ST7735)',
         Arduino_TFT_begin1: 'Initialiser TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
         Arduino_TFT_begin2: 'Initialiser TFT %1 RST# %2 CS# %3 DC %4',
         Arduino_TFT_invertDisplay: 'Inverser affichage TFT %1',
         YES: 'OUI',
         NO: 'NON',
         Arduino_TFT_backlight: 'Définir rétroéclairage TFT broche BL %1 luminosité %2',
         Arduino_TFT_setRotation: 'Rotation écran TFT %1',
         Arduino_TFT_set_cursor: 'Définir la position du curseur TFT à X %1 Y %2',
         Arduino_TFT_qr_code_display: 'Afficher code QR contenu %1 x %2 y %3 zoom %4',
         Arduino_TFT_setTextSize: 'Définir taille police TFT %1',
         font_micro: 'micro',
         font_small: 'petit',
         font_middle: 'moyen',
         font_big: 'grand',
         font_large: 'très grand',
         Arduino_TFT_set_screen_color: 'Définir %1 de l"écran TFT à %2',
         setTextColor: 'Définir couleur police',
         fillScreen: 'Couleur de fond de l"écran',
         Arduino_TFT_set_text_background_color: 'Définir couleur police Police %1 couleur de fond %2',
         Arduino_TFT_show_english: 'Afficher texte anglais position X %1 Y %2 couleur police %3 couleur de fond %4 contenu %5 taille %6 nouvelle ligne %7',
        
         Arduino_TFT_show_text: 'Afficher texte (anglais) %1 contenu %2',
         print: 'sans retour à la ligne',
         println: 'avec retour à la ligne',
         Arduino_TFT_show_num: 'Afficher numéro TFT %1 contenu %2 base %3',
         DEC: 'DÉC',
         BIN: 'BIN',
         OCT: 'OCT',
         HEX: 'HEX',
         Fast_TFT_draw_pixel: 'Dessiner pixel TFT X %1 Y %2 couleur %3',
         Fast_TFT_draw_line: 'Dessiner ligne TFT point de départ X %1 Y %2 point d\'arrivée X %3 Y %4 couleur %5',
         Fast_TFT_draw_angle_line: 'Dessiner ligne angulaire TFT Point de départ X %1 Y %2 longueur %3 angle %4 couleur %5',
         Fast_TFT_draw_line1: 'TFT %1 Point de départ X %2 Y %3 longueur %4 couleur %5',
         drawFastHLine: 'Ligne horizontale',
         drawFastVLine: 'Ligne verticale',
         Fast_TFT_draw_rect_change: 'Dessiner rectangle TFT %1 coin supérieur gauche X %2 Y %3 largeur %4 hauteur %5 couleur %6',
         draw: 'contour',
         fill: 'remplir',
         Fast_TFT_draw_Roundrect_change: 'Dessiner rectangle arrondi TFT %1 coin supérieur gauche X %2 Y %3 largeur %4 hauteur %5 rayon %6 couleur %7',
         Fast_TFT_draw_circle: 'Dessiner cercle TFT %1 Centre d\'un cercle X %2 Y %3 rayon %4 couleur %5',
         Fast_TFT_draw_CircleHelper: 'Dessiner arc TFT Centre d\'un cercle X %1 Y %2 rayon %3 arc segmenté %4 couleur %5',
         Fast_TFT_draw_CircleHelper_data: 'supérieur gauche %1 supérieur droit %2 gauche inférieur %3 droit inférieur %4',
         Fast_TFT_fill_CircleHelper: 'Dessiner arc rempli TFT Centre d\'un cercle X %1 Y %2 rayon %3 arc segmenté %4 longueur %5 couleur %6',
         Fast_TFT_oled_fill_CircleHelper_data: 'supérieur gauche et gauche inférieur %1 supérieur droit et droit inférieur %2',
         Fast_TFT_draw_ellipse: 'Dessiner ellipse TFT %1 Centre d\'un cercle X %2 Y %3 rayon X %4 rayon Y %5 arc segmenté %6 couleur %7',
         draw_ellipse: 'contour',
         fill_ellipse: 'remplir',
         Fast_TFT_draw_triangle: 'Dessiner triangle TFT %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 couleur %8',
         SD_CATEGORY: 'Carte SD',
         SD_INIT: 'initialisation du code PIN de la carte SD MOSI:11 MISO:12 CLK:13 CS: %1',
         SD_TYPE: 'SD type cs# %1',
         SD_LIST: 'liste les fichiers dans la racine SD cs# %1',
         SD_VAR: 'SD %1 cs# %2',
         SD_JUDGE: '%1 Fichier existe?',
         SD_DELETE: 'supprimer %1',
         SD_READ: 'lire %1',
         SD_WRITE: 'écrire le fichier SD %1 Data %2 NewLine %3',
         TFTSD_INIT: 'Écran TFT affiche l"initialisation de l"image de la carte SD',
         TFTSD_DISPLAY: 'Nom de l"image de la carte SD %1 Coordonnée X %2 Coordonnée Y %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ja'], {
        KS_VARIABLE_LABEL:'変数タイプ',
         KS_variables_declare:'%1 変数を宣言します。タイプ %2 名前 %3 を %4 に割り当てます',
         KS_variables_set:'%1 変数を %2 で設定',
         KS_variables_change:'%1 変数モード %2 を変更',
         KS_variables_value: '変数 %1',
         KS_variables_setString:'%1 文字列変数を %2 で設定',
         KS_global:'グローバル',
         KS_local:'ローカル',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: '長い',
         KS_MATH_FLOAT: '浮動小数点',
         KS_MATH_BOOLEAN: 'ブール値',
         KS_MATH_BYTE: 'バイト',
         KS_MATH_CHAR: '文字',
         KS_MATH_STRING: '文字列',
         KS_MATH_UNSIGNED_INT: '符号なし整数',
         KS_MATH_WORD: '単語',
         KS_MATH_UNSIGNED_LONG: '符号なしロング',
         KS_MATH_UNSIGNED_CHAR: '符号なし文字',
         KS_MATH_DOUBLE: '倍精度',

         KS_TEXT_LABEL:'テキスト',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'ロジック',
         KS_judge:'%1 %2 %3',
         Arduino_TFT_CATEGORY: 'TFT',
         INITR_GREENTAB: 'GREEN TAB(ST7735)',
         INITR_REDTAB: 'RED TAB(ST7735)',
         INITR_BLACKTAB: 'BLACK LAB(ST7735)',
         Arduino_TFT_begin1: 'TFTを初期化 %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
         Arduino_TFT_begin2: 'TFTを初期化 %1 RST# %2 CS# %3 DC %4',
         Arduino_TFT_invertDisplay: 'TFTの表示を反転する %1',
         YES: 'はい',
         NO: 'いいえ',
         Arduino_TFT_backlight: 'TFTのバックライトを設定 BLピン %1 明るさ %2',
         Arduino_TFT_setRotation: 'TFT画面の回転 %1',
         Arduino_TFT_set_cursor: 'TFTのカーソル位置を設定 X %1 Y %2',
         Arduino_TFT_qr_code_display: 'QRコードの表示 コンテンツ %1 x %2 y %3 拡大 %4',
         Arduino_TFT_setTextSize: 'TFTのフォントサイズを設定 %1',
         font_micro: 'マイクロ',
         font_small: '小',
         font_middle: '中',
         font_big: '大',
         font_large: '特大',
         Arduino_TFT_set_screen_color: 'TFTの %1 を %2 に設定する',
         setTextColor: 'フォントの色を設定',
         fillScreen: '画面の背景色',
         Arduino_TFT_set_text_background_color: 'TFTのフォントの色を設定 フォント %1  背景色 %2',
         Arduino_TFT_show_english: '英語のテキストを表示 位置 X %1 Y %2 フォントの色 %3 背景色 %4 コンテンツ %5 サイズ %6 改行 %7',
         
         Arduino_TFT_show_text: 'テキストを表示（英語） %1 コンテンツ %2',
         print: '改行なし',
         println: '改行あり',
         Arduino_TFT_show_num: '数字を表示 %1 コンテンツ %2 基数 %3',
         DEC: '10進数',
         BIN: '2進数',
         OCT: '8進数',
         HEX: '16進数',
         Fast_TFT_draw_pixel: 'ピクセルを描画 X %1 Y %2 色 %3',
         Fast_TFT_draw_line: '直線を描画 始点 X %1 Y %2 終点 X %3 Y %4 色 %5',
         Fast_TFT_draw_angle_line: '角度線を描画 始点 X %1 Y %2 長さ %3 角度 %4 色 %5',
         Fast_TFT_draw_line1: 'TFT %1 始点 X %2 Y %3 長さ %4 色 %5',
         drawFastHLine: '水平線',
         drawFastVLine: '垂直線',
         Fast_TFT_draw_rect_change: '四角形を描画 %1 左上の角 X %2 Y %3 幅 %4 高さ %5 色 %6',
         draw: '空心',
         fill: '塗りつぶし',
         Fast_TFT_draw_Roundrect_change: '角丸の四角形を描画 %1 左上の角 X %2 Y %3 幅 %4 高さ %5 半径 %6 色 %7',
         Fast_TFT_draw_circle: '円を描画 %1 円の中心 X %2 Y %3 半径 %4 色 %5',
         Fast_TFT_draw_CircleHelper: '円弧を描画 円の中心 X %1 Y %2 半径 %3 セグメントアーク %4 色 %5',
         Fast_TFT_draw_CircleHelper_data: '左上 %1 右上 %2 左下 %3 右下 %4',
         Fast_TFT_fill_CircleHelper: '塗りつぶし円弧を描画 円の中心 X %1 Y %2 半径 %3 セグメントアーク %4 長さ %5 色 %6',
         Fast_TFT_oled_fill_CircleHelper_data: '左上と左下 %1 右上と右下 %2',
         Fast_TFT_draw_ellipse: '楕円を描画 %1 楕円の中心 X %2 Y %3 X半径 %4 Y半径 %5 セグメントアーク %6 色 %7',
         draw_ellipse: '空心',
         fill_ellipse: '塗りつぶし',
         Fast_TFT_draw_triangle: '三角形を描画 %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 色 %8',
         SD_CATEGORY: 'SD カード',
         SD_INIT: 'SD カードの初期化 PIN MOSI:11 MISO:12 CLK:13 CS: %1',
         SD_TYPE: 'SD タイプ cs# %1',
         SD_LIST: 'SD ルート cs# %1 内のファイルをリストします',
         SD_VAR: 'SD %1 cs# %2',
         SD_JUDGE: '%1 ファイルは存在しますか?',
         SD_DELETE: '%1 を削除',
         SD_READ: '%1 を読み取り',
         SD_WRITE: 'SD ファイル %1 データ %2 NewLine %3 を書き込みます',
         TFTSD_INIT: 'TFT画面がSDカードの画像初期化を表示',
         TFTSD_DISPLAY: 'SDカード画像名 %1 X座標 %2 Y座標 %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ko'], {
        KS_VARIABLE_LABEL:'변수 유형',
         KS_variables_declare:'%1 변수 유형 %2 이름 %3 선언 %4에 할당됨',
         KS_variables_set:'%1 변수를 %2로 설정',
         KS_variables_change:'%1 변수 모드 %2 변경',
         KS_variables_value: '변수 %1',
         KS_variables_setString:'%1 문자열 변수를 %2로 설정',
         KS_global:'글로벌',
         KS_local:'로컬',
         KS_MATH_INT: '정수',
         KS_MATH_LONG: '긴',
         KS_MATH_FLOAT: '부동',
         KS_MATH_BOOLEAN: '부울',
         KS_MATH_BYTE: '바이트',
         KS_MATH_CHAR: '문자',
         KS_MATH_STRING: '문자열',
         KS_MATH_UNSIGNED_INT: '부호 없는 정수',
         KS_MATH_WORD: '단어',
         KS_MATH_UNSIGNED_LONG: '부호 없는 롱',
         KS_MATH_UNSIGNED_CHAR: '부호 없는 문자',
         KS_MATH_DOUBLE: '더블',

         KS_TEXT_LABEL:'텍스트',
         KS_char: '문자%1',
         KS_string: '문자열%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'논리',
         KS_judge:'%1 %2 %3',
         Arduino_TFT_CATEGORY: 'TFT',
         INITR_GREENTAB: 'GREEN TAB(ST7735)',
         INITR_REDTAB: 'RED TAB(ST7735)',
         INITR_BLACKTAB: 'BLACK LAB(ST7735)',
         Arduino_TFT_begin1: 'TFT 초기화 %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
         Arduino_TFT_begin2: 'TFT 초기화 %1 RST# %2 CS# %3 DC %4',
         Arduino_TFT_invertDisplay: 'TFT 화면 반전 %1',
         YES: '예',
         NO: '아니오',
         Arduino_TFT_backlight: 'TFT 백라이트 설정 BL 핀 %1 밝기 %2',
         Arduino_TFT_setRotation: 'TFT 화면 회전 %1',
         Arduino_TFT_set_cursor: 'TFT 커서 위치 설정 X %1 Y %2',
         Arduino_TFT_qr_code_display: 'QR 코드 표시 내용 %1 x %2 y %3 확대 %4',
         Arduino_TFT_setTextSize: 'TFT 글꼴 크기 설정 %1',
         font_micro: '마이크로',
         font_small: '작은',
         font_middle: '중간',
         font_big: '큰',
         font_large: '아주 큰',
         Arduino_TFT_set_screen_color: 'TFT %1 설정 %2',
         setTextColor: '글꼴 색상 설정',
         fillScreen: '화면 배경색 설정',
         Arduino_TFT_set_text_background_color: 'TFT 글꼴 색상 설정 글꼴 %1  배경색 %2',
         Arduino_TFT_show_english: '영어 텍스트 표시 위치 X %1 Y %2 글꼴 색상 %3 배경색 %4 내용 %5 크기 %6 새 줄 %7',
         
         Arduino_TFT_show_text: '텍스트 표시(영어) %1 내용 %2',
         print: '개행 없음',
         println: '개행 포함',
         Arduino_TFT_show_num: '숫자 표시 %1 내용 %2 기수 %3',
         DEC: '십진법',
         BIN: '이진법',
         OCT: '8진법',
         HEX: '16진법',
         Fast_TFT_draw_pixel: '픽셀 그리기 X %1 Y %2 색상 %3',
         Fast_TFT_draw_line: '선 그리기 시작점 X %1 Y %2 끝점 X %3 Y %4 색상 %5',
         Fast_TFT_draw_angle_line: '각도 선 그리기 시작점 X %1 Y %2 길이 %3 각도 %4 색상 %5',
         Fast_TFT_draw_line1: 'TFT %1 시작점 X %2 Y %3 길이 %4 색상 %5',
         drawFastHLine: '수평선',
         drawFastVLine: '수직선',
         Fast_TFT_draw_rect_change: '사각형 그리기 %1 좌상단 X %2 Y %3 폭 %4 높이 %5 색상 %6',
         draw: '테두리',
         fill: '채우기',
         Fast_TFT_draw_Roundrect_change: '둥근 사각형 그리기 %1 좌상단 X %2 Y %3 폭 %4 높이 %5 반지름 %6 색상 %7',
         Fast_TFT_draw_circle: '원 그리기 %1 원 중심 X %2 Y %3 반지름 %4 색상 %5',
         Fast_TFT_draw_CircleHelper: '호 그리기 원 중심 X %1 Y %2 반지름 %3 세그먼트 호 %4 색상 %5',
         Fast_TFT_draw_CircleHelper_data: '좌상단 %1 우상단 %2 좌하단 %3 우하단 %4',
         Fast_TFT_fill_CircleHelper: '채우기 호 그리기 원 중심 X %1 Y %2 반지름 %3 세그먼트 호 %4 길이 %5 색상 %6',
         Fast_TFT_oled_fill_CircleHelper_data: '좌상단 및 좌하단 %1 우상단 및 우하단 %2',
         Fast_TFT_draw_ellipse: '타원 그리기 %1 타원 중심 X %2 Y %3 X 반지름 %4 Y 반지름 %5 세그먼트 호 %6 색상 %7',
         draw_ellipse: '테두리',
         fill_ellipse: '채우기',
         Fast_TFT_draw_triangle: '삼각형 그리기 %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 색상 %8',
         SD_CATEGORY: 'SD 카드',
         SD_INIT: 'SD 카드 PIN 초기화 MOSI:11 MISO:12 CLK:13 CS: %1',
         SD_TYPE: 'SD 유형 cs# %1',
         SD_LIST: 'SD 루트 cs# %1에 있는 파일 나열',
         SD_VAR: 'SD %1 cs# %2',
         SD_JUDGE: '%1 파일이 존재합니까?',
         SD_DELETE: '%1 삭제',
         SD_READ: '%1 읽기',
         SD_WRITE: 'SD 파일 %1 데이터 %2 NewLine %3 쓰기',
         TFTSD_INIT: 'TFT 화면이 SD 카드 이미지 초기화를 표시합니다',
         TFTSD_DISPLAY: 'SD 카드 이미지 이름 %1 X 좌표 %2 Y 좌표 %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['pl'], {
        KS_VARIABLE_LABEL:'Typ zmiennej',
        KS_variables_declare:'Deklaracja %1 zmiennej Typ %2 Nazwa %3 Przypisana do %4',
        KS_variables_set:'Ustaw zmienną %1 na %2',
        KS_variables_change:'Zmień tryb zmiennej %1 %2',
        KS_variables_value: 'zmienna %1',
        KS_variables_setString:'Ustaw zmienną łańcuchową %1 o %2',
        KS_global:'Globalny',
        KS_local:'Lokalny',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'długi',
        KS_MATH_FLOAT: 'pływa',
        KS_MATH_BOOLEAN: 'wartość logiczna',
        KS_MATH_BYTE: 'bajt',
        KS_MATH_CHAR: 'znak',
        KS_MATH_STRING: 'ciąg znaków',
        KS_MATH_UNSIGNED_INT: 'bez znaku int',
        KS_MATH_WORD: 'słowo',
        KS_MATH_UNSIGNED_LONG: 'długi bez znaku',
        KS_MATH_UNSIGNED_CHAR: 'znak bez znaku',
        KS_MATH_DOUBLE: 'podwójne',

        KS_TEXT_LABEL:'TEKST',
        KS_char: 'znak%1',
        KS_string: 'ciąg%1',
        KS_datae: '%1',

        KS_LOGIC_LABEL:'logika',
        KS_judge:'%1%2%3',
        Arduino_TFT_CATEGORY: 'TFT',
        INITR_GREENTAB: 'ZIELONA KARTKA(ST7735)',
        INITR_REDTAB: 'CZERWONA KARTKA(ST7735)',
        INITR_BLACKTAB: 'CZARNA KARTKA(ST7735)',
        Arduino_TFT_begin1: 'Inicjalizuj TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
        Arduino_TFT_begin2: 'Inicjalizuj TFT %1 RST# %2 CS# %3 DC %4',
        Arduino_TFT_invertDisplay: 'Odwróć wyświetlacz TFT %1',
        YES: 'TAK',
        NO: 'NIE',
        Arduino_TFT_backlight: 'Ustaw podświetlenie TFT pin BL %1 jasność %2',
        Arduino_TFT_setRotation: 'Obrót ekranu TFT %1',
        Arduino_TFT_set_cursor: 'Ustaw pozycję kursora TFT na X %1 Y %2',
        Arduino_TFT_qr_code_display: 'Wyświetl kod QR zawartość %1 x %2 y %3 powiększenie %4',
        Arduino_TFT_setTextSize: 'Ustaw rozmiar czcionki TFT %1',
        font_micro: 'mikro',
        font_small: 'mała',
        font_middle: 'średnia',
        font_big: 'duża',
        font_large: 'bardzo duża',
        Arduino_TFT_set_screen_color: 'Ustaw %1 ekranu TFT na %2',
        setTextColor: 'Ustaw kolor czcionki',
        fillScreen: 'Kolor tła ekranu',
        Arduino_TFT_set_text_background_color: 'Ustaw kolor czcionki TFT czcionka %1  kolor tła %2',
        Arduino_TFT_show_english: 'Wyświetl angielski tekst pozycja X %1 Y %2 kolor czcionki %3 kolor tła %4 zawartość %5 rozmiar %6 nowa linia %7',
        
        Arduino_TFT_show_text: 'Wyświetl tekst (angielski) %1 zawartość %2',
        print: 'bez nowej linii',
        println: 'z nową linią',
        Arduino_TFT_show_num: 'Wyświetl numer TFT %1 zawartość %2 podstawa %3',
        DEC: 'DZIESIĘTNY',
        BIN: 'BINARNY',
        OCT: 'ÓSEMKA',
        HEX: 'SZESNASTKOWY',
        Fast_TFT_draw_pixel: 'Rysuj piksel TFT X %1 Y %2 kolor %3',
        Fast_TFT_draw_line: 'Rysuj linię TFT punkt początkowy X %1 Y %2 punkt końcowy X %3 Y %4 kolor %5',
        Fast_TFT_draw_angle_line: 'Rysuj linię pod kątem TFT Punkt początkowy X %1 Y %2 długość %3 kąt %4 kolor %5',
        Fast_TFT_draw_line1: 'TFT %1 Punkt początkowy X %2 Y %3 długość %4 kolor %5',
        drawFastHLine: 'Linia pozioma',
        drawFastVLine: 'Linia pionowa',
        Fast_TFT_draw_rect_change: 'Rysuj prostokąt TFT %1 górny lewy róg X %2 Y %3 szerokość %4 wysokość %5 kolor %6',
        draw: 'obrys',
        fill: 'wypełnienie',
        Fast_TFT_draw_Roundrect_change: 'Rysuj zaokrąglony prostokąt TFT %1 górny lewy róg X %2 Y %3 szerokość %4 wysokość %5 promień %6 kolor %7',
        Fast_TFT_draw_circle: 'Rysuj okrąg TFT %1 Środek okręgu X %2 Y %3 promień %4 kolor %5',
        Fast_TFT_draw_CircleHelper: 'Rysuj łuk okręgu TFT Środek okręgu X %1 Y %2 promień %3 segment łuku %4 kolor %5',
        Fast_TFT_draw_CircleHelper_data: 'górny lewy %1 górny prawy %2 lewy dolny %3 prawy dolny %4',
        Fast_TFT_fill_CircleHelper: 'Rysuj wypełniony łuk okręgu TFT Środek okręgu X %1 Y %2 promień %3 segment łuku %4 długość %5 kolor %6',
        Fast_TFT_oled_fill_CircleHelper_data: 'górny lewy i lewy dolny %1 górny prawy i prawy dolny %2',
        Fast_TFT_draw_ellipse: 'Rysuj elipsę TFT %1 Środek elipsy X %2 Y %3 Promień X %4 Promień Y %5 segment łuku %6 kolor %7',
        draw_ellipse: 'obrys',
        fill_ellipse: 'wypełnienie',
        Fast_TFT_draw_triangle: 'Rysuj trójkąt TFT %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 kolor %8',
        SD_CATEGORY: 'Karta SD',
        SD_INIT: 'inicjalny PIN karty SD MOSI:11 MISO:12 CLK:13 CS: %1',
        SD_TYPE: 'SD typ cs# %1',
        SD_LIST: 'lista plików w katalogu głównym SD cs# %1',
        SD_VAR: 'SD %1 cs# %2',
        SD_JUDGE: '%1 plików istnieje?',
        SD_DELETE: 'usuń %1',
        SD_READ: 'odczyt %1',
        SD_WRITE: 'zapisz plik SD %1 Dane %2 NewLine %3',
        TFTSD_INIT: 'Ekran TFT wyświetla inicjalizację obrazu karty SD',
        TFTSD_DISPLAY: 'Nazwa obrazu karty SD %1 Współrzędna X %2 Współrzędna Y %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['pt'], {
        KS_VARIABLE_LABEL:'Tipo de variável',
         KS_variables_declare:'Declare %1 variável Tipo %2 Nome %3 Atribuído a %4',
         KS_variables_set:'Definir %1 variável por %2',
         KS_variables_change:'Alterar %1 modo de variável %2',
         KS_variables_value: 'variável %1',
         KS_variables_setString:'Definir variável de string %1 por %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: 'longo',
         KS_MATH_FLOAT: 'flutuar',
         KS_MATH_BOOLEAN: 'booleano',
         KS_MATH_BYTE: 'byte',
         KS_MATH_CHAR: 'char',
         KS_MATH_STRING: 'string',
         KS_MATH_UNSIGNED_INT: 'int unsigned',
         KS_MATH_WORD: 'palavra',
         KS_MATH_UNSIGNED_LONG: 'não assinado longo',
         KS_MATH_UNSIGNED_CHAR: 'caractere não assinado',
         KS_MATH_DOUBLE: 'duplo',

         KS_TEXT_LABEL:'TEXT',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'lógica',
         KS_judge:'%1 %2 %3',
         Arduino_TFT_CATEGORY: 'TFT',
         INITR_GREENTAB: 'TAB VERDE (ST7735)',
         INITR_REDTAB: 'TAB VERMELHO (ST7735)',
         INITR_BLACKTAB: 'TAB PRETO (ST7735)',
         Arduino_TFT_begin1: 'Inicializar TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
         Arduino_TFT_begin2: 'Inicializar TFT %1 RST# %2 CS# %3 DC %4',
         Arduino_TFT_invertDisplay: 'Inverter display TFT %1',
         YES: 'SIM',
         NO: 'NÃO',
         Arduino_TFT_backlight: 'Definir retroiluminação TFT pino BL %1 brilho %2',
         Arduino_TFT_setRotation: 'Rotação da tela TFT %1',
         Arduino_TFT_set_cursor: 'Definir posição do cursor TFT para X %1 Y %2',
         Arduino_TFT_qr_code_display: 'Exibir código QR conteúdo %1 x %2 y %3 zoom %4',
         Arduino_TFT_setTextSize: 'Definir tamanho da fonte TFT %1',
         font_micro: 'micro',
         font_small: 'pequena',
         font_middle: 'média',
         font_big: 'grande',
         font_large: 'grande',
         Arduino_TFT_set_screen_color: 'Definir %1 da tela TFT para %2',
         setTextColor: 'Definir cor da fonte',
         fillScreen: 'Cor de fundo da tela',
         Arduino_TFT_set_text_background_color: 'Definir cor da fonte TFT Fonte %1 cor de fundo %2',
         Arduino_TFT_show_english: 'Exibir inglês posição X %1 Y %2 cor da fonte %3 cor de fundo %4 conteúdo %5 tamanho %6 nova linha %7',
         
         Arduino_TFT_show_text: 'Exibir texto (inglês) %1 conteúdo %2',
         print: 'sem quebra de linha',
         println: 'com quebra de linha',
         Arduino_TFT_show_num: 'Exibir número TFT %1 conteúdo %2 base %3',
         DEC: 'DEC',
         BIN: 'BIN',
         OCT: 'OCT',
         HEX: 'HEX',
         Fast_TFT_draw_pixel: 'Desenhar pixel TFT X %1 Y %2 cor %3',
         Fast_TFT_draw_line: 'Desenhar linha TFT ponto inicial X %1 Y %2 ponto final X %3 Y %4 cor %5',
         Fast_TFT_draw_angle_line: 'Desenhar linha angular TFT Ponto de partida X %1 Y %2 comprimento %3 ângulo %4 cor %5',
         Fast_TFT_draw_line1: 'TFT %1 Ponto de partida X %2 Y %3 comprimento %4 cor %5',
         drawFastHLine: 'Linha horizontal',
         drawFastVLine: 'Linha vertical',
         Fast_TFT_draw_rect_change: 'Desenhar retângulo TFT %1 canto superior esquerdo X %2 Y %3 largura %4 altura %5 cor %6',
         draw: 'contorno',
         fill: 'preencher',
         Fast_TFT_draw_Roundrect_change: 'Desenhar retângulo arredondado TFT %1 canto superior esquerdo X %2 Y %3 largura %4 altura %5 raio %6 cor %7',
         Fast_TFT_draw_circle: 'Desenhar círculo TFT %1 Centro de um círculo X %2 Y %3 raio %4 cor %5',
         Fast_TFT_draw_CircleHelper: 'Desenhar arco TFT Centro de um círculo X %1 Y %2 raio %3 arco segmentar %4 cor %5',
         Fast_TFT_draw_CircleHelper_data: 'superior esquerdo %1 superior direito %2 esquerda inferior %3 direita inferior %4',
         Fast_TFT_fill_CircleHelper: 'Desenhar arco preenchido TFT Centro de um círculo X %1 Y %2 raio %3 arco segmentar %4 comprimento %5 cor %6',
         Fast_TFT_oled_fill_CircleHelper_data: 'superior esquerdo e esquerda inferior %1 superior direito e direita inferior %2',
         Fast_TFT_draw_ellipse: 'Desenhar elipse TFT %1 Centro de um círculo X %2 Y %3 raio X %4 raio Y %5 arco segmentar %6 cor %7',
         draw_ellipse: 'contorno',
         fill_ellipse: 'preencher',
         Fast_TFT_draw_triangle: 'Desenhar triângulo TFT %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 cor %8',
         SD_CATEGORY: 'cartão SD',
         SD_INIT: 'iniciar PIN do cartão SD MOSI:11 MISO:12 CLK:13 CS: %1',
         SD_TYPE: 'SD tipo cs# %1',
         SD_LIST: 'listar arquivos em SD root cs# %1',
         SD_VAR: 'SD %1 cs# %2',
         SD_JUDGE: 'Arquivo %1 existe?',
         SD_DELETE: 'excluir %1',
         SD_READ: 'ler %1',
         SD_WRITE: 'escrever arquivo SD %1 Data %2 NewLine %3',
         TFTSD_INIT: 'Tela TFT exibe inicialização da imagem do cartão SD',
         TFTSD_DISPLAY: 'Nome da imagem do cartão SD %1 Coordenada X %2 Coordenada Y %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ru'], {
        KS_VARIABLE_LABEL: 'Тип переменной',
         KS_variables_declare:'Объявить переменную %1 Тип %2 Имя %3 Назначено %4',
         KS_variables_set:'Установить переменную %1 на %2',
         KS_variables_change:'Изменить режим переменной %1 %2',
         KS_variables_value: 'переменная %1',
         KS_variables_setString:'Установить %1 строковую переменную на %2',
         KS_global: 'Глобальный',
         KS_local: 'Местный',
         KS_MATH_INT: 'целое',
         KS_MATH_LONG: 'длинный',
         KS_MATH_FLOAT: 'плавающая',
         KS_MATH_BOOLEAN: 'логическое значение',
         KS_MATH_BYTE: 'байт',
         KS_MATH_CHAR: 'символ',
         KS_MATH_STRING: 'строка',
         KS_MATH_UNSIGNED_INT: 'целое число без знака',
         KS_MATH_WORD: 'слово',
         KS_MATH_UNSIGNED_LONG: 'длинное без знака',
         KS_MATH_UNSIGNED_CHAR: 'беззнаковый символ',
         KS_MATH_DOUBLE: 'двойной',

         KS_TEXT_LABEL:'ТЕКСТ',
         KS_char: 'символ%1',
         KS_string: 'строка%1',
         KS_data: '%1',

         KS_LOGIC_LABEL: 'логика',
         KS_judge:'%1 %2 %3',
         Arduino_TFT_CATEGORY: 'TFT',
         INITR_GREENTAB: 'ЗЕЛЕНАЯ ВКЛАДКА(ST7735)',
         INITR_REDTAB: 'КРАСНАЯ ВКЛАДКА(ST7735)',
         INITR_BLACKTAB: 'ЧЕРНАЯ ВКЛАДКА(ST7735)',
         Arduino_TFT_begin1: 'Инициализация TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
         Arduino_TFT_begin2: 'Инициализация TFT %1 RST# %2 CS# %3 DC %4',
         Arduino_TFT_invertDisplay: 'Инвертировать отображение TFT %1',
         YES: 'ДА',
         NO: 'НЕТ',
         Arduino_TFT_backlight: 'Установить подсветку TFT пин BL %1 яркость %2',
         Arduino_TFT_setRotation: 'Поворот экрана TFT %1',
         Arduino_TFT_set_cursor: 'Установить позицию курсора TFT по X %1 Y %2',
         Arduino_TFT_qr_code_display: 'Отобразить QR-код содержание %1 x %2 y %3 масштабирование %4',
         Arduino_TFT_setTextSize: 'Установить размер шрифта TFT %1',
         font_micro: 'микро',
         font_small: 'маленький',
         font_middle: 'средний',
         font_big: 'большой',
         font_large: 'крупный',
         Arduino_TFT_set_screen_color: 'Установить %1 на экране TFT в %2',
         setTextColor: 'Установить цвет шрифта',
         fillScreen: 'Цвет фона экрана',
         Arduino_TFT_set_text_background_color: 'Установить цвет шрифта TFT Шрифт %1  фоновый цвет %2',
         Arduino_TFT_show_english: 'Отобразить английский текст позиция X %1 Y %2 цвет шрифта %3 цвет фона %4 содержание %5 размер %6 новая строка %7',
         
         Arduino_TFT_show_text: 'Отобразить текст(английский) %1 содержание %2',
         print: 'без переноса строки',
         println: 'с переносом строки',
         Arduino_TFT_show_num: 'Отобразить число TFT %1 содержание %2 основание %3',
         DEC: 'ДЕЦ',
         BIN: 'ДВОИЧ',
         OCT: 'ВОСМИЧ',
         HEX: 'ШЕСТНАДЦАТИЧ',
         Fast_TFT_draw_pixel: 'Нарисовать пиксель TFT X %1 Y %2 цвет %3',
         Fast_TFT_draw_line: 'Нарисовать линию TFT начальная точка X %1 Y %2 конечная точка X %3 Y %4 цвет %5',
         Fast_TFT_draw_angle_line: 'Нарисовать угловую линию TFT Начальная точка X %1 Y %2 длина %3 угол %4 цвет %5',
         Fast_TFT_draw_line1: 'TFT %1 Начальная точка X %2 Y %3 длина %4 цвет %5',
         drawFastHLine: 'Горизонтальная линия',
         drawFastVLine: 'Вертикальная линия',
         Fast_TFT_draw_rect_change: 'Нарисовать прямоугольник TFT %1 левый верхний угол X %2 Y %3 ширина %4 высота %5 цвет %6',
         draw: 'контур',
         fill: 'заливка',
         Fast_TFT_draw_Roundrect_change: 'Нарисовать скругленный прямоугольник TFT %1 левый верхний угол X %2 Y %3 ширина %4 высота %5 радиус %6 цвет %7',
         Fast_TFT_draw_circle: 'Нарисовать круг TFT %1 Центр круга X %2 Y %3 радиус %4 цвет %5',
         Fast_TFT_draw_CircleHelper: 'Нарисовать дугу TFT Центр круга X %1 Y %2 радиус %3 сегментная дуга %4 цвет %5',
         Fast_TFT_draw_CircleHelper_data: 'верхний левый %1 верхний правый %2 левый нижний %3 правый нижний %4',
         Fast_TFT_fill_CircleHelper: 'Нарисовать заполненную дугу TFT Центр круга X %1 Y %2 радиус %3 сегментная дуга %4 длина %5 цвет %6',
         Fast_TFT_oled_fill_CircleHelper_data: 'верхний левый и левый нижний %1 верхний правый и правый нижний %2',
         Fast_TFT_draw_ellipse: 'Нарисовать эллипс TFT %1 Центр круга X %2 Y %3 X радиус %4 Y радиус %5 сегментная дуга %6 цвет %7',
         draw_ellipse: 'контур',
         fill_ellipse: 'заливка',
         Fast_TFT_draw_triangle: 'Нарисовать треугольник TFT %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 цвет %8',
         SD_CATEGORY: 'SD-карта',
         SD_INIT: 'инициализировать PIN-код SD-карты MOSI:11 MISO:12 CLK:13 CS: %1',
         SD_TYPE: 'Тип SD cs# %1',
         SD_LIST: 'список файлов в корневом каталоге SD cs# %1',
         SD_VAR: 'SD %1 cs# %2',
         SD_JUDGE: '%1 Файл существует?',
         SD_DELETE: 'удалить %1',
         SD_READ: 'прочитано %1',
         SD_WRITE: 'записать SD-файл %1 Data %2 NewLine %3',
         TFTSD_INIT: 'Экран TFT отображает инициализацию изображения карты SD',
         TFTSD_DISPLAY: 'Имя изображения карты SD %1 X-координата %2 Y-координата %3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        KS_VARIABLE_LABEL:'變量類型',
        KS_variables_declare:'聲明 %1 數字變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_declare2:'聲明 %1 字符串變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_set:'設置 %1 變量 為 %2',
        KS_variables_change:'設置 %1 變量 模式 %2',
        KS_variables_value: '變量 %1',
        KS_variables_setString:'設置 %1 字符串變量 為 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整數',
        KS_MATH_LONG: '長整數',
        KS_MATH_FLOAT: '小數',
        KS_MATH_BOOLEAN: '布爾',
        KS_MATH_BYTE: '字節',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '無符號整數',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '無符號長整數',
        KS_MATH_UNSIGNED_CHAR: '無符號字符',
        KS_MATH_DOUBLE: '雙精度浮點數',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'邏輯',
        KS_judge:'%1 %2 %3', 
        Arduino_TFT_CATEGORY:'TFT',
        INITR_GREENTAB:'綠色標籤(ST7735)',
        INITR_REDTAB:'紅色標籤(ST7735)',
        INITR_BLACKTAB:'黑色標籤(ST7735)',
        Arduino_TFT_begin1:'初始化TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
        Arduino_TFT_begin2:'初始化TFT %1 RST# %2 CS# %3 DC %4',
        Arduino_TFT_invertDisplay:'TFT 顏色反轉 %1',
        YES:'是',
        NO:'否',
        Arduino_TFT_backlight:'TFT 設置背光 引腳BL %1 亮度 %2',
        Arduino_TFT_setRotation:'TFT螢幕旋轉 %1',
        Arduino_TFT_set_cursor:'TFT 設置游標位置為 X %1 Y %2',
        Arduino_TFT_qr_code_display:'二維碼顯示 內容 %1 x %2 y %3 放大倍數 %4',
        Arduino_TFT_setTextSize:'TFT 設置字體尺寸 %1',
        font_micro:'微小',
        font_small:'小',
        font_middle:'中',
        font_big:'大',
        font_large:'超大',
        Arduino_TFT_set_screen_color:'TFT 設置 %1 為 %2',
        setTextColor:'設置字體顏色',
        fillScreen:'螢幕背景色',
        Arduino_TFT_set_text_background_color:'TFT 設置字體顏色 字體 %1 背景 %2',
        Arduino_TFT_show_english:'TFT 顯示英文 位置 X %1 Y %2 字體顏色 %3 背景顏色 %4 內容 %5 尺寸 %6 換行 %7',      
       
        Arduino_TFT_show_text:'TFT 顯示文本(英文) %1 內容 %2', 
        print:'不換行',
        println:'換行', 
        Arduino_TFT_show_num:'TFT 顯示數字 %1 內容 %2 進制 %3',
        DEC:'十進位',
        BIN:'二進位',
        OCT:'八進制',
        HEX:'十六進制',
        Fast_TFT_draw_pixel:'TFT 畫點 X %1 Y %2 顏色 %3',
        Fast_TFT_draw_line:'TFT 畫線 起點 X %1 Y %2 終點 X %3 Y %4 顏色 %5',
        Fast_TFT_draw_angle_line:'TFT 畫線 起點 X %1 Y %2 長度 %3 角度 %4 顏色 %5',
        Fast_TFT_draw_line1:'TFT %1 起點 X %2 Y %3 長度 %4 顏色 %5',
        drawFastHLine:'水平線',
        drawFastVLine:'垂直線',
        Fast_TFT_draw_rect_change:'TFT 畫矩形 %1 左上角 X %2 Y %3 寬度 %4 高度 %5 顏色 %6',
        draw:'空心',
        fill:'實心',
        Fast_TFT_draw_Roundrect_change:'TFT 畫圓角矩形 %1 左上角 X %2 Y %3 寬度 %4 高度 %5 半徑 %6 顏色 %7',
        Fast_TFT_draw_circle:'TFT 畫圓 %1 圓心 X %2 Y %3 半徑 %4 顏色 %5',
        Fast_TFT_draw_CircleHelper:'TFT 畫圓弧 圓心 X %1 Y %2 半徑 %3 弧段 %4 顏色 %5',
        Fast_TFT_draw_CircleHelper_data:'左上 %1 右上 %2 左下 %3 右下 %4',
        Fast_TFT_fill_CircleHelper:'TFT 畫實心圓弧 圓心 X %1 Y %2 半徑 %3 弧段 %4 長度 %5 顏色 %6',
        Fast_TFT_oled_fill_CircleHelper_data:'左上&左下 %1 右上&右下 %2',
        Fast_TFT_draw_ellipse:'TFT 畫橢圓 %1 圓心 X %2 Y %3 X半徑 %4 Y半徑 %5 弧段 %6 顏色 %7',
        draw_ellipse:'空心',
        fill_ellipse:'實心',
        Fast_TFT_draw_triangle:'TFT 畫三角形 %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 顏色 %8',
        SD_CATEGORY: 'SD卡',
        SD_INIT: '初始化 SD卡 引腳 MOSI:11 MISO:12 CLK:13 CS:%1',
        SD_TYPE: 'SD類型 cs引腳%1',
        SD_LIST: '列出SD根目錄文件 cs引腳%1',
        SD_VAR: '讀取SD%1 cs引腳%2',
        SD_JUDGE: '%1文件存在？ ',
        SD_DELETE: '刪除%1',
        SD_READ: '讀取%1',
        SD_WRITE: '寫入SD 文件%1 數據%2 換行%3',
        TFTSD_INIT: 'TFT 螢幕顯示SD卡圖片 初始化',
        TFTSD_DISPLAY: 'SD卡 圖片名稱%1 X座標%2 Y座標%3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',
        Arduino_TFT_CATEGORY:'TFT',
        INITR_GREENTAB:'绿色标签(ST7735)',
        INITR_REDTAB:'红色标签(ST7735)',
        INITR_BLACKTAB:'黑色标签(ST7735)',
        Arduino_TFT_begin1:'初始化TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
        Arduino_TFT_begin2:'初始化TFT %1 RST# %2 CS# %3 DC %4',
        Arduino_TFT_invertDisplay:'TFT 颜色反转 %1',
        YES:'是',
        NO:'否',
        Arduino_TFT_backlight:'TFT 设置背光 引脚BL %1 亮度 %2',
        Arduino_TFT_setRotation:'TFT屏幕旋转 %1',
        Arduino_TFT_set_cursor:'TFT 设置光标位置为 X %1 Y %2',
        Arduino_TFT_qr_code_display:'二维码显示 内容 %1 x %2 y %3 放大倍数 %4',
        Arduino_TFT_setTextSize:'TFT 设置字体尺寸 %1',
        font_micro:'微小',
        font_small:'小',
        font_middle:'中',
        font_big:'大',
        font_large:'超大',
        Arduino_TFT_set_screen_color:'TFT 设置 %1 为 %2',
        setTextColor:'设置字体颜色',
        fillScreen:'屏幕背景色',
        Arduino_TFT_set_text_background_color:'TFT 设置字体颜色 字体 %1 背景 %2',
        Arduino_TFT_show_english:'TFT 显示英文 位置 X %1 Y %2 字体颜色 %3 背景颜色 %4 内容 %5 尺寸 %6 换行 %7',      
       
        Arduino_TFT_show_text:'TFT 显示文本(英文) %1 内容 %2', 
        print:'不换行',
        println:'换行', 
        Arduino_TFT_show_num:'TFT 显示数字 %1 内容 %2 进制 %3',
        DEC:'十进制',
        BIN:'二进制',
        OCT:'八进制',
        HEX:'十六进制',
        Fast_TFT_draw_pixel:'TFT 画点 X %1 Y %2 颜色 %3',
        Fast_TFT_draw_line:'TFT 画线 起点 X %1 Y %2 终点 X %3 Y %4 颜色 %5',
        Fast_TFT_draw_angle_line:'TFT 画线 起点 X %1 Y %2 长度 %3 角度 %4 颜色 %5',
        Fast_TFT_draw_line1:'TFT %1 起点 X %2 Y %3 长度 %4 颜色 %5',
        drawFastHLine:'水平线',
        drawFastVLine:'垂直线',
        Fast_TFT_draw_rect_change:'TFT 画矩形 %1 左上角 X %2 Y %3 宽度 %4 高度 %5 颜色 %6',
        draw:'空心',
        fill:'实心',
        Fast_TFT_draw_Roundrect_change:'TFT 画圆角矩形 %1 左上角 X %2 Y %3 宽度 %4 高度 %5 半径 %6 颜色 %7',
        Fast_TFT_draw_circle:'TFT 画圆 %1 圆心 X %2 Y %3 半径 %4 颜色 %5',
        Fast_TFT_draw_CircleHelper:'TFT 画圆弧 圆心 X %1 Y %2 半径 %3 弧段 %4 颜色 %5',
        Fast_TFT_draw_CircleHelper_data:'左上 %1 右上 %2 左下 %3 右下 %4',
        Fast_TFT_fill_CircleHelper:'TFT 画实心圆弧 圆心 X %1 Y %2 半径 %3 弧段 %4 长度 %5 颜色 %6',
        Fast_TFT_oled_fill_CircleHelper_data:'左上&左下 %1 右上&右下 %2',
        Fast_TFT_draw_ellipse:'TFT 画椭圆 %1 圆心 X %2 Y %3 X半径 %4 Y半径 %5 弧段 %6 颜色 %7',
        draw_ellipse:'空心',
        fill_ellipse:'实心',
        Fast_TFT_draw_triangle:'TFT 画三角形 %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 颜色 %8',
        SD_CATEGORY: 'SD卡',
        SD_INIT: '初始化 SD卡 引脚 MOSI:11 MISO:12 CLK:13 CS:%1',
        SD_TYPE: 'SD类型 cs引脚%1',
        SD_LIST: '列出SD根目录文件 cs引脚%1',
        SD_VAR: '读取SD%1 cs引脚%2',
        SD_JUDGE: '%1文件存在？',
        SD_DELETE: '删除%1',
        SD_READ: '读取%1',
        SD_WRITE: '写入SD 文件%1 数据%2 换行%3',
        TFTSD_INIT: 'TFT 屏显示SD卡图片 初始化',
        TFTSD_DISPLAY: 'SD卡 图片名称%1 X坐标%2 Y坐标%3',
        TFTSD_INIT: 'TFT 屏显示SD卡图片 初始化',
        TFTSD_DISPLAY: 'SD卡 图片名称%1 X坐标%2 Y坐标%3',
    });
    Object.assign(Blockly.ScratchMsgs.locales['it'], {
        KS_VARIABLE_LABEL: 'Tipo di variabile',
        KS_variables_declare: 'Dichiara variabile numerica %1 Tipo %2 Nome %3 Valore %4',
        KS_variables_declare2: 'Dichiara variabile stringa %1 Tipo %2 Nome %3 Valore %4',
        KS_variables_set: 'Imposta variabile %1 a %2',
        KS_variables_change: 'Imposta variabile %1 modalità %2',
        KS_variables_value: 'Variabile %1',
        KS_variables_setString: 'Imposta variabile stringa %1 a %2',
        KS_global: 'Globale',
        KS_local: 'Locale',
        KS_MATH_INT: 'Intero',
        KS_MATH_LONG: 'Intero lungo',
        KS_MATH_FLOAT: 'Numero decimale',
        KS_MATH_BOOLEAN: 'Booleano',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'Carattere',
        KS_MATH_STRING: 'Stringa',
        KS_MATH_UNSIGNED_INT: 'Intero senza segno',
        KS_MATH_WORD: 'Parola',
        KS_MATH_UNSIGNED_LONG: 'Intero lungo senza segno',
        KS_MATH_UNSIGNED_CHAR: 'Carattere senza segno',
        KS_MATH_DOUBLE: 'Numero a doppia precisione', 
        KS_TEXT_LABEL: 'TESTO',  
        KS_char: 'carattere%1',  
        KS_string: 'stringa%1',  
        KS_data: '%1', 
        KS_LOGIC_LABEL: 'Logica',
        KS_judge: '%1 %2 %3',
        Arduino_TFT_CATEGORY: 'TFT',
        INITR_GREENTAB: 'Tab verde (ST7735)',
        INITR_REDTAB: 'Tab rosso (ST7735)',
        INITR_BLACKTAB: 'Tab nero (ST7735)',
        Arduino_TFT_begin1: 'Inizializza TFT %1 RST# %2 CS# %3 DC %4 MOSI %5 SCLK %6',
        Arduino_TFT_begin2: 'Inizializza TFT %1 RST# %2 CS# %3 DC %4',
        Arduino_TFT_invertDisplay: 'Inverti colori TFT %1',
        YES: 'Sì',
        NO: 'No',
        Arduino_TFT_backlight: 'Imposta retroilluminazione TFT Pin BL %1 Luminosità %2',
        Arduino_TFT_setRotation: 'Rotazione schermo TFT %1',
        Arduino_TFT_set_cursor: 'Imposta posizione cursore TFT X %1 Y %2',
        Arduino_TFT_qr_code_display: 'Mostra codice QR Contenuto %1 x %2 y %3 Scala %4',
        Arduino_TFT_setTextSize: 'Imposta dimensione del testo TFT %1',
        font_micro: 'Micro',
        font_small: 'Piccolo',
        font_middle: 'Medio',
        font_big: 'Grande',
        font_large: 'Molto grande',
        Arduino_TFT_set_screen_color: 'Imposta colore schermo TFT %1 a %2',
        setTextColor: 'Imposta colore del testo',
        fillScreen: 'Colore di sfondo dello schermo',
        Arduino_TFT_set_text_background_color: 'Imposta colore di sfondo del testo TFT %1 %2',
        Arduino_TFT_show_english: 'Mostra testo in inglese TFT Posizione X %1 Y %2 Colore testo %3 Colore sfondo %4 Contenuto %5 Dimensione %6 A capo %7',
        Arduino_TFT_show_text: 'Mostra testo (inglese) TFT %1 Contenuto %2',
        print: 'Senza a capo',
        println: 'Con a capo',
        Arduino_TFT_show_num: 'Mostra numero TFT %1 Contenuto %2 Base %3',
        DEC: 'Decimale',
        BIN: 'Binario',
        OCT: 'Ottale',
        HEX: 'Esadecimale',
        Fast_TFT_draw_pixel: 'Disegna pixel TFT X %1 Y %2 Colore %3',
        Fast_TFT_draw_line: 'Disegna linea TFT Punto di partenza X %1 Y %2 Punto di arrivo X %3 Y %4 Colore %5',
        Fast_TFT_draw_angle_line: 'Disegna linea angolare TFT Punto di partenza X %1 Y %2 Lunghezza %3 Angolo %4 Colore %5',
        Fast_TFT_draw_line1: 'Disegna linea TFT %1 Punto di partenza X %2 Y %3 Lunghezza %4 Colore %5',
        drawFastHLine: 'Linea orizzontale',
        drawFastVLine: 'Linea verticale',
        Fast_TFT_draw_rect_change: 'Disegna rettangolo TFT %1 Angolo in alto a sinistra X %2 Y %3 Larghezza %4 Altezza %5 Colore %6',
        draw: 'Contorno',
        fill: 'Pieno',
        Fast_TFT_draw_Roundrect_change: 'Disegna rettangolo arrotondato TFT %1 Angolo in alto a sinistra X %2 Y %3 Larghezza %4 Altezza %5 Raggio %6 Colore %7',
        Fast_TFT_draw_circle: 'Disegna cerchio TFT %1 Centro X %2 Y %3 Raggio %4 Colore %5',
        Fast_TFT_draw_CircleHelper: 'Disegna arco TFT Centro X %1 Y %2 Raggio %3 Segmento %4 Colore %5',
        Fast_TFT_draw_CircleHelper_data: 'In alto a sinistra %1 In alto a destra %2 In basso a sinistra %3 In basso a destra %4',
        Fast_TFT_fill_CircleHelper: 'Disegna cerchio pieno TFT Centro X %1 Y %2 Raggio %3 Segmento %4 Lunghezza %5 Colore %6',
        Fast_TFT_oled_fill_CircleHelper_data: 'In alto a sinistra & In basso a sinistra %1 In alto a destra & In basso a destra %2',
        Fast_TFT_draw_ellipse: 'Disegna ellisse TFT %1 Centro X %2 Y %3 Raggio X %4 Raggio Y %5 Segmento %6 Colore %7',
        draw_ellipse: 'Contorno',
        fill_ellipse: 'Pieno',
        Fast_TFT_draw_triangle: 'Disegna triangolo TFT %1 X1 %2 Y1 %3 X2 %4 Y2 %5 X3 %6 Y3 %7 Colore %8',
        SD_CATEGORY: 'Scheda SD',
        SD_INIT: 'Inizializza scheda SD Pin MOSI:11 MISO:12 CLK:13 CS:%1',
        SD_TYPE: 'Tipo SD Pin CS %1',
        SD_LIST: 'Elenco file nella directory principale SD Pin CS %1',
        SD_VAR: 'Leggi SD %1 Pin CS %2',
        SD_JUDGE: 'Esiste il file %1?',
        SD_DELETE: 'Elimina %1',
        SD_READ: 'Leggi %1',
        SD_WRITE: 'Scrivi su SD File %1 Dati %2 A capo %3',
        TFTSD_INIT: 'Inizializza immagine da scheda SD per TFT',
        TFTSD_DISPLAY: 'Immagine SD Nome %1 X %2 Y %3',
        TFTSD_INIT: 'Inizializza immagine da scheda SD per TFT',
        TFTSD_DISPLAY: 'Immagine SD Nome %1 X %2 Y %3',        
    });
    return Blockly;
}

exports = addMsg;
