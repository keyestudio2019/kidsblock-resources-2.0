/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',

        ROBOT_CATEGORY: 'Run',
        ROBOT_FORWARD: 'Robot run forward,left motor speed %1 right motor speed %2',
        ROBOT_BACK: 'Robot run backward,left motor speed %1 right motor speed %2',
        ROBOT_LEFT: 'Robot turn left,left motor speed %1 right motor speed %2',
        ROBOT_RIGHT: 'Robot turn right,left motor speed %1 right motor speed %2',
        ROBOT_STOP: 'Robot stop',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED pin %1 outputs %2',
        LED_ANALOG: 'LED Light %1 analog output %2',
        LIGHTSENSOR_CATEGORY: 'Light sensor',
        LIGHTSENSOR_READ_VALUE: 'Read pin %1 light value',
        BLE_SERIAL_CATEGORY: 'Read bluetooth data',
        BLE_DATA: 'Receive bluetooth information until # received',
        MOTOR130_CATEGORY: 'Motor',
        MOTOR130_DIGITAL: 'Motor INA#%1 State%2 INB#%3 State%4',
        MOTOR130_ANALOG: 'Motor INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'Servo',
        KS_SERVO_ANGLE: 'Servo PIN#%1 degree%2 delay%3',
        KS_SERVO_READ: 'Servo PIN#%1 read degree',
        HC_SR04_CATEGORY: 'Ultrasonic',
        HC_SR04_READ_DISTANCE: 'HC-SR04 trig pin %1 echo pin %2 read distance %3',
        IR_CATEGORY: 'IR Remote',
        IR_INIT: 'IR remote init PIN#%1',
        IR_DATA: 'Received data',
        IR_READ: 'Read the data',
        IR_REFRESH: 'Refresh data',
        MATRIX8_16_CATEGORY: 'Matrix',
        MATRIX8_16_INIT: 'Init AiP1640 Matrix 8*16 SDA%1 SCL%2',
        MATRIX8_16_DISPLAY: 'Martix %1 display %2 No%3image name%4',
        MATRIX8_16_FACE: 'Matrix display face%1',
        MATRIX8_16_PIEXL: ' Matrix X Axis%1 Y Axis%2 State%3',
        MATRIX8_16_REFRESH: ' Matrix refresh',
        MATRIX8_16_CLEAR: 'Matrix8*16 clear',
    });
    Object.assign(Blockly.ScratchMsgs.locales['de'], {
        KS_VARIABLE_LABEL:'Variablentyp',
        KS_variables_declare:'Deklarieren Sie %1 Variablentyp %2 Name %3 Zugewiesen an %4',
        KS_variables_set:'Variable %1 um %2 setzen',
        KS_variables_change:'Variablenmodus %1 %2 ändern',
        KS_variables_value: 'Variable %1',
        KS_variables_setString:'Setze %1 String-Variable um %2',
        KS_global:'Global',
        KS_local:'Lokal',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'lang',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'Zeichenfolge',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'Wort',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'Logik',
        KS_judge:'%1 %2 %3',

        ROBOT_CATEGORY: 'Fahrt',
        ROBOT_FORWARD: 'Roboter fährt vorwärts, linke Motor Geschwindigkeit %1 rechte Motor Geschwindigkeit %2',
        ROBOT_BACK: 'Roboter fährt rückwärts, linke Motor Geschwindigkeit %1 rechte Motor Geschwindigkeit %2',
        ROBOT_LEFT: 'Roboter dreht nach links, linke Motor Geschwindigkeit %1 rechte Motor Geschwindigkeit %2',
        ROBOT_RIGHT: 'Roboter dreht nach rechts, linke Motor Geschwindigkeit %1 rechte Motor Geschwindigkeit %2',
        ROBOT_STOP: 'Roboter stop',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED Pin %1 gibt %2 aus',
        LED_ANALOG: 'LED Licht %1 analoge Ausgabe %2',
        LIGHTSENSOR_CATEGORY: 'Lichtsensor',
        LIGHTSENSOR_READ_VALUE: 'Lese Pin %1 Lichtwert',
        BLE_SERIAL_CATEGORY: 'Bluetooth-Daten lesen',
        BLE_DATA: 'Empfange Bluetooth-Informationen bis # empfangen',
        MOTOR130_CATEGORY: 'Motor',
        MOTOR130_DIGITAL: 'Motor INA#%1 Status%2 INB#%3 Status%4',
        MOTOR130_ANALOG: 'Motor INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'Servo',
        KS_SERVO_ANGLE: 'Servo PIN#%1 Grad%2 Verzögerung%3',
        KS_SERVO_READ: 'Servo PIN#%1 Lesegrad',
        HC_SR04_CATEGORY: 'Ultraschall',
        HC_SR04_READ_DISTANCE: 'HC-SR04 Trig-Pin %1 Echo-Pin %2 Leseabstand %3',
        IR_CATEGORY: 'IR-Fernbedienung',
        IR_INIT: 'IR-Ferninitialisierungs-PIN#%1',
        IR_DATA: 'Empfangene Daten',
        IR_READ: 'Daten lesen',
        IR_REFRESH: 'Daten aktualisieren',
        MATRIX8_16_CATEGORY: 'Matrix',
        MATRIX8_16_INIT: 'Init AiP1640 Matrix 8*16 SDA%1 SCL%2',
        MATRIX8_16_DISPLAY: 'Matrix %1 Anzeige %2 Nr.%3 Bild name%4',
        MATRIX8_16_FACE: 'Matrix Anzeigefläche%1',
        MATRIX8_16_PIEXL: ' Matrix X-Achse%1 Y-Achse%2 Zustand%3',
        MATRIX8_16_REFRESH: ' Matrix-Aktualisierung',
        MATRIX8_16_CLEAR: 'Matrix8*16 löschen',
    });
    Object.assign(Blockly.ScratchMsgs.locales['es'], {
        KS_VARIABLE_LABEL:'Tipo de variable',
        KS_variables_declare:'Declarar %1 variable Tipo %2 Nombre %3 Asignado a %4',
        KS_variables_set:'Establecer %1 variable por %2',
        KS_variables_change:'Cambiar %1 modo variable %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Establecer %1 variable de cadena por %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'largo',
        KS_MATH_FLOAT: 'flotante',
        KS_MATH_BOOLEAN: 'booleano',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'carácter',
        KS_MATH_STRING: 'cadena',
        KS_MATH_UNSIGNED_INT: 'int sin firmar',
        KS_MATH_WORD: 'palabra',
        KS_MATH_UNSIGNED_LONG: 'largo sin firmar',
        KS_MATH_UNSIGNED_CHAR: 'caracter sin firmar',
        KS_MATH_DOUBLE: 'doble',

        KS_TEXT_LABEL:'TEXTO',
        KS_char: 'char%1',
        KS_string: 'cadena%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'lógica',
        KS_judge:'%1 %2 %3',

        ROBOT_CATEGORY: 'Paseo',
        ROBOT_FORWARD: 'Robot avanza, velocidad del motor izquierdo %1 velocidad del motor derecho %2',
        ROBOT_BACK: 'Robot retrocede, velocidad del motor izquierdo %1 velocidad del motor derecho %2',
        ROBOT_LEFT: 'Robot gira a la izquierda, velocidad del motor izquierdo %1 velocidad del motor derecho %2',
        ROBOT_RIGHT: 'Robot gira a la derecha, velocidad del motor izquierdo %1 velocidad del motor derecho %2',
        ROBOT_STOP: 'Parada del robot',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'Pin LED %1 emite %2',
        LED_ANALOG: 'Salida analógica de luz LED %1 %2',
        LIGHTSENSOR_CATEGORY: 'Sensor de luz',
        LIGHTSENSOR_READ_VALUE: 'Leer valor de luz en pin %1',
        BLE_SERIAL_CATEGORY: 'Leer datos de Bluetooth',
        BLE_DATA: 'Recibir información de Bluetooth hasta que se reciba #',
        MOTOR130_CATEGORY: 'Motor',
        MOTOR130_DIGITAL: 'Motor INA#%1 Estado%2 INB#%3 Estado%4',
        MOTOR130_ANALOG: 'Motor INA#%1 Estado%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'servo',
        KS_SERVO_ANGLE: 'servo PIN#%1 grado%2 retraso%3',
        KS_SERVO_READ: 'servo PIN#%1 grado de lectura',
        HC_SR04_CATEGORY: 'Ultrasónico',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin de activación %1 pin de eco %2 distancia de lectura %3',
        IR_CATEGORY: 'Remoto IR',
        IR_INIT: 'PIN de inicio remoto IR#%1',
        IR_DATA: 'Datos recibidos',
        IR_READ: 'Leer los datos',
        IR_REFRESH: 'Actualizar datos',
        MATRIX8_16_CATEGORY: 'Matriz',
        MATRIX8_16_INIT: 'Iniciar Matriz AiP1640 8*16 SDA%1 SCL%2',
        MATRIX8_16_DISPLAY: 'Matriz %1 visualización %2 No%3 nombre de imagen%4',
        MATRIX8_16_FACE: 'Matriz mostrar cara%1',
        MATRIX8_16_PIEXL: ' Matriz Eje X%1 Eje Y%2 Estado%3',
        MATRIX8_16_REFRESH: 'Actualización de matriz ',
        MATRIX8_16_CLEAR: 'Matriz8*16 claro',
    });
    Object.assign(Blockly.ScratchMsgs.locales['fr'], {
        KS_VARIABLE_LABEL:'Type de variable',
         KS_variables_declare:'Déclarer %1 variable Type %2 Nom %3 Attribué à %4',
         KS_variables_set: 'Définir la variable %1 par %2',
         KS_variables_change:'Changer %1 mode variable %2',
         KS_variables_value: 'variable %1',
         KS_variables_setString: 'Définir la variable chaîne %1 par %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'entier',
         KS_MATH_LONG: 'long',
         KS_MATH_FLOAT: 'flottant',
         KS_MATH_BOOLEAN: 'booléen',
         KS_MATH_BYTE: 'octet',
         KS_MATH_CHAR: 'car',
         KS_MATH_STRING: 'chaîne',
         KS_MATH_UNSIGNED_INT: 'entier non signé',
         KS_MATH_WORD: 'mot',
         KS_MATH_UNSIGNED_LONG: 'long non signé',
         KS_MATH_UNSIGNED_CHAR: 'caractère non signé',
         KS_MATH_DOUBLE: 'doubler',

         KS_TEXT_LABEL:'TEXTE',
         KS_char: 'car%1',
         KS_string: 'chaîne%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'logique',
         KS_judge:'%1 %2 %3',

         ROBOT_CATEGORY:'Conduire',
         ROBOT_FORWARD: 'Robot avance, vitesse du moteur gauche %1 vitesse du moteur droit %2',
         ROBOT_BACK: 'Robot recule, vitesse du moteur gauche %1 vitesse du moteur droit %2',
         ROBOT_LEFT: 'Robot tourne à gauche, vitesse du moteur gauche %1 vitesse du moteur droit %2',
         ROBOT_RIGHT: 'Robot tourne à droite, vitesse du moteur gauche %1 vitesse du moteur droit %2',
         ROBOT_STOP: 'Arrêt du robot',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'Pin LED %1 émet %2',
         LED_ANALOG: 'Sortie analogique LED %1 %2',
         LIGHTSENSOR_CATEGORY: 'Capteur de lumière',
         LIGHTSENSOR_READ_VALUE: 'Lire la valeur de lumière du pin %1',
         BLE_SERIAL_CATEGORY: 'Lire les données Bluetooth',
         BLE_DATA: 'Recevoir des informations Bluetooth jusqu’à réception de #',
         MOTOR130_CATEGORY: 'Moteur',
         MOTOR130_DIGITAL: 'Moteur INA#%1 État%2 INB#%3 État%4',
         MOTOR130_ANALOG: 'Moteur INA#%1 État%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: 'servo',
         KS_SERVO_ANGLE: 'servo PIN #%1 degré%2 retard%3',
         KS_SERVO_READ: 'servo PIN #%1 degré de lecture',
         HC_SR04_CATEGORY: 'Ultrasons',
         HC_SR04_READ_DISTANCE: 'broche de déclenchement HC-SR04 %1 broche d"écho %2 distance de lecture %3',
         IR_CATEGORY: 'Télécommande infrarouge',
         IR_INIT: 'PIN d"initialisation à distance IR#%1',
         IR_DATA: 'Données reçues',
         IR_READ: 'Lire les données',
         IR_REFRESH: 'Actualiser les données',
         MATRIX8_16_CATEGORY: 'Matrice',
         MATRIX8_16_INIT: 'Init AiP1640 Matrice 8*16 SDA%1 SCL%2',
         MATRIX8_16_DISPLAY: 'Matrice %1 affichage %2 Non%3 nom de l"image%4',
         MATRIX8_16_FACE: 'Visage d"affichage Matrice%1',
         MATRIX8_16_PIEXL: ' Matrice Axe X%1 Axe Y%2 État%3',
         MATRIX8_16_REFRESH: 'Actualisation de la matrice ',
         MATRIX8_16_CLEAR: 'Matrice8*16 claire',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ja'], {
        KS_VARIABLE_LABEL:'変数タイプ',
         KS_variables_declare:'%1 変数を宣言します。タイプ %2 名前 %3 を %4 に割り当てます',
         KS_variables_set:'%1 変数を %2 で設定',
         KS_variables_change:'%1 変数モード %2 を変更',
         KS_variables_value: '変数 %1',
         KS_variables_setString:'%1 文字列変数を %2 で設定',
         KS_global:'グローバル',
         KS_local:'ローカル',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: '長い',
         KS_MATH_FLOAT: '浮動小数点',
         KS_MATH_BOOLEAN: 'ブール値',
         KS_MATH_BYTE: 'バイト',
         KS_MATH_CHAR: '文字',
         KS_MATH_STRING: '文字列',
         KS_MATH_UNSIGNED_INT: '符号なし整数',
         KS_MATH_WORD: '単語',
         KS_MATH_UNSIGNED_LONG: '符号なしロング',
         KS_MATH_UNSIGNED_CHAR: '符号なし文字',
         KS_MATH_DOUBLE: '倍精度',

         KS_TEXT_LABEL:'テキスト',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'ロジック',
         KS_judge:'%1 %2 %3',

         ROBOT_CATEGORY: 'ライド',
         ROBOT_FORWARD: 'ロボットが前進します、左モーターの速度 %1 右モーターの速度 %2',
         ROBOT_BACK: 'ロボットが後退します、左モーターの速度 %1 右モーターの速度 %2',
         ROBOT_LEFT: 'ロボットが左に曲がります、左モーターの速度 %1 右モーターの速度 %2',
         ROBOT_RIGHT: 'ロボットが右に曲がります、左モーターの速度 %1 右モーターの速度 %2',
         ROBOT_STOP: 'ロボットストップ',
         LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LEDピン %1 が %2 を出力',
        LED_ANALOG: 'LEDライト %1 のアナログ出力 %2',
        LIGHTSENSOR_CATEGORY: '光センサー',
        LIGHTSENSOR_READ_VALUE: 'ピン %1 の光値を読み取る',
        BLE_SERIAL_CATEGORY: 'Bluetoothデータを読み取る',
        BLE_DATA: 'Bluetooth情報を#受信するまで受信',
         MOTOR130_CATEGORY: 'モーター',
         MOTOR130_DIGITAL: 'モーター INA#%1 状態%2 INB#%3 状態%4',
         MOTOR130_ANALOG: 'モーター INA#%1 状態%2 INB#%3 アナログ書き込み%4',
         KS_SERVO_CATEGORY: 'サーボ',
         KS_SERVO_ANGLE: 'サーボ PIN#%1 度%2 遅延%3',
         KS_SERVO_READ: 'サーボPIN#%1読み取り度',
         HC_SR04_CATEGORY: '超音波',
         HC_SR04_READ_DISTANCE: 'HC-SR04 トリガー ピン %1 エコー ピン %2 読み取り距離 %3',
         IR_CATEGORY: 'IR リモコン',
         IR_INIT: 'IR リモート初期化 PIN#%1',
         IR_DATA: '受信データ',
         IR_READ: 'データを読み取る',
         IR_REFRESH: 'データを更新',
         MATRIX8_16_CATEGORY: 'マトリックス',
         MATRIX8_16_INIT: 'AiP1640 マトリックス 8*16 SDA%1 SCL%2 を初期化',
         MATRIX8_16_DISPLAY: 'マトリックス %1 表示 %2 No%3 画像名 %4',
         MATRIX8_16_FACE: 'マトリックス 表示面%1',
         MATRIX8_16_PIEXL: ' マトリックス X 軸%1 Y 軸%2 状態%3',
         MATRIX8_16_REFRESH: ' マトリックスリフレッシュ',
         MATRIX8_16_CLEAR: 'マトリックス 8*16 クリア',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ko'], {
        KS_VARIABLE_LABEL:'변수 유형',
         KS_variables_declare:'%1 변수 유형 %2 이름 %3 선언 %4에 할당됨',
         KS_variables_set:'%1 변수를 %2로 설정',
         KS_variables_change:'%1 변수 모드 %2 변경',
         KS_variables_value: '변수 %1',
         KS_variables_setString:'%1 문자열 변수를 %2로 설정',
         KS_global:'글로벌',
         KS_local:'로컬',
         KS_MATH_INT: '정수',
         KS_MATH_LONG: '긴',
         KS_MATH_FLOAT: '부동',
         KS_MATH_BOOLEAN: '부울',
         KS_MATH_BYTE: '바이트',
         KS_MATH_CHAR: '문자',
         KS_MATH_STRING: '문자열',
         KS_MATH_UNSIGNED_INT: '부호 없는 정수',
         KS_MATH_WORD: '단어',
         KS_MATH_UNSIGNED_LONG: '부호 없는 롱',
         KS_MATH_UNSIGNED_CHAR: '부호 없는 문자',
         KS_MATH_DOUBLE: '더블',

         KS_TEXT_LABEL:'텍스트',
         KS_char: '문자%1',
         KS_string: '문자열%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'논리',
         KS_judge:'%1 %2 %3',

         ROBOT_CATEGORY: '라이드',
         ROBOT_FORWARD: '로봇이 앞으로 이동합니다, 왼쪽 모터 속도 %1 오른쪽 모터 속도 %2',
         ROBOT_BACK: '로봇이 뒤로 이동합니다, 왼쪽 모터 속도 %1 오른쪽 모터 속도 %2',
         ROBOT_LEFT: '로봇이 왼쪽으로 회전합니다, 왼쪽 모터 속도 %1 오른쪽 모터 속도 %2',
         ROBOT_RIGHT: '로봇이 오른쪽으로 회전합니다, 왼쪽 모터 속도 %1 오른쪽 모터 속도 %2',
         ROBOT_STOP: '로봇 중지',
         LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED 핀 %1이 %2를 출력',
        LED_ANALOG: 'LED 조명 %1의 아날로그 출력 %2',
        LIGHTSENSOR_CATEGORY: '조도 센서',
        LIGHTSENSOR_READ_VALUE: '핀 %1의 빛 값을 읽기',
        BLE_SERIAL_CATEGORY: 'Bluetooth 데이터 읽기',
        BLE_DATA: 'Bluetooth 정보를 # 수신될 때까지 수신',
         MOTOR130_CATEGORY: '모터',
         MOTOR130_DIGITAL: '모터 INA#%1 상태%2 INB#%3 상태%4',
         MOTOR130_ANALOG: '모터 INA#%1 상태%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: '서보',
         KS_SERVO_ANGLE: '서보 PIN#%1도%2 지연%3',
         KS_SERVO_READ: '서보 PIN#%1 읽기 정도',
         HC_SR04_CATEGORY: '초음파',
         HC_SR04_READ_DISTANCE: 'HC-SR04 트리거 핀 %1 에코 핀 %2 읽기 거리 %3',
         IR_CATEGORY: 'IR 리모트',
         IR_INIT: 'IR 원격 초기화 PIN#%1',
         IR_DATA: '데이터 수신',
         IR_READ: '데이터 읽기',
         IR_REFRESH: '데이터 새로 고침',
         MATRIX8_16_CATEGORY: '매트릭스',
         MATRIX8_16_INIT: 'AiP1640 매트릭스 8*16 SDA%1 SCL%2 초기화',
         MATRIX8_16_DISPLAY: '매트릭스 %1디스플레이 %2번호%3이미지이름 %4',
         MATRIX8_16_FACE: '매트릭스 표시면%1',
         MATRIX8_16_PIEXL: ' 매트릭스 X축%1 Y축%2 상태%3',
         MATRIX8_16_REFRESH: ' 매트릭스 새로 고침',
         MATRIX8_16_CLEAR: '매트릭스 8*16 클리어',
    });
    Object.assign(Blockly.ScratchMsgs.locales['pl'], {
        KS_VARIABLE_LABEL:'Typ zmiennej',
        KS_variables_declare:'Deklaracja %1 zmiennej Typ %2 Nazwa %3 Przypisana do %4',
        KS_variables_set:'Ustaw zmienną %1 na %2',
        KS_variables_change:'Zmień tryb zmiennej %1 %2',
        KS_variables_value: 'zmienna %1',
        KS_variables_setString:'Ustaw zmienną łańcuchową %1 o %2',
        KS_global:'Globalny',
        KS_local:'Lokalny',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'długi',
        KS_MATH_FLOAT: 'pływa',
        KS_MATH_BOOLEAN: 'wartość logiczna',
        KS_MATH_BYTE: 'bajt',
        KS_MATH_CHAR: 'znak',
        KS_MATH_STRING: 'ciąg znaków',
        KS_MATH_UNSIGNED_INT: 'bez znaku int',
        KS_MATH_WORD: 'słowo',
        KS_MATH_UNSIGNED_LONG: 'długi bez znaku',
        KS_MATH_UNSIGNED_CHAR: 'znak bez znaku',
        KS_MATH_DOUBLE: 'podwójne',

        KS_TEXT_LABEL:'TEKST',
        KS_char: 'znak%1',
        KS_string: 'ciąg%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logika',
        KS__judge:'%1%2%3',

        ROBOT_CATEGORY: 'Jazda',
        ROBOT_FORWARD: 'Robot jedzie do przodu, prędkość lewego silnika %1 prędkość prawego silnika %2',
        ROBOT_BACK: 'Robot jedzie do tyłu, prędkość lewego silnika %1 prędkość prawego silnika %2',
        ROBOT_LEFT: 'Robot skręca w lewo, prędkość lewego silnika %1 prędkość prawego silnika %2',
        ROBOT_RIGHT: 'Robot skręca w prawo, prędkość lewego silnika %1 prędkość prawego silnika %2',
        ROBOT_STOP: 'Zatrzymanie robota',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'Pin LED %1 emituje %2',
        LED_ANALOG: 'Wyjście analogowe LED %1 %2',
        LIGHTSENSOR_CATEGORY: 'Czujnik światła',
        LIGHTSENSOR_READ_VALUE: 'Odczytaj wartość światła z pinu %1',
        BLE_SERIAL_CATEGORY: 'Czytaj dane Bluetooth',
        BLE_DATA: 'Odbierz informacje Bluetooth, aż zostanie odebrane #',
        MOTOR130_CATEGORY: 'Silnik',
        MOTOR130_DIGITAL: 'Silnik INA#%1 Stan%2 INB#%3 Stan%4',
        MOTOR130_ANALOG: 'Silnik INA#%1 Stan%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'serwo',
        KS_SERVO_ANGLE: 'serwo PIN#%1 stopień%2 opóźnienie%3',
        KS_SERVO_READ: 'serwo PIN#%1 stopień odczytu',
        HC_SR04_CATEGORY: 'Ultradźwięki',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin wyzwalający %1 pin echa %2 odległość odczytu %3',
        IR_CATEGORY: 'Pilot na podczerwień',
        IR_INIT: 'PIN zdalnej inicjalizacji IR#%1',
        IR_DATA: 'Otrzymane dane',
        IR_READ: 'Odczytaj dane',
        IR_REFRESH: 'Odśwież dane',
        MATRIX8_16_CATEGORY: 'Matryca',
        MATRIX8_16_INIT: 'Inicjacja Matryca AiP1640 8*16 SDA%1 SCL%2',
        MATRIX8_16_DISPLAY: 'Matryca %1 wyświetlacz %2 Nie%3 nazwa obrazu%4',
        MATRIX8_16_FACE: 'Matryca wyświetla twarz%1',
        MATRIX8_16_PIEXL: ' Matryca Oś X%1 Oś Y%2 Stan%3',
        MATRIX8_16_REFRESH: ' Odświeżenie Matryca',
        MATRIX8_16_CLEAR: 'Matryca 8*16 wyczyść',
    });
    Object.assign(Blockly.ScratchMsgs.locales['pt'], {
        KS_VARIABLE_LABEL:'Tipo de variável',
         KS_variables_declare:'Declare %1 variável Tipo %2 Nome %3 Atribuído a %4',
         KS_variables_set:'Definir %1 variável por %2',
         KS_variables_change:'Alterar %1 modo de variável %2',
         KS_variables_value: 'variável %1',
         KS_variables_setString:'Definir variável de string %1 por %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: 'longo',
         KS_MATH_FLOAT: 'flutuar',
         KS_MATH_BOOLEAN: 'booleano',
         KS_MATH_BYTE: 'byte',
         KS_MATH_CHAR: 'char',
         KS_MATH_STRING: 'string',
         KS_MATH_UNSIGNED_INT: 'int unsigned',
         KS_MATH_WORD: 'palavra',
         KS_MATH_UNSIGNED_LONG: 'não assinado longo',
         KS_MATH_UNSIGNED_CHAR: 'caractere não assinado',
         KS_MATH_DOUBLE: 'duplo',

         KS_TEXT_LABEL:'TEXT',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'lógica',
         KS_judge:'%1 %2 %3',

         ROBOT_CATEGORY: "Passeio",
         ROBOT_FORWARD: 'Robô avança, velocidade do motor esquerdo %1 velocidade do motor direito %2',
         ROBOT_BACK: 'Robô recua, velocidade do motor esquerdo %1 velocidade do motor direito %2',
         ROBOT_LEFT: 'Robô vira à esquerda, velocidade do motor esquerdo %1 velocidade do motor direito %2',
         ROBOT_RIGHT: 'Robô vira à direita, velocidade do motor esquerdo %1 velocidade do motor direito %2',
         ROBOT_STOP: 'Parada do robô',
         LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'Pino LED %1 emite %2',
        LED_ANALOG: 'Saída analógica do LED %1 %2',
        LIGHTSENSOR_CATEGORY: 'Sensor de luz',
        LIGHTSENSOR_READ_VALUE: 'Ler o valor de luz do pino %1',
        BLE_SERIAL_CATEGORY: 'Ler dados Bluetooth',
        BLE_DATA: 'Receber informações Bluetooth até que # seja recebido',
         MOTOR130_CATEGORY: 'Motor',
         MOTOR130_DIGITAL: 'Motor INA#%1 Estado%2 INB#%3 Estado%4',
         MOTOR130_ANALOG: 'Motor INA#%1 Estado%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: 'servo',
         KS_SERVO_ANGLE: 'PIN do servo#%1 grau%2 atraso%3',
         KS_SERVO_READ: 'PIN do servo#%1 grau de leitura',
         HC_SR04_CATEGORY: 'Ultrassônico',
         HC_SR04_READ_DISTANCE: 'HC-SR04 pino de ativação %1 pino de eco %2 distância de leitura %3',
         IR_CATEGORY: 'IR Remoto',
         IR_INIT: 'PIN de inicialização remota IV#%1',
         IR_DATA: 'Dados recebidos',
         IR_READ: 'Ler os dados',
         IR_REFRESH: 'Atualizar dados',
         MATRIX8_16_CATEGORY: 'Matriz',
         MATRIX8_16_INIT: 'Iniciar AiP1640 Matrix 8*16 SDA%1 SCL%2',
         MATRIX8_16_DISPLAY: 'Matriz %1 exibição %2 Não%3 nome da imagem%4',
         MATRIX8_16_FACE: 'Matrix8*16 exibe a face%1',
         MATRIX8_16_PIEXL: ' Matriz X Eixo%1 Eixo Y%2 Estado%3',
         MATRIX8_16_REFRESH: 'Atualização da matriz ',
         MATRIX8_16_CLEAR: 'Matriz8*16 limpa',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ru'], {
        KS_VARIABLE_LABEL: 'Тип переменной',
         KS_variables_declare:'Объявить переменную %1 Тип %2 Имя %3 Назначено %4',
         KS_variables_set:'Установить переменную %1 на %2',
         KS_variables_change:'Изменить режим переменной %1 %2',
         KS_variables_value: 'переменная %1',
         KS_variables_setString:'Установить %1 строковую переменную на %2',
         KS_global: 'Глобальный',
         KS_local: 'Местный',
         KS_MATH_INT: 'целое',
         KS_MATH_LONG: 'длинный',
         KS_MATH_FLOAT: 'плавающая',
         KS_MATH_BOOLEAN: 'логическое значение',
         KS_MATH_BYTE: 'байт',
         KS_MATH_CHAR: 'символ',
         KS_MATH_STRING: 'строка',
         KS_MATH_UNSIGNED_INT: 'целое число без знака',
         KS_MATH_WORD: 'слово',
         KS_MATH_UNSIGNED_LONG: 'длинное без знака',
         KS_MATH_UNSIGNED_CHAR: 'беззнаковый символ',
         KS_MATH_DOUBLE: 'двойной',

         KS_TEXT_LABEL:'ТЕКСТ',
         KS_char: 'символ%1',
         KS_string: 'строка%1',
         KS_data: '%1',

         KS_LOGIC_LABEL: 'логика',
         KS_judge:'%1 %2 %3',

         ROBOT_CATEGORY: 'Поездка',
         ROBOT_FORWARD: 'Робот движется вперед, скорость левого мотора %1 скорость правого мотора %2',
         ROBOT_BACK: 'Робот движется назад, скорость левого мотора %1 скорость правого мотора %2',
         ROBOT_LEFT: 'Робот поворачивает налево, скорость левого мотора %1 скорость правого мотора %2',
         ROBOT_RIGHT: 'Робот поворачивает направо, скорость левого мотора %1 скорость правого мотора %2',
         ROBOT_STOP: 'Остановка робота',
         LED_CATEGORY: 'Светодиод',
        LED_SET_LED_STATE: 'Пин светодиода %1 выводит %2',
        LED_ANALOG: 'Аналоговый выход светодиода %1 %2',
        LIGHTSENSOR_CATEGORY: 'Датчик света',
        LIGHTSENSOR_READ_VALUE: 'Читать световое значение с пина %1',
        BLE_SERIAL_CATEGORY: 'Чтение данных Bluetooth',
        BLE_DATA: 'Получать информацию Bluetooth до получения #',
         MOTOR130_CATEGORY: 'Двигатель',
         MOTOR130_DIGITAL: 'Двигатель INA#%1 Состояние%2 INB#%3 Состояние%4',
         MOTOR130_ANALOG: 'Двигатель INA#%1 State%2 INB#%3 AnalogWrite%4',
         KS_SERVO_CATEGORY: 'сервопривод',
         KS_SERVO_ANGLE: 'ПИН-код сервопривода №%1 градус%2 задержка%3',
         KS_SERVO_READ: 'сервопривод PIN#%1 степень чтения',
         HC_SR04_CATEGORY: 'Ультразвук',
         HC_SR04_READ_DISTANCE: 'HC-SR04 триггерный вывод %1 эхо-вывод %2 расстояние чтения %3',
         IR_CATEGORY: 'ИК-пульт',
         IR_INIT: 'ПИН-код инициализации ИК-пульта #%1',
         IR_DATA: 'Полученные данные',
         IR_READ: 'Прочитать данные',
         IR_REFRESH: 'Обновить данные',
         MATRIX8_16_CATEGORY: 'Матрица',
         MATRIX8_16_INIT: 'Инициировать Матрица AiP1640 8*16 SDA%1 SCL%2',
         MATRIX8_16_DISPLAY: 'Матрица %1 отображение %2 №%3 имя изображения%4',
         MATRIX8_16_FACE: 'Матрица отображать лицо%1',
         MATRIX8_16_PIEXL: ' Матрица X Axis%1 Y Axis%2 State%3',
         MATRIX8_16_REFRESH: 'Обновление Матрица ',
         MATRIX8_16_CLEAR: 'Матрица 8*16 очистить',
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        KS_VARIABLE_LABEL:'變量類型',
        KS_variables_declare:'聲明 %1 數字變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_declare2:'聲明 %1 字符串變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_set:'設置 %1 變量 為 %2',
        KS_variables_change:'設置 %1 變量 模式 %2',
        KS_variables_value: '變量 %1',
        KS_variables_setString:'設置 %1 字符串變量 為 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整數',
        KS_MATH_LONG: '長整數',
        KS_MATH_FLOAT: '小數',
        KS_MATH_BOOLEAN: '布爾',
        KS_MATH_BYTE: '字節',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '無符號整數',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '無符號長整數',
        KS_MATH_UNSIGNED_CHAR: '無符號字符',
        KS_MATH_DOUBLE: '雙精度浮點數',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'邏輯',
        KS_judge:'%1 %2 %3',
        ROBOT_CATEGORY: '運動',
        ROBOT_FORWARD: '小車前進 左電機速度為 %1 右電機速度為 %2',
        ROBOT_BACK: '小車後退 左電機速度為 %1 右電機速度為 %2',
        ROBOT_LEFT: '小車左轉 左電機速度為 %1 右電機速度為 %2',
        ROBOT_RIGHT: '小車右轉 左電機速度為 %1 右電機速度為 %2',
        ROBOT_STOP: '小車停',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED 接口 %1 輸出 %2',
        LED_ANALOG: 'LED 燈 %1 模擬輸出 %2',
        LIGHTSENSOR_CATEGORY: '光線傳感器',
        LIGHTSENSOR_READ_VALUE: '讀取 PIN %1 光強度',
        BLE_SERIAL_CATEGORY: '讀取藍牙資訊',
        BLE_DATA: '接收藍牙資訊直到接收到 #',
        MOTOR130_CATEGORY: '電機',
        MOTOR130_DIGITAL: '電機驅動 INA#%1 電平為%2 INB#%3 電平為%4',
        MOTOR130_ANALOG: '電機驅動 INA#%1 電平為%2 INB#%3 模擬輸出值%4',
        KS_SERVO_CATEGORY: '舵機',
        KS_SERVO_ANGLE: '舵機 引腳%1 角度%2 延時(毫秒)%3',
        KS_SERVO_READ: '舵機 引腳%1 讀取度數',
        HC_SR04_CATEGORY: '超聲波',
        HC_SR04_READ_DISTANCE: '超聲波傳感器 trig 引腳 %1 echo 引腳 %2 讀取距離 %3',
        IR_CATEGORY: '紅外接收',
        IR_INIT: '初始化紅外接收 引腳%1',
        IR_DATA: '接收到紅外遙控的數據',
        IR_READ: '讀取紅外接收數據',
        IR_REFRESH: '刷新紅外接收數據',
        MATRIX8_16_CATEGORY: '點陣',
        MATRIX8_16_INIT: '初始化 點陣 8*16 AiP1640 SDA%1 SCL%2',
        MATRIX8_16_DISPLAY: '點陣屏%1 顯示%2 第%3組圖案 名稱%4',
        MATRIX8_16_FACE: '點陣8*16 顯示%1',
        MATRIX8_16_PIEXL: ' 點陣顯示點 X軸%1 Y軸%2 電平為%3',
        MATRIX8_16_REFRESH: '點陣 刷新顯示',
        MATRIX8_16_CLEAR: '點陣8*16 清屏',
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',
        ROBOT_CATEGORY: '运动',
        ROBOT_FORWARD: '小车前进 左电机速度为%1 右电机速度为%2',
        ROBOT_BACK: '小车后退 左电机速度为%1 右电机速度为%2',
        ROBOT_LEFT: '小车左转 左电机速度为%1 右电机速度为%2',
        ROBOT_RIGHT: '小车右转 左电机速度为%1 右电机速度为%2',
        ROBOT_STOP: '小车停止',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED 接口%1 输出%2 ',
        LED_ANALOG: 'LED灯 %1 模拟输出%2',
        LIGHTSENSOR_CATEGORY: '光线传感器',
        LIGHTSENSOR_READ_VALUE: '读取接口%1光线强度',
        BLE_SERIAL_CATEGORY: '读取蓝牙信息',
        BLE_DATA: '接收蓝牙信息 直到接收到#',
        MOTOR130_CATEGORY: '电机',
        MOTOR130_DIGITAL: '电机驱动 INA#%1 电平为%2 INB#%3 电平为%4',
        MOTOR130_ANALOG: '电机驱动 INA#%1 电平为%2 INB#%3 模拟输出值%4',
        KS_SERVO_CATEGORY: '舵机',
        KS_SERVO_ANGLE: '舵机 引脚%1 角度%2 延时(毫秒)%3',
        KS_SERVO_READ: '舵机 引脚%1 读取度数',
        HC_SR04_CATEGORY: '超声波',
        HC_SR04_READ_DISTANCE: '超声波传感器 trig 引脚 %1 echo 引脚 %2 读取距离 %3',
        IR_CATEGORY: '红外接收',
        IR_INIT: '初始化红外接收 引脚%1',
        IR_DATA: '接收到红外遥控的数据',
        IR_READ: '读取红外接收数据',
        IR_REFRESH: '刷新红外接收数据',
        MATRIX8_16_CATEGORY: '点阵屏',
        MATRIX8_16_INIT: '初始化 点阵屏 AiP1640 SDA%1 SCL%2',
        MATRIX8_16_DISPLAY: '点阵屏%1 显示%2 第%3组图案 名称%4',
        MATRIX8_16_FACE: '点阵 显示%1',
        MATRIX8_16_PIEXL: '点阵 显示点 X轴%1 Y轴%2 电平为%3',
        MATRIX8_16_REFRESH: '点阵 刷新显示',
        MATRIX8_16_CLEAR: '点阵8*16清屏',
    });
    Object.assign(Blockly.ScratchMsgs.locales['it'], {
        KS_VARIABLE_LABEL: 'Tipo di variabile',
        KS_variables_declare: 'Dichiara variabile numerica %1 tipo %2 nome %3 valore %4',
        KS_variables_declare2: 'Dichiara variabile stringa %1 tipo %2 nome %3 valore %4',
        KS_variables_set: 'Imposta variabile %1 su %2',
        KS_variables_change: 'Imposta variabile %1 modalità %2',
        KS_variables_value: 'Variabile %1',
        KS_variables_setString: 'Imposta variabile stringa %1 su %2',
        KS_global: 'Globale',
        KS_local: 'Locale',
        KS_MATH_INT: 'Intero',
        KS_MATH_LONG: 'Intero lungo',
        KS_MATH_FLOAT: 'Decimale',
        KS_MATH_BOOLEAN: 'Booleano',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'Carattere',
        KS_MATH_STRING: 'Stringa',
        KS_MATH_UNSIGNED_INT: 'Intero senza segno',
        KS_MATH_WORD: 'Parola',
        KS_MATH_UNSIGNED_LONG: 'Intero lungo senza segno',
        KS_MATH_UNSIGNED_CHAR: 'Carattere senza segno',
        KS_MATH_DOUBLE: 'Numero in virgola mobile doppia precisione',
    
        KS_TEXT_LABEL: 'TESTO',  
        KS_char: 'carattere%1',  
        KS_string: 'stringa%1',  
        KS_data: '%1', 
    
        KS_LOGIC_LABEL: 'Logica',
        KS_judge: '%1 %2 %3',
    
        ROBOT_CATEGORY: 'Movimento',
        ROBOT_FORWARD: 'Robot avanza, velocità del motore sinistro %1 velocità del motore destro %2',
        ROBOT_BACK: 'Robot indietreggia, velocità del motore sinistro %1 velocità del motore destro %2',
        ROBOT_LEFT: 'Robot gira a sinistra, velocità del motore sinistro %1 velocità del motore destro %2',
        ROBOT_RIGHT: 'Robot gira a destra, velocità del motore sinistro %1 velocità del motore destro %2',
        ROBOT_STOP: 'Veicolo fermo',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'Pin LED %1 emette %2',
        LED_ANALOG: 'Uscita analogica LED %1 %2',
        LIGHTSENSOR_CATEGORY: 'Sensore di luce',
        LIGHTSENSOR_READ_VALUE: 'Leggi il valore della luce sul pin %1',
        BLE_SERIAL_CATEGORY: 'Leggi dati Bluetooth',
        BLE_DATA: 'Ricevi informazioni Bluetooth fino a quando non viene ricevuto #',
        MOTOR130_CATEGORY: 'Motore',
        MOTOR130_DIGITAL: 'Controllo motore INA#%1 livello %2 INB#%3 livello %4',
        MOTOR130_ANALOG: 'Controllo motore INA#%1 livello %2 INB#%3 uscita analogica %4',
    
        KS_SERVO_CATEGORY: 'Servo',
        KS_SERVO_ANGLE: 'Servo Pin %1 angolo %2 ritardo (millisecondi) %3',
        KS_SERVO_READ: 'Leggi angolo del servo Pin %1',
    
        HC_SR04_CATEGORY: 'Sensore ultrasonico',
        HC_SR04_READ_DISTANCE: 'Sensore ultrasonico trig Pin %1 echo Pin %2 leggi distanza %3',
    
        IR_CATEGORY: 'Ricevitore Infrarosso',
        IR_INIT: 'Inizializza ricevitore IR Pin %1',
        IR_DATA: 'Dati ricevuti dal telecomando IR',
        IR_READ: 'Leggi dati ricevuti dal ricevitore IR',
        IR_REFRESH: 'Refresh dati ricevitore IR',
    
        MATRIX8_16_CATEGORY: 'Display a matrice',
        MATRIX8_16_INIT: 'Inizializza display a matrice AiP1640 SDA %1 SCL %2',
        MATRIX8_16_DISPLAY: 'Display a matrice %1 mostra %2 gruppo %3 modello %4',
        MATRIX8_16_FACE: 'Matrice mostra %1',
        MATRIX8_16_PIEXL: 'Matrice mostra punto X%1 Y%2 livello %3',
        MATRIX8_16_REFRESH: 'Refresh display matrice',
        MATRIX8_16_CLEAR: 'Pulisci display matrice 8*16'
    });
    return Blockly;
}

exports = addMsg;
