/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: 'Passive buzzer',
        BUZZER_TONE: 'Tone PIN#%1 frequency%2',
        BUZZER_TONE_D: 'Tone PIN#%1 frequency%2 duration%3',
        BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
        BUZZER_NOTONE: 'noTone%1',
        MOTOR130_CATEGORY: 'DC Motor',
        MOTOR130_LEFT: 'Beetlebot Left Motor INA#%1 State%2 INB#%3 analogWrite%4',
        MOTOR130_RIGHT: 'Beetlebot Right Motor INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'servo',
        KS_SERVO_ANGLE: 'servo PIN#%1 degree%2 delay%3',
        KS_SERVO_READ: 'servo PIN#%1 read degree',
        HC_SR04_CATEGORY: 'Ultrasonic',
        HC_SR04_READ_DISTANCE: 'HC-SR04 trig pin %1 echo pin %2 read distance %3',
        BBRGBLEDSTRIP_CATEGORY: 'RGB LED Strip',
        BBRGBLEDSTRIP_INIT: 'init RGB LED strip length %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'set pixel %1 color %2',
        BBRGBLEDSTRIP_FILL: 'fill from pixel %1 count %2 with color %3',
        BBRGBLEDSTRIP_COLOR: 'RGB LED strip color R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'set brightness %1',
        BBRGBLEDSTRIP_CLEAR: 'clear all',
        BBRGBLEDSTRIP_SHOW: 'refresh',
        MATRIX_IIC_CATEGORY: 'Matrix HT16K33',
        MATRIX_IIC_INIT: 'Init HT16K33 Matrix',
        MATRIX_IIC_FACE: 'HT16K33 Matrix display face%1',
        MATRIX_IIC_PIEXL: 'HT16K33 Matrix X Axis%1 Y Axis%2 State%3',
        MATRIX_IIC_REFRESH: 'HT16K33 Matrix refresh',
        MATRIX_IIC_CLEAR: 'HT16K33 Matrix clear',
        IR_CATEGORY: 'IR Remote',
        IR_INIT: 'IR remote init PIN#%1',
        IR_DATA: 'Received data',
        IR_READ: 'Read the data',
        IR_REFRESH: 'Refresh data',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: 'wifi connect ssid:%1 password:%2',
        WIFI_READ: 'WiFi read',
        OLED_CATEGORY: 'OLED',
        OLED_INIT: 'init oled width %1 height %2 I2C address %3',
        OLED_DRAWLINE: 'draw line x0: %1 y0: %2, x1: %3 y1: %4 color %5',
        OLED_COLOR_WHITE: 'white',
        OLED_COLOR_BLACK: 'black',
        OLED_COLOR_INVERSE: 'inverse',
        OLED_DRAWRECT: 'draw rect x: %1 y: %2 width %3 height %4 color %5',
        OLED_FILLRECT: 'fill rect x: %1 y: %2 width %3 height %4 color %5',
        OLED_DRAWCIRCLE: 'draw circle x: %1 y: %2 radius %3 color %4',
        OLED_FILLCIRCLE: 'fill circle x: %1 y: %2 radius %3 color %4',
        OLED_DRAWROUNDRECT: 'draw round rect x: %1 y: %2 width %3 height %4 radius %5 color %6',
        OLED_FILLROUNDRECT: 'fill round rect x: %1 y: %2 width %3 height %4 radius %5 color %6',
        OLED_DRAWTRIANGLE: 'draw triangle x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 color %7',
        OLED_FILLTRIANGLE: 'fill triangle x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 color %7',
        OLED_SETTEXT: 'set text size %1 color %2 background color %3',
        OLED_SETCURSOR: 'set cursor x: %1 y: %2',
        OLED_PRINT: 'print %1 %2',
        OLED_EOL_WARP: 'warp',
        OLED_EOL_NOWARP: 'no-warp',
        OLED_CLEAR: 'clear oled',
        OLED_REFRESH: 'refresh oled',
        OLED_STARTSCROLL: 'start scroll %1 y0: %2 y1: %3',
        OLED_SCROLL_RIGHT: 'right',
        OLED_SCROLL_LEFT: 'left',
        OLED_SCROLL_DIAGRIGHT: 'diag right',
        OLED_SCROLL_DIAGLEFT: 'diag left',
        OLED_STOPSCROLL: 'stop scroll'
    });
    Object.assign(Blockly.ScratchMsgs.locales['de'], {
        KS_VARIABLE_LABEL:'Variablentyp',
        KS_variables_declare:'Deklarieren Sie %1 Variablentyp %2 Name %3 Zugewiesen an %4',
        KS_variables_set:'Variable %1 um %2 setzen',
        KS_variables_change:'Variablenmodus %1 %2 ändern',
        KS_variables_value: 'Variable %1',
        KS_variables_setString:'Setze %1 String-Variable um %2',
        KS_global:'Global',
        KS_local:'Lokal',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'lang',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'Zeichenfolge',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'Wort',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'Logik',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: 'Passiver Summer',
        BUZZER_TONE: 'Ton-PIN#%1 Frequenz%2',
        BUZZER_TONE_D: 'Ton-PIN#%1 Häufigkeit%2 Dauer%3',
        BUZZER_MUSIC: 'Ton PIN#%1 Musik abspielen%2',
        BUZZER_NOTONE: 'noTone%1',
        MOTOR130_CATEGORY: 'Gleichstrommotor',
        MOTOR130_LEFT: 'Beetlebot Left Motor INA#%1 State%2 INB#%3 analogWrite%4',
        MOTOR130_RIGHT: 'Beetlebot rechter Motor INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'Servo',
        KS_SERVO_ANGLE: 'Servo PIN#%1 Grad%2 Verzögerung%3',
        KS_SERVO_READ: 'Servo PIN#%1 Lesegrad',
        HC_SR04_CATEGORY: 'Ultraschall',
        HC_SR04_READ_DISTANCE: 'HC-SR04 Trig-Pin %1 Echo-Pin %2 Leseabstand %3',
        BBRGBLEDSTRIP_CATEGORY: 'RGB-LED-Streifen',
        BBRGBLEDSTRIP_INIT: 'RGB-LED-Streifenlänge %1 Pin %2 initialisieren',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'Pixel %1 Farbe %2 festlegen',
        BBRGBLEDSTRIP_FILL: 'Von Pixel %1 Anzahl %2 mit Farbe %3 füllen',
        BBRGBLEDSTRIP_COLOR: 'RGB-LED-Streifenfarbe R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'Helligkeit %1 einstellen',
        BBRGBLEDSTRIP_CLEAR: 'Alles löschen',
        BBRGBLEDSTRIP_SHOW: 'aktualisieren',
        MATRIX_IIC_CATEGORY: 'Matrix HT16K33',
        MATRIX_IIC_INIT: 'Init HT16K33 Matrix',
        MATRIX_IIC_FACE: 'HT16K33 Matrix-Anzeigefläche %1',
        MATRIX_IIC_PIEXL: 'HT16K33 Matrix X-Achse%1 Y-Achse%2 Zustand%3',
        MATRIX_IIC_REFRESH: 'HT16K33 Matrix-Aktualisierung',
        MATRIX_IIC_CLEAR: 'HT16K33 Matrix gelöscht',
        IR_CATEGORY: 'IR-Fernbedienung',
        IR_INIT: 'IR-Ferninitialisierungs-PIN#%1',
        IR_DATA: 'Empfangene Daten',
        IR_READ: 'Daten lesen',
        IR_REFRESH: 'Daten aktualisieren',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: 'wifi connect ssid:%1 passwort:%2',
        WIFI_READ: 'WiFi lesen',
        OLED_CATEGORY: 'OLED',
        OLED_INIT: 'Init OLED-Breite %1 Höhe %2 I2C-Adresse %3',
        OLED_DRAWLINE: 'Zeichne Linie x0: %1 y0: %2, x1: %3 y1: %4 Farbe %5',
        OLED_COLOR_WHITE: 'weiß',
        OLED_COLOR_BLACK: 'schwarz',
        OLED_COLOR_INVERSE: 'invers',
        OLED_DRAWRECT: 'Zeichne Rechteck x: %1 y: %2 Breite %3 Höhe %4 Farbe %5',
        OLED_FILLRECT: 'Rechteck füllen x: %1 y: %2 Breite %3 Höhe %4 Farbe %5',
        OLED_DRAWCIRCLE: 'Kreis zeichnen x: %1 y: %2 Radius %3 Farbe %4',
        OLED_FILLCIRCLE: 'Kreis füllen x: %1 y: %2 Radius %3 Farbe %4',
        OLED_DRAWROUNDRECT: 'rundes Rechteck zeichnen x: %1 y: %2 Breite %3 Höhe %4 Radius %5 Farbe %6',
        OLED_FILLROUNDRECT: 'rundes Rechteck füllen x: %1 y: %2 Breite %3 Höhe %4 Radius %5 Farbe %6',
        OLED_DRAWTRIANGLE: 'Dreieck zeichnen x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 Farbe %7',
        OLED_FILLTRIANGLE: 'Dreieck füllen x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 Farbe %7',
        OLED_SETTEXT: 'Textgröße %1 Farbe %2 Hintergrundfarbe %3 festlegen',
        OLED_SETCURSOR: 'Cursor x setzen: %1 y: %2',
        OLED_PRINT: 'drucken %1 %2',
        OLED_EOL_WARP: 'Warp',
        OLED_EOL_NOWARP: 'kein Warp',
        OLED_CLEAR: 'klares OLED',
        OLED_REFRESH: 'OLED aktualisieren',
        OLED_STARTSCROLL: 'Scrollen starten %1 y0: %2 y1: %3',
        OLED_SCROLL_RIGHT: 'rechts',
        OLED_SCROLL_LEFT: 'links',
        OLED_SCROLL_DIAGRIGHT: 'diag right',
        OLED_SCROLL_DIAGLEFT: 'Diag links',
        OLED_STOPSCROLL: 'Scrollen stoppen'
    });
    Object.assign(Blockly.ScratchMsgs.locales['es'], {
        KS_VARIABLE_LABEL:'Tipo de variable',
        KS_variables_declare:'Declarar %1 variable Tipo %2 Nombre %3 Asignado a %4',
        KS_variables_set:'Establecer %1 variable por %2',
        KS_variables_change:'Cambiar %1 modo variable %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Establecer %1 variable de cadena por %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'largo',
        KS_MATH_FLOAT: 'flotante',
        KS_MATH_BOOLEAN: 'booleano',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'carácter',
        KS_MATH_STRING: 'cadena',
        KS_MATH_UNSIGNED_INT: 'int sin firmar',
        KS_MATH_WORD: 'palabra',
        KS_MATH_UNSIGNED_LONG: 'largo sin firmar',
        KS_MATH_UNSIGNED_CHAR: 'caracter sin firmar',
        KS_MATH_DOUBLE: 'doble',

        KS_TEXT_LABEL:'TEXTO',
        KS_char: 'char%1',
        KS_string: 'cadena%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'lógica',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: 'Zumbador pasivo',
        BUZZER_TONE: 'Tono PIN#%1 frecuencia%2',
        BUZZER_TONE_D: 'Tono PIN#%1 frecuencia%2 duración%3',
        BUZZER_MUSIC: 'Tono PIN#%1 reproducir música%2',
        BUZZER_NOTONE: 'sin tono%1',
        MOTOR130_CATEGORY: 'Motor CC',
        MOTOR130_LEFT: 'Motor izquierdo Beetlebot INA#%1 State%2 INB#%3 analogWrite%4',
        MOTOR130_RIGHT: 'Motor derecho Beetlebot INA#%1 State%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'servo',
        KS_SERVO_ANGLE: 'servo PIN#%1 grado%2 retraso%3',
        KS_SERVO_READ: 'servo PIN#%1 grado de lectura',
        HC_SR04_CATEGORY: 'Ultrasónico',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin de activación %1 pin de eco %2 distancia de lectura %3',
        BBRGBLEDSTRIP_CATEGORY: 'Tira de LED RGB',
        BBRGBLEDSTRIP_INIT: 'iniciar tira de LED RGB longitud %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'establecer píxel %1 color %2',
        BBRGBLEDSTRIP_FILL: 'rellenar desde el píxel %1 contar %2 con el color %3',
        BBRGBLEDSTRIP_COLOR: 'Color de la tira LED RGB R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'establecer brillo %1',
        BBRGBLEDSTRIP_CLEAR: 'borrar todo',
        BBRGBLEDSTRIP_SHOW: 'actualizar',
        MATRIX_IIC_CATEGORY: 'Matriz HT16K33',
        MATRIX_IIC_INIT: 'Iniciar matriz HT16K33',
        MATRIX_IIC_FACE: 'HT16K33 Cara de visualización de matriz%1',
        MATRIX_IIC_PIEXL: 'HT16K33 Matriz Eje X%1 Eje Y%2 Estado%3',
        MATRIX_IIC_REFRESH: 'Actualización de matriz HT16K33',
        MATRIX_IIC_CLEAR: 'HT16K33 Matriz clara',
        IR_CATEGORY: 'Remoto IR',
        IR_INIT: 'PIN de inicio remoto IR#%1',
        IR_DATA: 'Datos recibidos',
        IR_READ: 'Leer los datos',
        IR_REFRESH: 'Actualizar datos',
        WIFI_CATEGORÍA: 'ESP32 WIFI',
        WIFI_INIT: 'wifi connect ssid:%1 contraseña:%2',
        WIFI_READ: 'Lectura WiFi',
        CATEGORÍA_OLED: 'OLED',
        OLED_INIT: 'anchura del indicador inicial %1 altura %2 dirección I2C %3',
        OLED_DRAWLINE: 'dibujar línea x0: %1 y0: %2, x1: %3 y1: %4 color %5',
        OLED_COLOR_WHITE: 'blanco',
        OLED_COLOR_BLACK: 'negro',
        OLED_COLOR_INVERSE: 'inverso',
        OLED_DRAWRECT: 'dibujar rect x: %1 y: %2 ancho %3 alto %4 color %5',
        OLED_FILLRECT: 'llenar rect x: %1 y: %2 ancho %3 alto %4 color %5',
        OLED_DRAWCIRCLE: 'dibujar círculo x: %1 y: %2 radio %3 color %4',
        OLED_FILLCIRCLE: 'rellenar círculo x: %1 y: %2 radio %3 color %4',
        OLED_DRAWROUNDRECT: 'dibujar rectángulo redondo x: %1 y: %2 ancho %3 alto %4 radio %5 color %6',
        OLED_FILLROUNDRECT: 'rellenar redondo rect x: %1 y: %2 ancho %3 alto %4 radio %5 color %6',
        OLED_DRAWTRIANGLE: 'dibujar triángulo x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 color %7',
        OLED_FILLTRIANGLE: 'rellenar triángulo x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 color %7',
        OLED_SETTEXT: 'establecer tamaño de texto %1 color %2 color de fondo %3',
        OLED_SETCURSOR: 'establecer cursor x: %1 y: %2',
        OLED_PRINT: 'imprimir %1 %2',
        OLED_EOL_WARP: 'deformar',
        OLED_EOL_NOWARP: 'sin deformación',
        OLED_CLEAR: 'oled claro',
        OLED_REFRESH: 'actualizar oled',
        OLED_STARTSCROLL: 'comenzar desplazamiento %1 y0: %2 y1: %3',
        OLED_SCROLL_RIGHT: 'derecha',
        OLED_SCROLL_LEFT: 'izquierda',
        OLED_SCROLL_DIAGRIGHT: 'diag. derecha',
        OLED_SCROLL_DIAGLEFT: 'diag. izquierda',
        OLED_STOPSCROLL: 'detener desplazamiento'
    });
    Object.assign(Blockly.ScratchMsgs.locales['fr'], {
        KS_VARIABLE_LABEL:'Type de variable',
         KS_variables_declare:'Déclarer %1 variable Type %2 Nom %3 Attribué à %4',
         KS_variables_set: 'Définir la variable %1 par %2',
         KS_variables_change:'Changer %1 mode variable %2',
         KS_variables_value: 'variable %1',
         KS_variables_setString: 'Définir la variable chaîne %1 par %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'entier',
         KS_MATH_LONG: 'long',
         KS_MATH_FLOAT: 'flottant',
         KS_MATH_BOOLEAN: 'booléen',
         KS_MATH_BYTE: 'octet',
         KS_MATH_CHAR: 'car',
         KS_MATH_STRING: 'chaîne',
         KS_MATH_UNSIGNED_INT: 'entier non signé',
         KS_MATH_WORD: 'mot',
         KS_MATH_UNSIGNED_LONG: 'long non signé',
         KS_MATH_UNSIGNED_CHAR: 'caractère non signé',
         KS_MATH_DOUBLE: 'doubler',

         KS_TEXT_LABEL:'TEXTE',
         KS_char: 'car%1',
         KS_string: 'chaîne%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'logique',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: "Sonnerie passive",
         BUZZER_TONE: 'Tonalité PIN #%1 fréquence%2',
         BUZZER_TONE_D: 'Tonalité PIN #%1 fréquence%2 durée%3',
         BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
         BUZZER_NOTONE: 'pas de tonalité%1',
         MOTOR130_CATEGORY: 'Moteur CC',
         MOTOR130_LEFT: 'Beetlebot Moteur gauche INA#%1 État%2 INB#%3 analogWrite%4',
         MOTOR130_RIGHT: 'Ina du moteur droit du Beetlebot#%1 State%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: 'servo',
         KS_SERVO_ANGLE: 'code PIN servo#%1 degré%2 retard%3',
         KS_SERVO_READ: 'servo PIN #%1 degré de lecture',
         HC_SR04_CATEGORY: 'Ultrasons',
         HC_SR04_READ_DISTANCE: 'broche de déclenchement HC-SR04 %1 broche d"écho %2 distance de lecture %3',
         BBRGBLEDSTRIP_CATEGORY: 'Bande LED RVB',
         BBRGBLEDSTRIP_INIT: 'initialisation de la longueur de la bande LED RVB %1 broche %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'définir le pixel %1 couleur %2',
         BBRGBLEDSTRIP_FILL: 'remplir à partir du pixel %1 compter %2 avec la couleur %3',
         BBRGBLEDSTRIP_COLOR: 'Couleur de la bande LED RVB R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'définir la luminosité %1',
         BBRGBLEDSTRIP_CLEAR: 'tout effacer',
         BBRGBLEDSTRIP_SHOW: 'actualiser',
         MATRIX_IIC_CATEGORY: 'Matrice HT16K33',
         MATRIX_IIC_INIT: 'Init HT16K33 Matrice',
         MATRIX_IIC_FACE: 'HT16K33 Écran matriciel %1',
         MATRIX_IIC_PIEXL: 'HT16K33 Matrice Axe X%1 Axe Y%2 État%3',
         MATRIX_IIC_REFRESH: 'Actualisation de la matrice HT16K33',
         MATRIX_IIC_CLEAR: 'HT16K33 Matrice effacée',
         IR_CATEGORY: 'Télécommande infrarouge',
         IR_INIT: 'PIN d"initialisation à distance IR#%1',
         IR_DATA: 'Données reçues',
         IR_READ: 'Lire les données',
         IR_REFRESH: 'Actualiser les données',
         WIFI_CATEGORY: 'ESP32 WIFI',
         WIFI_INIT: 'ssid de connexion wifi:%1 mot de passe:%2',
         WIFI_READ: 'Lecture Wi-Fi',
         OLED_CATEGORY: 'OLED',
         OLED_INIT: 'init oled largeur %1 hauteur %2 adresse I2C %3',
         OLED_DRAWLINE: 'dessiner une ligne x0: %1 y0: %2, x1: %3 y1: %4 couleur %5',
         OLED_COLOR_WHITE: 'blanc',
         OLED_COLOR_BLACK: 'noir',
         OLED_COLOR_INVERSE: 'inverse',
         OLED_DRAWRECT: 'dessiner rect x: %1 y: %2 largeur %3 hauteur %4 couleur %5',
         OLED_FILLRECT: 'remplir rect x: %1 y: %2 largeur %3 hauteur %4 couleur %5',
         OLED_DRAWCIRCLE: 'dessiner un cercle x: %1 y: %2 rayon %3 couleur %4',
         OLED_FILLCIRCLE: 'remplir le cercle x: %1 y: %2 rayon %3 couleur %4',
         OLED_DRAWROUNDRECT: 'dessiner rond rect x: %1 y: %2 largeur %3 hauteur %4 rayon %5 couleur %6',
         OLED_FILLROUNDRECT: 'remplir rond rect x: %1 y: %2 largeur %3 hauteur %4 rayon %5 couleur %6',
         OLED_DRAWTRIANGLE: 'dessiner un triangle x0:%1 y0: %2, x1:%3 y1:%4, x2:%5 y2:%6 couleur %7',
         OLED_FILLTRIANGLE: 'remplir le triangle x0:%1 y0: %2, x1:%3 y1:%4, x2:%5 y2:%6 couleur %7',
         OLED_SETTEXT: 'définir la taille du texte %1 couleur %2 couleur d"arrière-plan %3',
         OLED_SETCURSOR: 'définir le curseur x: %1 y: %2',
         OLED_PRINT: 'imprimer %1 %2',
         OLED_EOL_WARP: 'déformation',
         OLED_EOL_NOWARP: 'sans déformation',
         OLED_CLEAR: 'effacer l"oled',
         OLED_REFRESH: 'rafraîchir oled',
         OLED_STARTSCROLL: 'démarrer le défilement %1 y0: %2 y1: %3',
         OLED_SCROLL_RIGHT: 'droit',
         OLED_SCROLL_LEFT: 'gauche',
         OLED_SCROLL_DIAGRIGHT: 'diag droit',
         OLED_SCROLL_DIAGLEFT: 'diag gauche',
         OLED_STOPSCROLL: 'arrêter le défilement'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ja'], {
        KS_VARIABLE_LABEL:'変数タイプ',
         KS_variables_declare:'%1 変数を宣言します。タイプ %2 名前 %3 を %4 に割り当てます',
         KS_variables_set:'%1 変数を %2 で設定',
         KS_variables_change:'%1 変数モード %2 を変更',
         KS_variables_value: '変数 %1',
         KS_variables_setString:'%1 文字列変数を %2 で設定',
         KS_global:'グローバル',
         KS_local:'ローカル',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: '長い',
         KS_MATH_FLOAT: '浮動小数点',
         KS_MATH_BOOLEAN: 'ブール値',
         KS_MATH_BYTE: 'バイト',
         KS_MATH_CHAR: '文字',
         KS_MATH_STRING: '文字列',
         KS_MATH_UNSIGNED_INT: '符号なし整数',
         KS_MATH_WORD: '単語',
         KS_MATH_UNSIGNED_LONG: '符号なしロング',
         KS_MATH_UNSIGNED_CHAR: '符号なし文字',
         KS_MATH_DOUBLE: '倍精度',

         KS_TEXT_LABEL:'テキスト',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'ロジック',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: 'パッシブブザー',
         BUZZER_TONE: 'トーン PIN#%1 頻度%2',
         BUZZER_TONE_D: 'トーン PIN#%1 頻度%2 期間%3',
         BUZZER_MUSIC: 'トーン PIN#%1 音楽%2 を再生',
         BUZZER_NOTONE: 'noTone%1',
         MOTOR130_CATEGORY: 'DC モーター',
         MOTOR130_LEFT: 'Beetlebot 左モーター INA#%1 状態%2 INB#%3 アナログ書き込み%4',
         MOTOR130_RIGHT: 'Beetlebot 右モーター INA#%1 状態%2 INB#%3 アナログ書き込み%4',
         KS_SERVO_CATEGORY: 'サーボ',
         KS_SERVO_ANGLE: 'サーボ PIN#%1 度%2 遅延%3',
         KS_SERVO_READ: 'サーボPIN#%1読み取り度',
         HC_SR04_CATEGORY: '超音波',
         HC_SR04_READ_DISTANCE: 'HC-SR04 トリガー ピン %1 エコー ピン %2 読み取り距離 %3',
         BBRGBLEDSTRIP_CATEGORY: 'RGB LED ストリップ',
         BBRGBLEDSTRIP_INIT: 'RGB LED ストリップ長 %1 ピン %2 を初期化',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'ピクセル %1 カラー %2 を設定',
         BBRGBLEDSTRIP_FILL: 'ピクセル %1 カウント %2 から色 %3 で塗りつぶします',
         BBRGBLEDSTRIP_COLOR: 'RGB LED ストリップの色 R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: '明るさを設定 %1',
         BBRGBLEDSTRIP_CLEAR: 'すべてクリア',
         BBRGBLEDSTRIP_SHOW: '更新',
         MATRIX_IIC_CATEGORY: 'マトリックス HT16K33',
         MATRIX_IIC_INIT: 'HT16K33 マトリックスの初期化',
         MATRIX_IIC_FACE: 'HT16K33 マトリックス表示面 %1',
         MATRIX_IIC_PIEXL: 'HT16K33 マトリックス X 軸%1 Y 軸%2 状態%3',
         MATRIX_IIC_REFRESH: 'HT16K33 マトリックス更新',
         MATRIX_IIC_CLEAR: 'HT16K33 マトリックスクリア',
         IR_CATEGORY: 'IR リモコン',
         IR_INIT: 'IR リモート初期化 PIN#%1',
         IR_DATA: '受信データ',
         IR_READ: 'データを読み取る',
         IR_REFRESH: 'データを更新',
         WIFI_CATEGORY: 'ESP32 WIFI',
         WIFI_INIT: 'WiFi 接続 ssid:%1 パスワード:%2',
         WIFI_READ: 'WiFi 読み取り',
         OLED_CATEGORY: 'OLED',
         OLED_INIT: '初期化幅 %1 高さ %2 I2C アドレス %3',
         OLED_DRAWLINE: '線を描画 x0: %1 y0: %2、x1: %3 y1: %4 カラー %5',
         OLED_COLOR_WHITE: '白',
         OLED_COLOR_BLACK: '黒',
         OLED_COLOR_INVERSE: '反転',
         OLED_DRAWRECT: '長方形を描画 x: %1 y: %2 幅 %3 高さ %4 カラー %5',
         OLED_FILLRECT: '塗りつぶし長方形 x: %1 y: %2 幅 %3 高さ %4 カラー %5',
         OLED_DRAWCIRCLE: '円を描く x: %1 y: %2 半径 %3 カラー %4',
         OLED_FILLCIRCLE: '塗りつぶし円 x: %1 y: %2 半径 %3 カラー %4',
         OLED_DRAWROUNDRECT: '丸い四角形を描画 x: %1 y: %2 幅 %3 高さ %4 半径 %5 色 %6',
         OLED_FILLROUNDRECT: '塗りつぶし円形長方形 x: %1 y: %2 幅 %3 高さ %4 半径 %5 色 %6',
         OLED_DRAWTRIANGLE: '三角形を描画 x0: %1 y0: %2、x1: %3 y1: %4、x2: %5 y2: %6 カラー %7',
         OLED_FILLTRIANGLE: '塗りつぶし三角形 x0: %1 y0: %2、x1: %3 y1: %4、x2: %5 y2: %6 カラー %7',
         OLED_SETTEXT: 'テキスト サイズ %1 色 %2 背景色 %3 を設定',
         OLED_SETCURSOR: 'カーソル x: %1 y: %2 を設定します',
         OLED_PRINT: '印刷 %1 %2',
         OLED_EOL_WARP: 'ワープ',
         OLED_EOL_NOWARP: 'ワープなし',
         OLED_CLEAR: 'OLED をクリア',
         OLED_REFRESH: 'OLEDをリフレッシュ',
         OLED_STARTSCROLL: 'スクロール開始 %1 y0: %2 y1: %3',
         OLED_SCROLL_RIGHT: '右',
         OLED_SCROLL_LEFT: '左',
         OLED_SCROLL_DIAGRIGHT: '右診断',
         OLED_SCROLL_DIAGLEFT: '左ダイアグ',
         OLED_STOPSCROLL: 'スクロールを停止'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ko'], {
        KS_VARIABLE_LABEL:'변수 유형',
         KS_variables_declare:'%1 변수 유형 %2 이름 %3 선언 %4에 할당됨',
         KS_variables_set:'%1 변수를 %2로 설정',
         KS_variables_change:'%1 변수 모드 %2 변경',
         KS_variables_value: '변수 %1',
         KS_variables_setString:'%1 문자열 변수를 %2로 설정',
         KS_global:'글로벌',
         KS_local:'로컬',
         KS_MATH_INT: '정수',
         KS_MATH_LONG: '긴',
         KS_MATH_FLOAT: '부동',
         KS_MATH_BOOLEAN: '부울',
         KS_MATH_BYTE: '바이트',
         KS_MATH_CHAR: '문자',
         KS_MATH_STRING: '문자열',
         KS_MATH_UNSIGNED_INT: '부호 없는 정수',
         KS_MATH_WORD: '단어',
         KS_MATH_UNSIGNED_LONG: '부호 없는 롱',
         KS_MATH_UNSIGNED_CHAR: '부호 없는 문자',
         KS_MATH_DOUBLE: '더블',

         KS_TEXT_LABEL:'텍스트',
         KS_char: '문자%1',
         KS_string: '문자열%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'논리',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: '패시브 버저',
         BUZZER_TONE: '톤 PIN#%1 주파수%2',
         BUZZER_TONE_D: 'Tone PIN#%1 주파수%2 지속시간%3',
         BUZZER_MUSIC: 'Tone PIN#%1 음악 재생%2',
         BUZZER_NOTONE: '노톤%1',
         MOTOR130_CATEGORY: 'DC 모터',
         MOTOR130_LEFT: 'Beetlebot 왼쪽 모터 INA#%1 상태%2 INB#%3 analogWrite%4',
         MOTOR130_RIGHT: 'Beetlebot 오른쪽 모터 INA#%1 상태%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: '서보',
         KS_SERVO_ANGLE: '서보 PIN#%1도%2 지연%3',
         KS_SERVO_READ: '서보 PIN#%1 읽기 정도',
         HC_SR04_CATEGORY: '초음파',
         HC_SR04_READ_DISTANCE: 'HC-SR04 트리거 핀 %1 에코 핀 %2 읽기 거리 %3',
         BBRGBLEDSTRIP_CATEGORY: 'RGB LED 스트립',
         BBRGBLEDSTRIP_INIT: '초기화 RGB LED 스트립 길이 %1 핀 %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: '픽셀 %1 색상 %2 설정',
         BBRGBLEDSTRIP_FILL: '색상 %3로 픽셀 %1 카운트 %2에서 채우기',
         BBRGBLEDSTRIP_COLOR: 'RGB LED 스트립 색상 R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: '밝기 %1 설정',
         BBRGBLEDSTRIP_CLEAR: '모두 지우기',
         BBRGBLEDSTRIP_SHOW: '새로 고침',
         MATRIX_IIC_CATEGORY: '매트릭스 HT16K33',
         MATRIX_IIC_INIT: 'HT16K33 매트릭스 초기화',
         MATRIX_IIC_FACE: 'HT16K33 매트릭스 디스플레이 면%1',
         MATRIX_IIC_PIEXL: 'HT16K33 매트릭스 X축%1 Y축%2 상태%3',
         MATRIX_IIC_REFRESH: 'HT16K33 매트릭스 새로 고침',
         MATRIX_IIC_CLEAR: 'HT16K33 매트릭스 클리어',
         IR_CATEGORY: 'IR 리모트',
         IR_INIT: 'IR 원격 초기화 PIN#%1',
         IR_DATA: '데이터 수신',
         IR_READ: '데이터 읽기',
         IR_REFRESH: '데이터 새로 고침',
         WIFI_CATEGORY: 'ESP32 와이파이',
         WIFI_INIT: 'wifi 연결 ssid:%1 비밀번호:%2',
         WIFI_READ: '와이파이 읽기',
         OLED_CATEGORY: 'OLED',
         OLED_INIT: '초기화 너비 %1 높이 %2 I2C 주소 %3',
         OLED_DRAWLINE: '그리기 선 x0: %1 y0: %2, x1: %3 y1: %4 색상 %5',
         OLED_COLOR_WHITE: '흰색',
         OLED_COLOR_BLACK: '검은색',
         OLED_COLOR_INVERSE: '반전',
         OLED_DRAWRECT: '정사각형 그리기 x: %1 y: %2 너비 %3 높이 %4 색상 %5',
         OLED_FILLRECT: '정사각형 채우기 x: %1 y: %2 너비 %3 높이 %4 색상 %5',
         OLED_DRAWCIRCLE: '원 그리기 x: %1 y: %2 반경 %3 색상 %4',
         OLED_FILLCIRCLE: '채우기 원 x: %1 y: %2 반경 %3 색상 %4',
         OLED_DRAWROUNDRECT: '둥근 사각형 그리기 x: %1 y: %2 너비 %3 높이 %4 반경 %5 색상 %6',
         OLED_FILLROUNDRECT: '둥근 사각형 채우기 x: %1 y: %2 너비 %3 높이 %4 반경 %5 색상 %6',
         OLED_DRAWTRIANGLE: '삼각형 그리기 x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 색상 %7',
         OLED_FILLTRIANGLE: '채우기 삼각형 x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 색상 %7',
         OLED_SETTEXT: '텍스트 크기 %1 색상 %2 배경색 %3 설정',
         OLED_SETCURSOR: '커서 설정 x: %1 y: %2',
         OLED_PRINT: '%1 %2 인쇄',
         OLED_EOL_WARP: '워프',
         OLED_EOL_NOWARP: '뒤틀림 없음',
         OLED_CLEAR: '맑은 OLED',
         OLED_REFRESH: '올레드 새로 고침',
         OLED_STARTSCROLL: '스크롤 시작 %1 y0: %2 y1: %3',
         OLED_SCROLL_RIGHT: '오른쪽',
         OLED_SCROLL_LEFT: '왼쪽',
         OLED_SCROLL_DIAGRIGHT: '오른쪽 진단',
         OLED_SCROLL_DIAGLEFT: '왼쪽 진단',
         OLED_STOPSCROLL: '스크롤 중지'
    });
    Object.assign(Blockly.ScratchMsgs.locales['pl'], {
        KS_VARIABLE_LABEL:'Typ zmiennej',
        KS_variables_declare:'Deklaracja %1 zmiennej Typ %2 Nazwa %3 Przypisana do %4',
        KS_variables_set:'Ustaw zmienną %1 na %2',
        KS_variables_change:'Zmień tryb zmiennej %1 %2',
        KS_variables_value: 'zmienna %1',
        KS_variables_setString:'Ustaw zmienną łańcuchową %1 o %2',
        KS_global:'Globalny',
        KS_local:'Lokalny',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'długi',
        KS_MATH_FLOAT: 'pływa',
        KS_MATH_BOOLEAN: 'wartość logiczna',
        KS_MATH_BYTE: 'bajt',
        KS_MATH_CHAR: 'znak',
        KS_MATH_STRING: 'ciąg znaków',
        KS_MATH_UNSIGNED_INT: 'bez znaku int',
        KS_MATH_WORD: 'słowo',
        KS_MATH_UNSIGNED_LONG: 'długi bez znaku',
        KS_MATH_UNSIGNED_CHAR: 'znak bez znaku',
        KS_MATH_DOUBLE: 'podwójne',

        KS_TEXT_LABEL:'TEKST',
        KS_char: 'znak%1',
        KS_string: 'ciąg%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logika',
        KS_judge:'%1%2%3',

        BUZZER_CATEGORY: 'Brzęczyk pasywny',
        BUZZER_TONE: 'Ton PIN#%1 częstotliwość%2',
        BUZZER_TONE_D: 'Ton PIN#%1 częstotliwość%2 czas trwania%3',
        BUZZER_MUSIC: 'Ton PIN#%1 odtwarzanie muzyki%2',
        BUZZER_NOTONE: 'brak tonu%1',
        MOTOR130_CATEGORY: 'Silnik prądu stałego',
        MOTOR130_LEFT: 'Lewy silnik Beetlebota INA#%1 State%2 INB#%3 analogWrite%4',
        MOTOR130_RIGHT: 'Prawy silnik Beetlebota INA#%1 Stan%2 INB#%3 analogWrite%4',
        KS_SERVO_CATEGORY: 'serwo',
        KS_SERVO_ANGLE: 'serwo PIN#%1 stopień%2 opóźnienie%3',
        KS_SERVO_READ: 'serwo PIN#%1 stopień odczytu',
        HC_SR04_CATEGORY: 'Ultradźwięki',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin wyzwalający %1 pin echa %2 odległość odczytu %3',
        BBRGBLEDSTRIP_CATEGORY: 'Pasek LED RGB',
        BBRGBLEDSTRIP_INIT: 'początkowa długość taśmy LED RGB %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'ustaw piksel %1 kolor %2',
        BBRGBLEDSTRIP_FILL: 'wypełnij piksel %1 liczba %2 kolorem %3',
        BBRGBLEDSTRIP_COLOR: 'Kolor taśmy LED RGB R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'ustaw jasność %1',
        BBRGBLEDSTRIP_CLEAR: 'wyczyść wszystko',
        BBRGBLEDSTRIP_SHOW: 'odśwież',
        MATRIX_IIC_CATEGORY: 'Matryca HT16K33',
        MATRIX_IIC_INIT: 'Uruchom macierz HT16K33',
        MATRIX_IIC_FACE: 'HT16K33 Powierzchnia wyświetlania matrycy%1',
        MATRIX_IIC_PIEXL: 'HT16K33 Macierz Oś X%1 Oś Y%2 Stan%3',
        MATRIX_IIC_REFRESH: 'HT16K33 Odświeżenie macierzy',
        MATRIX_IIC_CLEAR: 'HT16K33 Wyczyść matrycę',
        IR_CATEGORY: 'Pilot na podczerwień',
        IR_INIT: 'PIN zdalnej inicjalizacji IR#%1',
        IR_DATA: 'Otrzymane dane',
        IR_READ: 'Odczytaj dane',
        IR_REFRESH: 'Odśwież dane',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: 'identyfikator SSID połączenia Wi-Fi:%1 hasło:%2',
        WIFI_READ: 'Odczyt Wi-Fi',
        OLED_CATEGORY: 'OLED',
        OLED_INIT: 'początkowa szerokość %1 wysokość %2 adres I2C %3',
        OLED_DRAWLINE: 'narysuj linię x0: %1 y0: %2, x1: %3 y1: %4 kolor %5',
        OLED_COLOR_WHITE: 'biały',
        OLED_COLOR_BLACK: 'czarny',
        OLED_COLOR_INVERSE: 'odwrotność',
        OLED_DRAWRECT: 'narysuj prostokąt x: %1 y: %2 szerokość %3 wysokość %4 kolor %5',
        OLED_FILLRECT: 'wypełnij prostokąt x: %1 y: %2 szerokość %3 wysokość %4 kolor %5',
        OLED_DRAWCIRCLE: 'narysuj okrąg x: %1 y: %2 promień %3 kolor %4',
        OLED_FILLCIRCLE: 'wypełnij okrąg x: %1 y: %2 promień %3 kolor %4',
        OLED_DRAWROUNDRECT: 'narysuj okrągły prostokąt x: %1 y: %2 szerokość %3 wysokość %4 promień %5 kolor %6',
        OLED_FILLROUNDRECT: 'wypełnij okrągły prostokąt x: %1 y: %2 szerokość %3 wysokość %4 promień %5 kolor %6',
        OLED_DRAWTRIANGLE: 'narysuj trójkąt x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 kolor %7',
        OLED_FILLTRIANGLE: 'wypełnij trójkąt x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 kolor %7',
        OLED_SETTEXT: 'ustaw rozmiar tekstu %1 kolor %2 kolor tła %3',
        OLED_SETCURSOR: 'ustaw kursor x: %1 y: %2',
        OLED_PRINT: 'drukuj %1 %2',
        OLED_EOL_WARP: 'wypaczenie',
        OLED_EOL_NOWARP: 'bez zniekształceń',
        OLED_CLEAR: 'wyczyść oled',
        OLED_REFRESH: 'odśwież oled',
        OLED_STARTSCROLL: 'rozpocznij przewijanie %1 y0: %2 y1: %3',
        OLED_SCROLL_RIGHT: 'prawo',
        OLED_SCROLL_LEFT: 'w lewo',
        OLED_SCROLL_DIAGRIGHT: 'diag w prawo',
        OLED_SCROLL_DIAGLEFT: 'diag w lewo',
        OLED_STOPSCROLL: 'zatrzymaj przewijanie'
    });
    Object.assign(Blockly.ScratchMsgs.locales['pt'], {
        KS_VARIABLE_LABEL:'Tipo de variável',
         KS_variables_declare:'Declare %1 variável Tipo %2 Nome %3 Atribuído a %4',
         KS_variables_set:'Definir %1 variável por %2',
         KS_variables_change:'Alterar %1 modo de variável %2',
         KS_variables_value: 'variável %1',
         KS_variables_setString:'Definir variável de string %1 por %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: 'longo',
         KS_MATH_FLOAT: 'flutuar',
         KS_MATH_BOOLEAN: 'booleano',
         KS_MATH_BYTE: 'byte',
         KS_MATH_CHAR: 'char',
         KS_MATH_STRING: 'string',
         KS_MATH_UNSIGNED_INT: 'int unsigned',
         KS_MATH_WORD: 'palavra',
         KS_MATH_UNSIGNED_LONG: 'não assinado longo',
         KS_MATH_UNSIGNED_CHAR: 'caractere não assinado',
         KS_MATH_DOUBLE: 'duplo',

         KS_TEXT_LABEL:'TEXT',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'lógica',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: 'Campainha passiva',
         BUZZER_TONE: 'Tom PIN#%1 frequência%2',
         BUZZER_TONE_D: 'Tom PIN#%1 frequência%2 duração%3',
         BUZZER_MUSIC: 'Tone PIN#%1 toca música%2',
         BUZZER_NOTONE: 'noTone%1',
         MOTOR130_CATEGORY: 'Motor DC',
         MOTOR130_LEFT: 'Beetlebot Left Motor INA#%1 State%2 INB#%3 analogWrite%4',
         MOTOR130_RIGHT: 'Beetlebot Right Motor INA#%1 State%2 INB#%3 analogWrite%4',
         KS_SERVO_CATEGORY: 'servo',
         KS_SERVO_ANGLE: 'PIN do servo#%1 grau%2 atraso%3',
         KS_SERVO_READ: 'PIN do servo#%1 grau de leitura',
         HC_SR04_CATEGORY: 'Ultrassônico',
         HC_SR04_READ_DISTANCE: 'HC-SR04 pino de ativação %1 pino de eco %2 distância de leitura %3',
         BBRGBLEDSTRIP_CATEGORY: 'Faixa LED RGB',
         BBRGBLEDSTRIP_INIT: 'inicializar comprimento da faixa de LED RGB %1 pino %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'definir pixel %1 cor %2',
         BBRGBLEDSTRIP_FILL: 'preencher do pixel %1 contagem %2 com a cor %3',
         BBRGBLEDSTRIP_COLOR: 'RGB LED strip color R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'definir brilho %1',
         BBRGBLEDSTRIP_CLEAR: 'limpar tudo',
         BBRGBLEDSTRIP_SHOW: 'atualizar',
         MATRIX_IIC_CATEGORY: 'Matriz HT16K33',
         MATRIX_IIC_INIT: 'Iniciar matriz HT16K33',
         MATRIX_IIC_FACE: 'HT16K33 Face de exibição da matriz%1',
         MATRIX_IIC_PIEXL: 'HT16K33 Matriz X Eixo%1 Eixo Y%2 Estado%3',
         MATRIX_IIC_REFRESH: 'Atualização da matriz HT16K33',
         MATRIX_IIC_CLEAR: 'Matriz HT16K33 limpa',
         IR_CATEGORY: 'IR Remoto',
         IR_INIT: 'PIN de inicialização remota IV#%1',
         IR_DATA: 'Dados recebidos',
         IR_READ: 'Ler os dados',
         IR_REFRESH: 'Atualizar dados',
         WIFI_CATEGORY: 'ESP32 WIFI',
         WIFI_INIT: 'wifi connect ssid:%1 senha:%2',
         WIFI_READ: 'Leitura WiFi',
         OLED_CATEGORY: 'OLED',
         OLED_INIT: 'largura oled inicial %1 altura %2 endereço I2C %3',
         OLED_DRAWLINE: 'desenhar linha x0: %1 y0: %2, x1: %3 y1: %4 cor %5',
         OLED_COLOR_WHITE: 'branco',
         OLED_COLOR_BLACK: 'preto',
         OLED_COLOR_INVERSE: 'inverso',
         OLED_DRAWRECT: 'desenhar reto x: %1 y: %2 largura %3 altura %4 cor %5',
         OLED_FILLRECT: 'preencher retângulo x: %1 y: %2 largura %3 altura %4 cor %5',
         OLED_DRAWCIRCLE: 'desenhar círculo x: %1 y: %2 raio %3 cor %4',
         OLED_FILLCIRCLE: 'círculo de preenchimento x: %1 y: %2 raio %3 cor %4',
         OLED_DRAWROUNDRECT: 'desenhar reto arredondado x: %1 y: %2 largura %3 altura %4 raio %5 cor %6',
         OLED_FILLROUNDRECT: 'preencher o retângulo x: %1 y: %2 largura %3 altura %4 raio %5 cor %6',
         OLED_DRAWTRIANGLE: 'desenhar triângulo x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 cor %7',
         OLED_FILLTRIANGLE: 'triângulo de preenchimento x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 cor %7',
         OLED_SETTEXT: 'definir tamanho do texto %1 cor %2 cor de fundo %3',
         OLED_SETCURSOR: 'definir cursor x: %1 y: %2',
         OLED_PRINT: 'imprimir %1 %2',
         OLED_EOL_WARP: 'deformar',
         OLED_EOL_NOWARP: 'sem distorção',
         OLED_CLEAR: 'claro oled',
         OLED_REFRESH: 'atualizar oled',
         OLED_STARTSCROLL: 'iniciar rolagem %1 ano0: %2 ano1: %3',
         OLED_SCROLL_RIGHT: 'direita',
         OLED_SCROLL_LEFT: 'esquerda',
         OLED_SCROLL_DIAGRIGHT: 'diag right',
         OLED_SCROLL_DIAGLEFT: 'diag esquerda',
         OLED_STOPSCROLL: 'parar de rolar'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ru'], {
        KS_VARIABLE_LABEL: 'Тип переменной',
         KS_variables_declare:'Объявить переменную %1 Тип %2 Имя %3 Назначено %4',
         KS_variables_set:'Установить переменную %1 на %2',
         KS_variables_change:'Изменить режим переменной %1 %2',
         KS_variables_value: 'переменная %1',
         KS_variables_setString:'Установить %1 строковую переменную на %2',
         KS_global: 'Глобальный',
         KS_local: 'Местный',
         KS_MATH_INT: 'целое',
         KS_MATH_LONG: 'длинный',
         KS_MATH_FLOAT: 'плавающая',
         KS_MATH_BOOLEAN: 'логическое значение',
         KS_MATH_BYTE: 'байт',
         KS_MATH_CHAR: 'символ',
         KS_MATH_STRING: 'строка',
         KS_MATH_UNSIGNED_INT: 'целое число без знака',
         KS_MATH_WORD: 'слово',
         KS_MATH_UNSIGNED_LONG: 'длинное без знака',
         KS_MATH_UNSIGNED_CHAR: 'беззнаковый символ',
         KS_MATH_DOUBLE: 'двойной',

         KS_TEXT_LABEL:'ТЕКСТ',
         KS_char: 'символ%1',
         KS_string: 'строка%1',
         KS_data: '%1',

         KS_LOGIC_LABEL: 'логика',
         KS_judge:'%1 %2 %3',

         BUZZER_CATEGORY: 'Пассивный зуммер',
         BUZZER_TONE: 'Тон PIN#%1, частота%2',
         BUZZER_TONE_D: 'Тональный PIN-код #%1, частота%2, продолжительность%3',
         BUZZER_MUSIC: 'Тон PIN#%1 для воспроизведения музыки%2',
         BUZZER_NOTONE: 'noTone%1',
         MOTOR130_CATEGORY: 'Двигатель постоянного тока',
         MOTOR130_LEFT: 'Beetlebot Left Motor INA#%1 State%2 INB#%3 AnalogWrite%4',
         MOTOR130_RIGHT: 'Правый двигатель Beetlebot INA#%1 State%2 INB#%3 AnalogWrite%4',
         KS_SERVO_CATEGORY: 'сервопривод',
         KS_SERVO_ANGLE: 'ПИН-код сервопривода №%1 градус%2 задержка%3',
         KS_SERVO_READ: 'сервопривод PIN#%1 степень чтения',
         HC_SR04_CATEGORY: 'Ультразвук',
         HC_SR04_READ_DISTANCE: 'HC-SR04 триггерный вывод %1 эхо-вывод %2 расстояние чтения %3',
         BBRGBLEDSTRIP_CATEGORY: 'Светодиодная лента RGB',
         BBRGBLEDSTRIP_INIT: 'инициализировать длину светодиодной ленты RGB %1 контакт %2',
         BBRGBLEDSTRIP_SETPIXELCOLOR: 'установить для пикселя %1 цвет %2',
         BBRGBLEDSTRIP_FILL: 'залить от пикселя %1 отсчета %2 цветом %3',
         BBRGBLEDSTRIP_COLOR: 'Цвет светодиодной ленты RGB R %1 G %2 B %3',
         BBRGBLEDSTRIP_SETBRIGHTNESS: 'установить яркость%1',
         BBRGBLEDSTRIP_CLEAR: 'очистить все',
         BBRGBLEDSTRIP_SHOW: 'обновить',
         MATRIX_IIC_CATEGORY: 'Матрица HT16K33',
         MATRIX_IIC_INIT: 'Инициализировать матрицу HT16K33',
         MATRIX_IIC_FACE: 'HT16K33 Matrix display face%1',
         MATRIX_IIC_PIEXL: 'HT16K33 Matrix X Axis%1 Y Axis%2 State%3',
         MATRIX_IIC_REFRESH: 'Обновление матрицы HT16K33',
         MATRIX_IIC_CLEAR: 'HT16K33 Матрица очищена',
         IR_CATEGORY: 'ИК-пульт',
         IR_INIT: 'ПИН-код инициализации ИК-пульта #%1',
         IR_DATA: 'Полученные данные',
         IR_READ: 'Прочитать данные',
         IR_REFRESH: 'Обновить данные',
         WIFI_CATEGORY: "ESP32 WIFI",
         WIFI_INIT: 'ssid для подключения к Wi-Fi:%1, пароль:%2',
         WIFI_READ: 'Чтение WiFi',
         OLED_CATEGORY: "OLED",
         OLED_INIT: 'начальная ширина %1 высота %2 адрес I2C %3',
         OLED_DRAWLINE: 'нарисовать линию x0: %1 y0: %2, x1: %3 y1: %4 цвет %5',
         OLED_COLOR_WHITE: 'белый',
         OLED_COLOR_BLACK: 'черный',
         OLED_COLOR_INVERSE: 'обратный',
         OLED_DRAWRECT: 'нарисовать прямоугольник x: %1 y: %2 ширина %3 высота %4 цвет %5',
         OLED_FILLRECT: 'заполнить прямоугольник x: %1 y: %2 ширина %3 высота %4 цвет %5',
         OLED_DRAWCIRCLE: 'нарисовать круг x: %1 y: %2 радиус %3 цвет %4',
         OLED_FILLCIRCLE: 'заполнить круг x: %1 y: %2 радиус %3 цвет %4',
         OLED_DRAWROUNDRECT: 'нарисовать прямоугольник x: %1 y: %2 ширина %3 высота %4 радиус %5 цвет %6',
         OLED_FILLROUNDRECT: 'заполнить прямоугольник x: %1 y: %2 ширина %3 высота %4 радиус %5 цвет %6',
         OLED_DRAWTRIANGLE: 'нарисовать треугольник x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 цвет %7',
         OLED_FILLTRIANGLE: 'заполнить треугольник x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 цвет %7',
         OLED_SETTEXT: 'установить размер текста %1 цвет %2 цвет фона %3',
         OLED_SETCURSOR: 'установить курсор x: %1 y: %2',
         OLED_PRINT: 'напечатать %1 %2',
         OLED_EOL_WARP: 'деформация',
         OLED_EOL_NOWARP: 'без деформации',
         OLED_CLEAR: 'очистить oled',
         OLED_REFRESH: 'обновить OLED',
         OLED_STARTSCROLL: 'начать прокрутку %1 y0: %2 y1: %3',
         OLED_SCROLL_RIGHT: 'право',
         OLED_SCROLL_LEFT: 'влево',
         OLED_SCROLL_DIAGRIGHT: 'справа',
         OLED_SCROLL_DIAGLEFT: 'левый рисунок',
         OLED_STOPSCROLL: 'остановить прокрутку'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        KS_VARIABLE_LABEL:'變量類型',
        KS_variables_declare:'聲明 %1 數字變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_declare2:'聲明 %1 字符串變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_set:'設置 %1 變量 為 %2',
        KS_variables_change:'設置 %1 變量 模式 %2',
        KS_variables_value: '變量 %1',
        KS_variables_setString:'設置 %1 字符串變量 為 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整數',
        KS_MATH_LONG: '長整數',
        KS_MATH_FLOAT: '小數',
        KS_MATH_BOOLEAN: '布爾',
        KS_MATH_BYTE: '字節',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '無符號整數',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '無符號長整數',
        KS_MATH_UNSIGNED_CHAR: '無符號字符',
        KS_MATH_DOUBLE: '雙精度浮點數',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'邏輯',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: '無源蜂鳴器',
        BUZZER_TONE: '播放聲音 引腳%1 頻率%2',
        BUZZER_TONE_D: '播放聲音 引腳%1 頻率%2 節拍%3',
        BUZZER_MUSIC: '蜂鳴器 引腳%1 播放音樂%2',
        BUZZER_NOTONE: '結束聲音 引腳%1',
        MOTOR130_CATEGORY: '直流電機',
        MOTOR130_LEFT: 'Beetlebot左邊電機 INA#%1 電平為%2 INB#%3 模擬輸出值%4',
        MOTOR130_RIGHT: 'Beetlebot右邊電機 INA#%1 電平為%2 INB#%3 模擬輸出值%4',
        KS_SERVO_CATEGORY: '舵機',
        KS_SERVO_ANGLE: '舵機 引腳%1 角度%2 延時(毫秒)%3',
        KS_SERVO_READ: '舵機 引腳%1 讀取度數',
        HC_SR04_CATEGORY: '超聲波傳感器',
        HC_SR04_READ_DISTANCE: '超聲波傳感器 trig 引腳 %1 echo 引腳 %2 讀取距離 %3',
        BBRGBLEDSTRIP_CATEGORY: 'RGB LED燈條',
        BBRGBLEDSTRIP_INIT: '初始化RGB LED燈條長度 %1 引腳 %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: '設置像素 %1 顏色 %2',
        BBRGBLEDSTRIP_FILL: '從像素 %1 開始 到像素 %2 顏色 %3',
        BBRGBLEDSTRIP_COLOR: 'RGB LED燈條顏色 R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: '設置亮度 %1',
        BBRGBLEDSTRIP_CLEAR: '清除所有',
        BBRGBLEDSTRIP_SHOW: '刷新',
        MATRIX_IIC_CATEGORY: '8*8點陣HT16K33',
        MATRIX_IIC_INIT: '初始化 HT16K33點陣',
        MATRIX_IIC_FACE: 'HT16K33點陣 顯示%1',
        MATRIX_IIC_PIEXL: 'HT16K33 點陣顯示點 X軸%1 Y軸%2 電平為%3',
        MATRIX_IIC_REFRESH: 'HT16K33點陣 刷新顯示',
        MATRIX_IIC_CLEAR: 'HT16K33點陣 清屏',
        IR_CATEGORY: '紅外接收',
        IR_INIT: '初始化紅外接收 引腳%1',
        IR_DATA: '接收到紅外遙控的數據',
        IR_READ: '讀取紅外接收數據',
        IR_REFRESH: '刷新紅外接收數據',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: '連接WiFi 名稱%1 密碼%2',
        WIFI_READ: 'WiFi 讀取數據',
        OLED_CATEGORY: 'OLED',
        OLED_INIT: '初始化 oled 寬度 %1 高度 %2 I2C 地址 %3',
        OLED_DRAWLINE: '繪製直線 x0: %1 y0: %2, x1: %3 y1: %4 顏色 %5',
        OLED_COLOR_WHITE: '白色',
        OLED_COLOR_BLACK: '黑色',
        OLED_COLOR_INVERSE: '反轉',
        OLED_DRAWRECT: '繪製矩形 x: %1 y: %2 寬度 %3 高度 %4 顏色 %5',
        OLED_FILLRECT: '填充矩形 x: %1 y: %2 寬度 %3 高度 %4 顏色 %5',
        OLED_DRAWCIRCLE: '繪製圓形 x: %1 y: %2 半徑 %3 顏色 %4',
        OLED_FILLCIRCLE: '填充圓形 x: %1 y: %2 半徑 %3 顏色 %4',
        OLED_DRAWROUNDRECT: '繪製圓角矩形 x: %1 y: %2 寬度 %3 高度 %4 半徑 %5 顏色 %6',
        OLED_FILLROUNDRECT: '填充圓角矩形 x: %1 y: %2 寬度 %3 高度 %4 半徑 %5 顏色 %6',
        OLED_DRAWTRIANGLE: '繪製三角形 x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 顏色 %7',
        OLED_FILLTRIANGLE: '填充三角形 x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 顏色 %7',
        OLED_SETTEXT: '設置字體大小 %1 顏色 %2 背景色 color %3',
        OLED_SETCURSOR: '設置光標 x: %1 y: %2',
        OLED_PRINT: '打印 %1 %2',
        OLED_EOL_WARP: '換行',
        OLED_EOL_NOWARP: '不換行',
        OLED_CLEAR: '清空 oled',
        OLED_REFRESH: '刷新 oled',
        OLED_STARTSCROLL: '開始滾動 %1 y0: %2 y1: %3',
        OLED_SCROLL_RIGHT: '向右',
        OLED_SCROLL_LEFT: '向左',
        OLED_SCROLL_DIAGRIGHT: '右對角',
        OLED_SCROLL_DIAGLEFT: '左對角',
        OLED_STOPSCROLL: '停止滾動'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',

        BUZZER_CATEGORY: '无源蜂鸣器',
        BUZZER_TONE: '播放声音 引脚%1 频率%2',
        BUZZER_TONE_D: '播放声音 引脚%1 频率%2 节拍%3',
        BUZZER_MUSIC: '蜂鸣器 引脚%1 播放音乐%2',
        BUZZER_NOTONE: '结束声音 引脚%1',
        MOTOR130_CATEGORY: '直流电机',
        MOTOR130_LEFT: 'Beetlebot左边电机 INA#%1 电平为%2 INB#%3 模拟输出值%4',
        MOTOR130_RIGHT: 'Beetlebot右边电机 INA#%1 电平为%2 INB#%3 模拟输出值%4',
        KS_SERVO_CATEGORY: '舵机',
        KS_SERVO_ANGLE: '舵机 引脚%1 角度%2 延时(毫秒)%3',
        KS_SERVO_READ: '舵机 引脚%1 读取度数',
        HC_SR04_CATEGORY: '超声波传感器',
        HC_SR04_READ_DISTANCE: '超声波传感器 trig 引脚 %1 echo 引脚 %2 读取距离 %3',
        BBRGBLEDSTRIP_CATEGORY: 'RGB LED灯条',
        BBRGBLEDSTRIP_INIT: '初始化RGB LED灯条长度 %1 引脚 %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: '设置像素 %1 颜色 %2',
        BBRGBLEDSTRIP_FILL: '从像素 %1 开始 到像素 %2 颜色 %3',
        BBRGBLEDSTRIP_COLOR: 'RGB LED灯条颜色 R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: '设置亮度 %1',
        BBRGBLEDSTRIP_CLEAR: '清除所有',
        BBRGBLEDSTRIP_SHOW: '刷新',
        MATRIX_IIC_CATEGORY: '8*8点阵HT16K33',
        MATRIX_IIC_INIT: '初始化 HT16K33点阵',
        MATRIX_IIC_FACE: 'HT16K33点阵 显示%1',
        MATRIX_IIC_PIEXL: 'HT16K33 点阵显示点 X轴%1 Y轴%2 电平为%3',
        MATRIX_IIC_REFRESH: 'HT16K33点阵 刷新显示',
        MATRIX_IIC_CLEAR: 'HT16K33点阵 清屏',
        IR_CATEGORY: '红外接收',
        IR_INIT: '初始化红外接收 引脚%1',
        IR_DATA: '接收到红外遥控的数据',
        IR_READ: '读取红外接收数据',
        IR_REFRESH: '刷新红外接收数据',
        WIFI_CATEGORY: 'ESP32 WIFI',
        WIFI_INIT: '连接WiFi 名称%1 密码%2',
        WIFI_READ: 'WiFi 读取数据',
        OLED_CATEGORY: 'OLED',
        OLED_INIT: '初始化 oled 宽度 %1 高度 %2 I2C 地址 %3',
        OLED_DRAWLINE: '绘制直线 x0: %1 y0: %2, x1: %3 y1: %4 颜色 %5',
        OLED_COLOR_WHITE: '白色',
        OLED_COLOR_BLACK: '黑色',
        OLED_COLOR_INVERSE: '反转',
        OLED_DRAWRECT: '绘制矩形 x: %1 y: %2 宽度 %3 高度 %4 颜色 %5',
        OLED_FILLRECT: '填充矩形 x: %1 y: %2 宽度 %3 高度 %4 颜色 %5',
        OLED_DRAWCIRCLE: '绘制圆形 x: %1 y: %2 半径 %3 颜色 %4',
        OLED_FILLCIRCLE: '填充圆形 x: %1 y: %2 半径 %3 颜色 %4',
        OLED_DRAWROUNDRECT: '绘制圆角矩形 x: %1 y: %2 宽度 %3 高度 %4 半径 %5 颜色 %6',
        OLED_FILLROUNDRECT: '填充圆角矩形 x: %1 y: %2 宽度 %3 高度 %4 半径 %5 颜色 %6',
        OLED_DRAWTRIANGLE: '绘制三角形 x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 颜色 %7',
        OLED_FILLTRIANGLE: '填充三角形 x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 颜色 %7',
        OLED_SETTEXT: '设置字体大小 %1 颜色 %2 背景色 color %3',
        OLED_SETCURSOR: '设置光标 x: %1 y: %2',
        OLED_PRINT: '打印 %1 %2',
        OLED_EOL_WARP: '换行',
        OLED_EOL_NOWARP: '不换行',
        OLED_CLEAR: '清空 oled',
        OLED_REFRESH: '刷新 oled',
        OLED_STARTSCROLL: '开始滚动 %1 y0: %2 y1: %3',
        OLED_SCROLL_RIGHT: '向右',
        OLED_SCROLL_LEFT: '向左',
        OLED_SCROLL_DIAGRIGHT: '右对角',
        OLED_SCROLL_DIAGLEFT: '左对角',
        OLED_STOPSCROLL: '停止滚动'
    });
    Object.assign(Blockly.ScratchMsgs.locales['it'], {
        KS_VARIABLE_LABEL: 'Tipo di variabile',
        KS_variables_declare: 'Dichiarare variabile %1 tipo numero %2 nome %3 valore iniziale %4',
        KS_variables_declare2: 'Dichiarare variabile %1 tipo stringa %2 nome %3 valore iniziale %4',
        KS_variables_set: 'Imposta variabile %1 su %2',
        KS_variables_change: 'Modifica variabile %1 modalità %2',
        KS_variables_value: 'Variabile %1',
        KS_variables_setString: 'Imposta variabile stringa %1 su %2',
        KS_global: 'Globale',
        KS_local: 'Locale',
        KS_MATH_INT: 'Intero',
        KS_MATH_LONG: 'Intero lungo',
        KS_MATH_FLOAT: 'Numero decimale',
        KS_MATH_BOOLEAN: 'Booleano',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'Carattere',
        KS_MATH_STRING: 'Stringa',
        KS_MATH_UNSIGNED_INT: 'Intero senza segno',
        KS_MATH_WORD: 'Parola',
        KS_MATH_UNSIGNED_LONG: 'Intero lungo senza segno',
        KS_MATH_UNSIGNED_CHAR: 'Carattere senza segno',
        KS_MATH_DOUBLE: 'Doppia precisione',
        KS_TEXT_LABEL: 'TESTO',  
        KS_char: 'carattere%1',  
        KS_string: 'stringa%1',  
        KS_data: '%1', 
        KS_LOGIC_LABEL: 'Logica',
        KS_judge: '%1 %2 %3',
        BUZZER_CATEGORY: 'Cicalino',
        BUZZER_TONE: 'Riproduci suono su pin %1 frequenza %2',
        BUZZER_TONE_D: 'Riproduci suono su pin %1 frequenza %2 battito %3',
        BUZZER_MUSIC: 'Cicalino su pin %1 riproduce musica %2',
        BUZZER_NOTONE: 'Ferma suono su pin %1',
        MOTOR130_CATEGORY: 'Motore DC',
        MOTOR130_LEFT: 'Motore sinistro Beetlebot INA#%1 livello %2 INB#%3 valore di uscita analogica %4',
        MOTOR130_RIGHT: 'Motore destro Beetlebot INA#%1 livello %2 INB#%3 valore di uscita analogica %4',
        KS_SERVO_CATEGORY: 'servomotore',
        KS_SERVO_ANGLE: 'servomotore su pin %1 angolo %2 ritardo (ms) %3',
        KS_SERVO_READ: 'Leggi angolo servomotore su pin %1',
        HC_SR04_CATEGORY: 'Sensore Ultrasuoni',
        HC_SR04_READ_DISTANCE: 'Sensore ultrasuoni trig pin %1 echo pin %2 leggi distanza %3',
        BBRGBLEDSTRIP_CATEGORY: 'Striscia LED RGB',
        BBRGBLEDSTRIP_INIT: 'Inizializza striscia LED RGB lunghezza %1 pin %2',
        BBRGBLEDSTRIP_SETPIXELCOLOR: 'Imposta colore pixel %1 su %2',
        BBRGBLEDSTRIP_FILL: 'Dalla posizione pixel %1 a pixel %2 colore %3',
        BBRGBLEDSTRIP_COLOR: 'Colore striscia LED RGB R %1 G %2 B %3',
        BBRGBLEDSTRIP_SETBRIGHTNESS: 'Imposta luminosità %1',
        BBRGBLEDSTRIP_CLEAR: 'Pulisci tutto',
        BBRGBLEDSTRIP_SHOW: 'Aggiorna',
        MATRIX_IIC_CATEGORY: 'Matrice 8x8 HT16K33',
        MATRIX_IIC_INIT: 'Inizializza matrice HT16K33',
        MATRIX_IIC_FACE: 'Matrice HT16K33 mostra %1',
        MATRIX_IIC_PIEXL: 'Matrice HT16K33 mostra punto X: %1 Y: %2 livello %3',
        MATRIX_IIC_REFRESH: 'Matrice HT16K33 aggiorna display',
        MATRIX_IIC_CLEAR: 'Matrice HT16K33 pulisci',
        IR_CATEGORY: 'Ricevitore IR',
        IR_INIT: 'Inizializza ricevitore IR su pin %1',
        IR_DATA: 'Dati ricevuti dal telecomando IR',
        IR_READ: 'Leggi dati dal ricevitore IR',
        IR_REFRESH: 'Aggiorna dati ricevitore IR',
        WIFI_CATEGORY: 'ESP32 WiFi',
        WIFI_INIT: 'Connetti a WiFi nome %1 password %2',
        WIFI_READ: 'Leggi dati WiFi',
        OLED_CATEGORY: 'OLED',
        OLED_INIT: 'Inizializza OLED larghezza %1 altezza %2 indirizzo I2C %3',
        OLED_DRAWLINE: 'Disegna linea da x0: %1 y0: %2, a x1: %3 y1: %4 colore %5',
        OLED_COLOR_WHITE: 'Bianco',
        OLED_COLOR_BLACK: 'Nero',
        OLED_COLOR_INVERSE: 'Inversa',
        OLED_DRAWRECT: 'Disegna rettangolo x: %1 y: %2 larghezza %3 altezza %4 colore %5',
        OLED_FILLRECT: 'Riempi rettangolo x: %1 y: %2 larghezza %3 altezza %4 colore %5',
        OLED_DRAWCIRCLE: 'Disegna cerchio x: %1 y: %2 raggio %3 colore %4',
        OLED_FILLCIRCLE: 'Riempi cerchio x: %1 y: %2 raggio %3 colore %4',
        OLED_DRAWROUNDRECT: 'Disegna rettangolo arrotondato x: %1 y: %2 larghezza %3 altezza %4 raggio %5 colore %6',
        OLED_FILLROUNDRECT: 'Riempi rettangolo arrotondato x: %1 y: %2 larghezza %3 altezza %4 raggio %5 colore %6',
        OLED_DRAWTRIANGLE: 'Disegna triangolo x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 colore %7',
        OLED_FILLTRIANGLE: 'Riempi triangolo x0: %1 y0: %2, x1: %3 y1: %4, x2: %5 y2: %6 colore %7',
        OLED_SETTEXT: 'Imposta dimensione carattere %1 colore %2 sfondo colore %3',
        OLED_SETCURSOR: 'Imposta cursore x: %1 y: %2',
        OLED_PRINT: 'Stampa %1 %2',
        OLED_EOL_WARP: 'Nuova riga',
        OLED_EOL_NOWARP: 'Non andare a capo',
        OLED_CLEAR: 'Pulisci OLED',
        OLED_REFRESH: 'Aggiorna OLED',
        OLED_STARTSCROLL: 'Inizia scorrimento %1 y0: %2 y1: %3',
        OLED_SCROLL_RIGHT: 'Verso destra',
        OLED_SCROLL_LEFT: 'Verso sinistra',
        OLED_SCROLL_DIAGRIGHT: 'Diagonale destra',
        OLED_SCROLL_DIAGLEFT: 'Diagonale sinistra',
        OLED_STOPSCROLL: 'Ferma scorrimento'
    });
    return Blockly;
}

exports = addMsg;
