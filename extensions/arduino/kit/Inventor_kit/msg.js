/* eslint-disable func-style */
/* eslint-disable max-len */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        KS_VARIABLE_LABEL:'Variable Type',
        KS_variables_declare:'Declare %1 variable Type %2 Name %3 Assigned to %4',
        KS_variables_set:'Set %1 variable by %2',
        KS_variables_change:'Change %1 variable mode %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Set %1 String variable by %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'long',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'string',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'word',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logic',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED pin%1 out%2',
        LED_ANALOG: 'LED  %1 analogWrite%2 ',
        ATBUZZER_CATEGORY: 'Buzzer',
        ATBUZZER_STATE: 'buzzer pin%1 out%2',
        BUZZER_CATEGORY: 'Speaker',
        BUZZER_TONE: 'Tone PIN#%1 frequency%2',
        BUZZER_TONE_D: 'Tone PIN#%1 frequency%2 duration%3',
        BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
        BUZZER_NOTONE: 'NoTone%1',
        BUTTON_CATEGORY: 'Button',
        BUTTON_READ_STATE: 'Interface %1 button was be pushed？',
        BUTTON_READ_VALUE: 'The state value of button in interface %1',
        PIR_CATEGORY: 'PIR',
        PIR_READ_VALUE: 'Read interface %1 PIR motion sensor',
        LIGHTSENSOR_CATEGORY: 'Light',
        LIGHTSENSOR_READ_VALUE: 'read the value of light %1',
        POTSENSOR_CATEGORY: 'Pot',
        POTSENSOR_READ_VALUE: 'read the value of pot %1',
        SOUNDSENSOR_CATEGORY: 'Sound',
        SOUNDSENSOR_READ_VALUE: 'read the value of sound %1',
        HC_SR04_CATEGORY: 'Ultrasonic',
        HC_SR04_READ_DISTANCE: 'HC-SR04 trig pin %1 echo pin %2 read distance %3',
        DHT_CATEGORY: 'DHT11',
        DHT_INIT: 'init dht11 %1 pin %2 mode %3',
        DHT_READ_TEMPERATURE: 'dht11 %1 read temperature %2',
        DHT_READ_HUMIDITY: 'dht11 %1 read humidity',
        KS_SERVO_CATEGORY: 'Servo',
        KS_SERVO_ANGLE: 'Servo PIN#%1 degree%2 delay%3',
        KS_SERVO_READ: 'Servo PIN#%1 read degree',
        WS2812B_CATEGORY: 'RGB LED',
        WS2812B_INIT: 'pin %1 %2 RGB LEDs',
        WS2812B_SETBRIGHTNESS: 'pin %1 LED brightness %2',
        WS2812B_CLEAR: 'pin %1 clear all LEDs',
        WS2812B_SETRANGECOLOR: 'pin %1 RGB %2 to %3 show color %4',
        WS2812B_RGBTOCOLOR: 'red %1 green %2 blue %3',
        WS2812B_SHOWRAINBOW: 'pin %1 %2 to %3 RGB LEDs show  a gradient color from %4 to %5',
        WS2812B_SHIFT: 'pin %1 shift pixels by %2',
        WS2812B_ROTATE: 'pin %1 rotate pixels by %2',
        WS2812B_SHOWBARGRAPH: 'pin %1 %2 to %3 RGB LEDs show histogram current value: %4 max value: %5',
        FOURTUBE_CATEGORY: '4 Digital Tube',
        FOURTUBE_STRING: 'TM1650 display string %1',
        FOURTUBE_DOT: 'TM1650 %1dot%2',
        FOURTUBE_STATE: 'TM1650%1',
        LCD_CATEGORY: 'LCD',
        LCD_INIT: 'init lcd I2C address %1',
        LCD_SETCURSORPOSITION: 'set lcd cursor position x: %1 y: %2',
        LCD_PRINT: 'lcd print %1',
        LCD_CLEAR: 'clear lcd',
        LCD_SETBACKLIGHT: 'set lcd back light %1',
        LCD_SATE_ON: 'on',
        LCD_SATE_OFF: 'off',
        LCD_SETCURSORSTYLE: 'set lcd cursor %1 style %2',
        LCD_SATE_DISPLAY: 'display',
        LCD_SATE_HIDE: 'hide',
        LCD_STYLE_BLINK: 'blink',
        LCD_STYLE_NOBLINK: 'no-blink',
        MATIRXDISPLAY_CATEGORY: 'Matrix',
        MATIRXDISPLAY_INIT: 'init matrix display DIN11 CLK13 pin CS %1',
        MATIRXDISPLAY_INIT_TOOLTIP: 'pin DIN to MOSI and CLK to SCK.',
        MATIRXDISPLAY_DRAWPIXEL: 'Matrix display draw pixel x: %1 y: %2 color %3',
        MATIRXDISPLAY_COLOR_RED: 'red',
        MATIRXDISPLAY_COLOR_BLACK: 'black',
        MATRIX_DISPLAY_GRAPH:' Matrix %1 display %2 No%3image name%4 ',
        MATIRXDISPLAY_DRAWLINE: 'Matrix display draw line x0: %1 y0: %2, x1: %3 y1: %4 color %5',
        MATIRXDISPLAY_SHOWCHAR: 'Matrix display show char %1 color %2',
        MATIRXDISPLAY_SHOWNUMBER: 'Matrix display show number %1 color %2',
        MATIRXDISPLAY_SCROLLSHOW: 'Matrix display loop show %1 speed %2 ',
        MATIRXDISPLAY_FACE: 'Matrix display image %1',
        MATIRXDISPLAY_FILL: 'Matrix display fill color %1',
        MATIRXDISPLAY_REFRESH: 'refresh the display of Matrix display',
        MATIRXDISPLAY_CLEAN: 'Matrix clear',
        MATIRXDISPLAY_SETBRIGHTNESS: 'Matrix display set brightness %1',
        MATIRXDISPLAY_SETROTATION: 'Matrix display set rotation %1',
        IR_CATEGORY: 'IR Remote',
        IR_INIT: 'IR remote init PIN#%1',
        IR_DATA: 'Received data',
        IR_READ: 'Read the data',
        IR_REFRESH: 'Refresh data',
   
    });
    Object.assign(Blockly.ScratchMsgs.locales['de'], {
        KS_VARIABLE_LABEL:'Variablentyp',
        KS_variables_declare:'Deklarieren Sie %1 Variablentyp %2 Name %3 Zugewiesen an %4',
        KS_variables_set:'Variable %1 um %2 setzen',
        KS_variables_change:'Variablenmodus %1 %2 ändern',
        KS_variables_value: 'Variable %1',
        KS_variables_setString:'Setze %1 String-Variable um %2',
        KS_global:'Global',
        KS_local:'Lokal',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'lang',
        KS_MATH_FLOAT: 'float',
        KS_MATH_BOOLEAN: 'boolean',
        KS_MATH_BYTE: 'Byte',
        KS_MATH_CHAR: 'char',
        KS_MATH_STRING: 'Zeichenfolge',
        KS_MATH_UNSIGNED_INT: 'unsigned int',
        KS_MATH_WORD: 'Wort',
        KS_MATH_UNSIGNED_LONG: 'unsigned long',
        KS_MATH_UNSIGNED_CHAR: 'unsigned char',
        KS_MATH_DOUBLE: 'double',

        KS_TEXT_LABEL:'TEXT',
        KS_char: 'char%1',
        KS_string: 'string%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'Logik',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED-Pin%1 aus%2',
        LED_ANALOG: 'LED %1 analogWrite%2 ',
        ATBUZZER_CATEGORY: 'Summer',
        ATBUZZER_STATE: 'Summer-Pin%1 aus%2',
        BUZZER_CATEGORY: 'Lautsprecher',
        BUZZER_TONE: 'Ton-PIN#%1 Frequenz%2',
        BUZZER_TONE_D: 'Ton-PIN#%1 Häufigkeit%2 Dauer%3',
        BUZZER_MUSIC: 'Ton PIN#%1 Musik abspielen%2',
        BUZZER_NOTONE: 'NoTone%1',
        BUTTON_CATEGORY: 'Schaltfläche',
        BUTTON_READ_STATE: 'Schaltfläche %1 der Schnittstelle wurde gedrückt?',
        BUTTON_READ_VALUE: 'Der Statuswert der Schaltfläche in Schnittstelle %1',
        PIR_CATEGORY: 'PIR',
        PIR_READ_VALUE: 'Schnittstelle %1 PIR-Bewegungssensor lesen',
        LIGHTSENSOR_CATEGORY: 'Licht',
        LIGHTSENSOR_READ_VALUE: 'den Lichtwert %1 lesen',
        POTSENSOR_CATEGORY: 'Topf',
        POTSENSOR_READ_VALUE: 'den Wert von Pot %1 lesen',
        SOUNDSENSOR_CATEGORY: 'Ton',
        SOUNDSENSOR_READ_VALUE: 'den Wert von Sound %1 lesen',
        HC_SR04_CATEGORY: 'Ultraschall',
        HC_SR04_READ_DISTANCE: 'HC-SR04 Trig-Pin %1 Echo-Pin %2 Leseabstand %3',
        DHT_CATEGORY: 'DHT11',
        DHT_INIT: 'init dht11 %1 Pin %2 Modus %3',
        DHT_READ_TEMPERATURE: 'dht11 %1 liest Temperatur %2',
        DHT_READ_HUMIDITY: 'dht11 %1 Luftfeuchtigkeit gelesen',
        KS_SERVO_CATEGORY: 'Servo',
        KS_SERVO_ANGLE: 'Servo PIN#%1 Grad%2 Verzögerung%3',
        KS_SERVO_READ: 'Servo PIN#%1 Lesegrad',
        WS2812B_CATEGORY: 'RGB-LED',
        WS2812B_INIT: 'Pin %1 %2 RGB-LEDs',
        WS2812B_SETBRIGHTNESS: 'Pin %1 LED-Helligkeit %2',
        WS2812B_CLEAR: 'Pin %1 löscht alle LEDs',
        WS2812B_SETRANGECOLOR: 'Pin %1 RGB %2 bis %3 zeigt Farbe %4 an',
        WS2812B_RGBTOCOLOR: 'rot %1 grün %2 blau %3',
        WS2812B_SHOWRAINBOW: 'Pin %1 %2 bis %3 RGB-LEDs zeigen einen Farbverlauf von %4 bis %5',
        WS2812B_SHIFT: 'Pin %1 verschiebt Pixel um %2',
        WS2812B_ROTATE: 'Pin %1 dreht Pixel um %2',
        WS2812B_SHOWBARGRAPH: 'Pin %1 %2 bis %3 RGB-LEDs zeigen den aktuellen Histogrammwert an: %4 Maximalwert: %5',
        FOURTUBE_CATEGORY: '4 Digital Tube',
        FOURTUBE_STRING: 'TM1650-Anzeigezeichenfolge %1',
        FOURTUBE_DOT: 'TM1650 %1dot%2',
        FOURTUBE_STATE: 'TM1650%1',
        LCD_CATEGORY: 'LCD',
        LCD_INIT: 'LCD-I2C-Adresse %1 initialisieren',
        LCD_SETCURSORPOSITION: 'LCD-Cursorposition x: %1 y: %2 festlegen',
        LCD_PRINT: 'LCD-Druck %1',
        LCD_CLEAR: 'LCD löschen',
        LCD_SETBACKLIGHT: 'LCD-Hintergrundbeleuchtung %1 einstellen',
        LCD_SATE_ON: 'ein',
        LCD_SATE_OFF: 'aus',
        LCD_SETCURSORSTYLE: 'Setze den LCD-Cursor %1 im Stil %2',
        LCD_SATE_DISPLAY: 'Anzeige',
        LCD_SATE_HIDE: 'verstecken',
        LCD_STYLE_BLINK: 'blinkt',
        LCD_STYLE_NOBLINK: 'kein Blinken',
        MATIRXDISPLAY_CATEGORY: 'Matrix',
        MATIRXDISPLAY_INIT: 'Matrix anzeige DIN11 CLK13 Pin CS %1 initieren',
        MATIRXDISPLAY_INIT_TOOLTIP: 'Pin an MOSI und CLK an SCK.',
        MATIRXDISPLAY_DRAWPIXEL: 'Matrix display draw pixel x: %1 y: %2 color %3',
        MATIRXDISPLAY_COLOR_RED: 'rot',
        MATIRXDISPLAY_COLOR_BLACK: 'schwarz',
        MATRIX_DISPLAY_GRAPH:'Matrix %1 anzeige %2 Nr.%3 Bild name%4 ',
        MATIRXDISPLAY_DRAWLINE: 'Matrix display line x0: %1 y0: %2, x1: %3 y1: %4 color %5',
        MATIRXDISPLAY_SHOWCHAR: 'Matrix display show char %1 color %2',
        MATIRXDISPLAY_SHOWNUMBER: 'Matrix display show number %1 color %2',
        MATIRXDISPLAY_SCROLLSHOW: 'Matrix anzeige schleife zeigt %1 Geschwindigkeit %2 ',
        MATIRXDISPLAY_FACE: 'Matrix zeigt Bild %1 an',
        MATIRXDISPLAY_FILL: 'Matrix anzeige füllfarbe %1',
        MATIRXDISPLAY_REFRESH: 'Anzeige der Matrix anzeige aktualisieren',
        MATIRXDISPLAY_CLEAN: 'Matrix löschen',
        MATIRXDISPLAY_SETBRIGHTNESS: 'Matrix anzeige stellt Helligkeit %1 ein',
        MATIRXDISPLAY_SETROTATION: 'Matrix anzeige satzrotation %1',
        IR_CATEGORY: 'IR-Fernbedienung',
        IR_INIT: 'IR-Ferninitialisierungs-PIN#%1',
        IR_DATA: 'Empfangene Daten',
        IR_READ: 'Daten lesen',
        IR_REFRESH: 'Daten aktualisieren',
    });
    Object.assign(Blockly.ScratchMsgs.locales['es'], {
        KS_VARIABLE_LABEL:'Tipo de variable',
        KS_variables_declare:'Declarar %1 variable Tipo %2 Nombre %3 Asignado a %4',
        KS_variables_set:'Establecer %1 variable por %2',
        KS_variables_change:'Cambiar %1 modo variable %2',
        KS_variables_value: 'variable %1',
        KS_variables_setString:'Establecer %1 variable de cadena por %2',
        KS_global:'Global',
        KS_local:'Local',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'largo',
        KS_MATH_FLOAT: 'flotante',
        KS_MATH_BOOLEAN: 'booleano',
        KS_MATH_BYTE: 'byte',
        KS_MATH_CHAR: 'carácter',
        KS_MATH_STRING: 'cadena',
        KS_MATH_UNSIGNED_INT: 'int sin firmar',
        KS_MATH_WORD: 'palabra',
        KS_MATH_UNSIGNED_LONG: 'largo sin firmar',
        KS_MATH_UNSIGNED_CHAR: 'caracter sin firmar',
        KS_MATH_DOUBLE: 'doble',

        KS_TEXT_LABEL:'TEXTO',
        KS_char: 'char%1',
        KS_string: 'cadena%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'lógica',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'Pin de LED%1 fuera%2',
        LED_ANALOG: 'LED %1 escritura analógica%2 ',
        ATBUZZER_CATEGORY: 'Zumbador',
        ATBUZZER_STATE: 'pin de zumbador%1 fuera%2',
        BUZZER_CATEGORY: 'Altavoz',
        BUZZER_TONE: 'Tono PIN#%1 frecuencia%2',
        BUZZER_TONE_D: 'Tono PIN#%1 frecuencia%2 duración%3',
        BUZZER_MUSIC: 'Tono PIN#%1 reproducir música%2',
        BUZZER_NOTONE: 'Sin Tono%1',
        BUTTON_CATEGORY: 'Botón',
        BUTTON_READ_STATE: '¿Se presionó el botón de la interfaz %1?',
        BUTTON_READ_VALUE: 'El valor de estado del botón en la interfaz %1',
        PIR_CATEGORÍA: 'PIR',
        PIR_READ_VALUE: 'Interfaz de lectura %1 sensor de movimiento PIR',
        LIGHTSENSOR_CATEGORY: 'Luz',
        LIGHTSENSOR_READ_VALUE: 'leer el valor de la luz %1',
        POTSENSOR_CATEGORY: 'Olla',
        POTSENSOR_READ_VALUE: 'leer el valor del bote %1',
        SOUNDSENSOR_CATEGORY: 'Sonido',
        SOUNDSENSOR_READ_VALUE: 'leer el valor del sonido %1',
        HC_SR04_CATEGORY: 'Ultrasónico',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin de activación %1 pin de eco %2 distancia de lectura %3',
        DHT_CATEGORÍA: 'DHT11',
        DHT_INIT: 'iniciar dht11 %1 pin %2 modo %3',
        DHT_READ_TEMPERATURE: 'dht11 %1 temperatura de lectura %2',
        DHT_READ_HUMIDITY: 'dht11 %1 lectura de humedad',
        KS_SERVO_CATEGORY: 'Servo',
        KS_SERVO_ANGLE: 'Servo PIN#%1 grado%2 retraso%3',
        KS_SERVO_READ: 'Servo PIN#%1 grado de lectura',
        WS2812B_CATEGORÍA: 'LED RGB',
        WS2812B_INIT: 'pin %1 %2 LED RGB',
        WS2812B_SETBRIGHTNESS: 'pin %1 brillo LED %2',
        WS2812B_CLEAR: 'pin %1 borra todos los LED',
        WS2812B_SETRANGECOLOR: 'pin %1 RGB %2 a %3 mostrar color %4',
        WS2812B_RGBTOCOLOR: 'rojo %1 verde %2 azul %3',
        WS2812B_SHOWRAINBOW: 'pin %1 %2 a %3 LED RGB muestran un color degradado de %4 a %5',
        WS2812B_SHIFT: 'fijar %1 desplazamiento de píxeles en %2',
        WS2812B_ROTATE: 'anclar %1 rotar píxeles en %2',
        WS2812B_SHOWBARGRAPH: 'pin %1 %2 a %3 LED RGB muestran valor actual de histograma: %4 valor máximo: %5',
        FOURTUBE_CATEGORY: '4 tubos digitales',
        FOURTUBE_STRING: 'TM1650 cadena de visualización %1',
        FOURTUBE_DOT: 'TM1650 %1punto%2',
        FOURTUBE_STATE: 'TM1650%1',
        LCD_CATEGORY: 'LCD',
        LCD_INIT: 'iniciar dirección I2C lcd %1',
        LCD_SETCURSORPOSITION: 'establecer la posición del cursor LCD x: %1 y: %2',
        LCD_PRINT: 'imprimir LCD %1',
        LCD_CLEAR: 'borrar lcd',
        LCD_SETBACKLIGHT: 'establecer luz de fondo LCD %1',
        LCD_SATE_ON: 'encendido',
        LCD_SATE_OFF: 'apagado',
        LCD_SETCURSORSTYLE: 'establecer cursor lcd %1 estilo %2',
        LCD_SATE_DISPLAY: 'pantalla',
        LCD_SATE_HIDE: 'ocultar',
        LCD_STYLE_BLINK: 'parpadeo',
        LCD_STYLE_NOBLINK: 'sin parpadeo',
        MATIRXDISPLAY_CATEGORY: 'Matriz',
        MATIRXDISPLAY_INIT: 'iniciar pantalla de matriz DIN11 CLK13 pin CS %1',
        MATIRXDISPLAY_INIT_TOOLTIP: 'pin DIN a MOSI y CLK a SCK.',
        MATIRXDISPLAY_DRAWPIXEL: 'píxel de dibujo de pantalla Matriz x: %1 y: %2 color %3',
        MATIRXDISPLAY_COLOR_RED: 'rojo',
        MATIRXDISPLAY_COLOR_BLACK: 'negro',
        MATRIX_DISPLAY_GRAPH:' Matriz %1 visualización %2 No%3 nombre de imagen%4 ',
        MATIRXDISPLAY_DRAWLINE: 'línea de dibujo de pantalla Matriz x0: %1 y0: %2, x1: %3 y1: %4 color %5',
        MATIRXDISPLAY_SHOWCHAR: 'Matriz display show char %1 color %2',
        MATIRXDISPLAY_SHOWNUMBER: 'Matriz display mostrar número %1 color %2',
        MATIRXDISPLAY_SCROLLSHOW: 'Matriz display loop muestra %1 velocidad %2 ',
        MATIRXDISPLAY_FACE: 'Imagen de visualización de Matriz %1',
        MATIRXDISPLAY_FILL: 'color de relleno de pantalla Matriz %1',
        MATIRXDISPLAY_REFRESH: 'actualizar la pantalla de Matriz display',
        MATIRXDISPLAY_CLEAN: 'Matriz limpia',
        MATIRXDISPLAY_SETBRIGHTNESS: 'brillo de conjunto de pantalla Matriz %1',
        MATIRXDISPLAY_SETROTATION: 'rotación del conjunto de visualización Matriz %1',
        IR_CATEGORY: 'Remoto IR',
        IR_INIT: 'PIN de inicio remoto IR#%1',
        IR_DATA: 'Datos recibidos',
        IR_READ: 'Leer los datos',
        IR_REFRESH: 'Actualizar datos',
    });
    Object.assign(Blockly.ScratchMsgs.locales['fr'], {
        KS_VARIABLE_LABEL:'Type de variable',
         KS_variables_declare:'Déclarer %1 variable Type %2 Nom %3 Attribué à %4',
         KS_variables_set: 'Définir la variable %1 par %2',
         KS_variables_change:'Changer %1 mode variable %2',
         KS_variables_value: 'variable %1',
         KS_variables_setString: 'Définir la variable chaîne %1 par %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'entier',
         KS_MATH_LONG: 'long',
         KS_MATH_FLOAT: 'flottant',
         KS_MATH_BOOLEAN: 'booléen',
         KS_MATH_BYTE: 'octet',
         KS_MATH_CHAR: 'car',
         KS_MATH_STRING: 'chaîne',
         KS_MATH_UNSIGNED_INT: 'entier non signé',
         KS_MATH_WORD: 'mot',
         KS_MATH_UNSIGNED_LONG: 'long non signé',
         KS_MATH_UNSIGNED_CHAR: 'caractère non signé',
         KS_MATH_DOUBLE: 'doubler',

         KS_TEXT_LABEL:'TEXTE',
         KS_char: 'car%1',
         KS_string: 'chaîne%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'logique',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'DEL',
         LED_SET_LED_STATE: 'Broche LED%1 sortie%2',
         LED_ANALOG: 'LED %1 analogWrite%2 ',
         ATBUZZER_CATEGORY: 'Sonnerie',
         ATBUZZER_STATE: 'broche du buzzer%1 sur%2',
         BUZZER_CATEGORY: "Haut-parleur",
         BUZZER_TONE: 'Tonalité PIN #%1 fréquence%2',
         BUZZER_TONE_D: 'Tonalité PIN #%1 fréquence%2 durée%3',
         BUZZER_MUSIC: 'Tone PIN#%1 play music%2',
         BUZZER_NOTONE: 'Pas de tonalité%1',
         BUTTON_CATEGORY: 'Bouton',
         BUTTON_READ_STATE: 'Le bouton %1 de l"interface a été enfoncé?',
         BUTTON_READ_VALUE: 'La valeur d"état du bouton dans l"interface %1',
         PIR_CATEGORY: 'PIR',
         PIR_READ_VALUE: 'Lire l"interface %1 du capteur de mouvement PIR',
         LIGHTSENSOR_CATEGORY: "Lumière",
         LIGHTSENSOR_READ_VALUE: 'Lire la valeur de la lumière %1',
         POTSENSOR_CATEGORY: 'Pot',
         POTSENSOR_READ_VALUE: 'lire la valeur du pot %1',
         SOUNDSENSOR_CATEGORY: "Son",
         SOUNDSENSOR_READ_VALUE: 'lire la valeur du son %1',
         HC_SR04_CATEGORY: 'Ultrasons',
         HC_SR04_READ_DISTANCE: 'broche de déclenchement HC-SR04 %1 broche d"écho %2 distance de lecture %3',
         DHT_CATEGORY: 'DHT11',
         DHT_INIT: 'init dht11 %1 broche %2 mode %3',
         DHT_READ_TEMPERATURE: 'dht11 %1 a lu la température %2',
         DHT_READ_HUMIDITY: 'dht11 %1 lecture de l"humidité',
         KS_SERVO_CATEGORY: 'Servo',
         KS_SERVO_ANGLE: 'PIN servo#%1 degré%2 retard%3',
         KS_SERVO_READ: 'Servo PIN #%1 degré de lecture',
         WS2812B_CATEGORY: 'LED RVB',
         WS2812B_INIT: 'broche %1 %2 LED RVB',
         WS2812B_SETBRIGHTNESS: 'broche %1 luminosité LED %2',
         WS2812B_CLEAR: 'broche %1 efface toutes les LED',
         WS2812B_SETRANGECOLOR: 'la broche %1 RVB %2 à %3 affiche la couleur %4',
         WS2812B_RGBTOCOLOR: 'rouge %1 vert %2 bleu %3',
         WS2812B_SHOWRAINBOW: 'la broche %1 %2 à %3 LED RVB affiche un dégradé de couleur de %4 à %5',
         WS2812B_SHIFT: 'la broche %1 décale les pixels de %2',
         WS2812B_ROTATE: 'la broche %1 fait pivoter les pixels de %2',
         WS2812B_SHOWBARGRAPH: 'la broche%1 %2 à %3LED RVB affichent la valeur actuelle de l"histogramme:%4 valeur maximale:%5',
         FOURTUBE_CATEGORY: '4 tubes numériques',
         FOURTUBE_STRING: 'Chaîne d"affichage TM1650 %1',
         FOURTUBE_DOT: 'TM1650 %1dot%2',
         FOURTUBE_STATE: 'TM1650%1',
         LCD_CATEGORY: 'LCD',
         LCD_INIT: 'init lcd adresse I2C %1',
         LCD_SETCURSORPOSITION: 'définir la position du curseur lcd x: %1 y: %2',
         LCD_PRINT: 'impression LCD %1',
         LCD_CLEAR: 'effacer l"écran LCD',
         LCD_SETBACKLIGHT: 'régler le rétroéclairage LCD %1',
         LCD_SATE_ON: 'activé',
         LCD_SATE_OFF: 'désactivé',
         LCD_SETCURSORSTYLE: 'définir le curseur lcd %1 style %2',
         LCD_SATE_DISPLAY: 'affichage',
         LCD_SATE_HIDE: 'masquer',
         LCD_STYLE_BLINK: 'clignote',
         LCD_STYLE_NOBLINK: 'pas de clignotement',
         MATIRXDISPLAY_CATEGORY: 'Matrice',
         MATIRXDISPLAY_INIT: 'affichage de la matrice d"initialisation DIN11 CLK13 broche CS %1',
         MATIRXDISPLAY_INIT_TOOLTIP: 'épingler DIN à MOSI et CLK à SCK.',
         MATIRXDISPLAY_DRAWPIXEL: 'affichage Matrice dessiner pixel x: %1 y: %2 couleur %3',
         MATIRXDISPLAY_COLOR_RED: 'rouge',
         MATIRXDISPLAY_COLOR_BLACK: 'noir',
         MATRIX_DISPLAY_GRAPH:' Matrice %1 affichage %2 Non%3 nom de l"image%4 ',
         MATIRXDISPLAY_DRAWLINE: 'Matrice display draw line x0: %1 y0: %2, x1: %3 y1: %4 color %5',
         MATIRXDISPLAY_SHOWCHAR: 'affichage Matrice affiche le caractère %1 couleur %2',
         MATIRXDISPLAY_SHOWNUMBER: 'affichage Matrice affiche le numéro %1 couleur %2',
         MATIRXDISPLAY_SCROLLSHOW: 'la boucle d"affichage Matrice affiche %1 vitesse %2 ',
         MATIRXDISPLAY_FACE: 'Image d"affichage Matrice %1',
         MATIRXDISPLAY_FILL: 'couleur de remplissage d"affichage Matrice %1',
         MATIRXDISPLAY_REFRESH: 'rafraîchit l"affichage de l"affichage Matrice',
         MATIRXDISPLAY_CLEAN: 'Effacer la matrice',
         MATIRXDISPLAY_SETBRIGHTNESS: 'l"affichage Matrice définit la luminosité %1',
         MATIRXDISPLAY_SETROTATION: 'affichage Matrice défini la rotation %1',
         IR_CATEGORY: 'Télécommande infrarouge',
         IR_INIT: 'PIN d"initialisation à distance IR#%1',
         IR_DATA: 'Données reçues',
         IR_READ: 'Lire les données',
         IR_REFRESH: 'Actualiser les données',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ja'], {
        KS_VARIABLE_LABEL:'変数タイプ',
         KS_variables_declare:'%1 変数を宣言します。タイプ %2 名前 %3 を %4 に割り当てます',
         KS_variables_set:'%1 変数を %2 で設定',
         KS_variables_change:'%1 変数モード %2 を変更',
         KS_variables_value: '変数 %1',
         KS_variables_setString:'%1 文字列変数を %2 で設定',
         KS_global:'グローバル',
         KS_local:'ローカル',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: '長い',
         KS_MATH_FLOAT: '浮動小数点',
         KS_MATH_BOOLEAN: 'ブール値',
         KS_MATH_BYTE: 'バイト',
         KS_MATH_CHAR: '文字',
         KS_MATH_STRING: '文字列',
         KS_MATH_UNSIGNED_INT: '符号なし整数',
         KS_MATH_WORD: '単語',
         KS_MATH_UNSIGNED_LONG: '符号なしロング',
         KS_MATH_UNSIGNED_CHAR: '符号なし文字',
         KS_MATH_DOUBLE: '倍精度',

         KS_TEXT_LABEL:'テキスト',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'ロジック',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'LED ピン %1 出力 %2',
         LED_ANALOG: 'LED %1 アナログ書き込み%2 ',
         ATBUZZER_CATEGORY: 'ブザー',
         ATBUZZER_STATE: 'ブザーピン%1 出力%2',
         BUZZER_CATEGORY: 'スピーカー',
         BUZZER_TONE: 'トーン PIN#%1 頻度%2',
         BUZZER_TONE_D: 'トーン PIN#%1 頻度%2 期間%3',
         BUZZER_MUSIC: 'トーン PIN#%1 音楽%2 を再生',
         BUZZER_NOTONE: 'NoTone%1',
         BUTTON_CATEGORY: 'ボタン',
         BUTTON_READ_STATE: 'インターフェイス %1 ボタンが押されました?',
         BUTTON_READ_VALUE: 'インターフェイス %1 のボタンの状態値',
         PIR_CATEGORY: 'PIR',
         PIR_READ_VALUE: 'インターフェイス %1 PIR モーション センサーを読み取り',
         LIGHTSENSOR_CATEGORY: 'ライト',
         LIGHTSENSOR_READ_VALUE: 'ライト %1 の値を読み取ります',
         POTSENSOR_CATEGORY: 'ポット',
         POTSENSOR_READ_VALUE: 'ポット %1 の値を読み取ります',
         SOUNDSENSOR_CATEGORY: 'サウンド',
         SOUNDSENSOR_READ_VALUE: 'サウンド %1 の値を読み取ります',
         HC_SR04_CATEGORY: '超音波',
         HC_SR04_READ_DISTANCE: 'HC-SR04 トリガー ピン %1 エコー ピン %2 読み取り距離 %3',
         DHT_CATEGORY: 'DHT11',
         DHT_INIT: 'init dht11 %1 ピン %2 モード %3',
         DHT_READ_TEMPERATURE: 'dht11 %1 読み取り温度 %2',
         DHT_READ_HUMIDITY: 'dht11 %1 読み取り湿度',
         KS_SERVO_CATEGORY: 'サーボ',
         KS_SERVO_ANGLE: 'サーボ PIN#%1 度%2 遅延%3',
         KS_SERVO_READ: 'サーボ PIN#%1 読み取り度',
         WS2812B_CATEGORY: 'RGB LED',
         WS2812B_INIT: 'ピン %1 %2 RGB LED',
         WS2812B_SETBRIGHTNESS: 'ピン %1 LED の明るさ %2',
         WS2812B_CLEAR: 'ピン %1 のすべての LED をクリア',
         WS2812B_SETRANGECOLOR: 'ピン %1 RGB %2 から %3 はカラー %4 を表示します',
         WS2812B_RGBTOCOLOR: '赤 %1 緑 %2 青 %3',
         WS2812B_SHOWRAINBOW: 'ピン %1 %2 ～ %3 RGB LED は %4 ～ %5 のグラデーション カラーを表示します',
         WS2812B_SHIFT: 'ピン %1 はピクセルを %2 シフトします',
         WS2812B_ROTATE: 'ピン %1 はピクセルを %2 回転させます',
         WS2812B_SHOWBARGRAPH: 'ピン %1 %2 ～ %3 RGB LED はヒストグラムを表示します 現在値: %4 最大値: %5',
         FOURTUBE_CATEGORY: '4 デジタル チューブ',
         FOURTUBE_STRING: 'TM1650 表示文字列 %1',
         FOURTUBE_DOT: 'TM1650 %1dot%2',
         FOURTUBE_STATE: 'TM1650%1',
         LCD_CATEGORY: 'LCD',
         LCD_INIT: '液晶 I2C アドレス %1 の初期化',
         LCD_SETCURSORPOSITION: 'LCD カーソル位置を設定 x: %1 y: %2',
         LCD_PRINT: '液晶印刷 %1',
         LCD_CLEAR: '液晶をクリア',
         LCD_SETBACKLIGHT: 'LCD バックライト %1 を設定',
         LCD_SATE_ON: 'オン',
         LCD_SATE_OFF: 'オフ',
         LCD_SETCURSORSTYLE: 'LCD カーソル %1 スタイル %2 を設定',
         LCD_SATE_DISPLAY: 'ディスプレイ',
         LCD_SATE_HIDE: '非表示',
         LCD_STYLE_BLINK: '点滅',
         LCD_STYLE_NOBLINK: 'まばたきなし',
         MATIRXDISPLAY_CATEGORY: 'マトリックス',
         MATIRXDISPLAY_INIT: 'マトリックス表示 DIN11 CLK13 ピン CS %1',
         MATIRXDISPLAY_INIT_TOOLTIP: 'DIN を MOSI に、CLK を SCK にピンで固定します。',
         MATIRXDISPLAY_DRAWPIXEL: 'マトリックス 表示描画ピクセル x: %1 y: %2 カラー %3',
         MATIRXDISPLAY_COLOR_RED: '赤',
         MATIRXDISPLAY_COLOR_BLACK: '黒',
         MATRIX_DISPLAY_GRAPH:' マトリックス %1 表示 %2 No%3 画像名 %4 ',
         MATIRXDISPLAY_DRAWLINE: 'マトリックス 表示描画線 x0: %1 y0: %2, x1: %3 y1: %4 カラー %5',
         MATIRXDISPLAY_SHOWCHAR: 'マトリックス 表示表示文字 %1 カラー %2',
         MATIRXDISPLAY_SHOWNUMBER: 'マトリックス ディスプレイ表示番号 %1 カラー %2',
         MATIRXDISPLAY_SCROLLSHOW: 'マトリックス 表示ループ表示 %1 速度 %2 ',
         MATIRXDISPLAY_FACE: 'マトリックス 表示イメージ %1',
         MATIRXDISPLAY_FILL: 'マトリックス 表示塗りつぶし色 %1',
         MATIRXDISPLAY_REFRESH: 'マトリックス 表示の表示を更新します',
         MATIRXDISPLAY_CLEAN: 'マトリックスクリア',
         MATIRXDISPLAY_SETBRIGHTNESS: 'マトリックス ディスプレイ設定の明るさ %1',
         MATIRXDISPLAY_SETROTATION: 'マトリックス 表示セットの回転 %1',
         IR_CATEGORY: 'IR リモコン',
         IR_INIT: 'IR リモート初期化 PIN#%1',
         IR_DATA: '受信データ',
         IR_READ: 'データを読み取る',
         IR_REFRESH: 'データを更新',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ko'], {
        KS_VARIABLE_LABEL:'변수 유형',
         KS_variables_declare:'%1 변수 유형 %2 이름 %3 선언 %4에 할당됨',
         KS_variables_set:'%1 변수를 %2로 설정',
         KS_variables_change:'%1 변수 모드 %2 변경',
         KS_variables_value: '변수 %1',
         KS_variables_setString:'%1 문자열 변수를 %2로 설정',
         KS_global:'글로벌',
         KS_local:'로컬',
         KS_MATH_INT: '정수',
         KS_MATH_LONG: '긴',
         KS_MATH_FLOAT: '부동',
         KS_MATH_BOOLEAN: '부울',
         KS_MATH_BYTE: '바이트',
         KS_MATH_CHAR: '문자',
         KS_MATH_STRING: '문자열',
         KS_MATH_UNSIGNED_INT: '부호 없는 정수',
         KS_MATH_WORD: '단어',
         KS_MATH_UNSIGNED_LONG: '부호 없는 롱',
         KS_MATH_UNSIGNED_CHAR: '부호 없는 문자',
         KS_MATH_DOUBLE: '더블',

         KS_TEXT_LABEL:'텍스트',
         KS_char: '문자%1',
         KS_string: '문자열%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'논리',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'LED 핀%1 아웃%2',
         LED_ANALOG: 'LED %1 analogWrite%2 ',
         ATBUZZER_CATEGORY: '버저',
         ATBUZZER_STATE: '부저 핀%1 출력%2',
         BUZZER_CATEGORY: '스피커',
         BUZZER_TONE: '톤 PIN#%1 주파수%2',
         BUZZER_TONE_D: 'Tone PIN#%1 주파수%2 지속시간%3',
         BUZZER_MUSIC: 'Tone PIN#%1 음악 재생%2',
         BUZZER_NOTONE: '노톤%1',
         BUTTON_CATEGORY: '버튼',
         BUTTON_READ_STATE: '인터페이스 %1 버튼이 눌렸습니까?',
         BUTTON_READ_VALUE: '인터페이스 %1에 있는 버튼의 상태 값',
         PIR_CATEGORY: '피르',
         PIR_READ_VALUE: '인터페이스 %1 읽기 PIR 모션 센서',
         LIGHTSENSOR_CATEGORY: '조명',
         LIGHTSENSOR_READ_VALUE: '라이트 %1의 값 읽기',
         POTSENSOR_CATEGORY: '냄비',
         POTSENSOR_READ_VALUE: '팟 %1의 값 읽기',
         SOUNDSENSOR_CATEGORY: '소리',
         SOUNDSENSOR_READ_VALUE: '%1 사운드 값 읽기',
         HC_SR04_CATEGORY: '초음파',
         HC_SR04_READ_DISTANCE: 'HC-SR04 트리거 핀 %1 에코 핀 %2 읽기 거리 %3',
         DHT_CATEGORY: 'DHT11',
         DHT_INIT: 'dht11 %1 핀 %2 모드 %3 초기화',
         DHT_READ_TEMPERATURE: 'dht11 %1 읽기 온도 %2',
         DHT_READ_HUMIDITY: 'dht11 %1 읽기 습도',
         KS_SERVO_CATEGORY: '서보',
         KS_SERVO_ANGLE: '서보 PIN#%1도%2 지연%3',
         KS_SERVO_READ: '서보 PIN#%1 읽기 정도',
         WS2812B_CATEGORY: 'RGB LED',
         WS2812B_INIT: '핀 %1 %2 RGB LED',
         WS2812B_SETBRIGHTNESS: '핀 %1 LED 밝기 %2',
         WS2812B_CLEAR: '핀 %1 모든 LED 지우기',
         WS2812B_SETRANGECOLOR: '핀 %1 RGB %2에서 %3까지 색상 %4 표시',
         WS2812B_RGBTOCOLOR: '빨강 %1 초록 %2 파랑 %3',
         WS2812B_SHOWRAINBOW: '핀 %1 %2에서 %3 RGB LED는 %4에서 %5까지 그라데이션 색상을 표시합니다.',
         WS2812B_SHIFT: '핀 %1 시프트 픽셀 %2',
         WS2812B_ROTATE: '핀 %1이 픽셀을 %2만큼 회전',
         WS2812B_SHOWBARGRAPH: '핀 %1 %2 ~ %3 RGB LED에 히스토그램 현재 값 표시: %4 최대 값: %5',
         FOURTUBE_CATEGORY: '4 디지털 튜브',
         FOURTUBE_STRING: 'TM1650 표시 문자열 %1',
         FOURTUBE_DOT: 'TM1650 %1dot%2',
         FOURTUBE_STATE: 'TM1650%1',
         LCD_CATEGORY: 'LCD',
         LCD_INIT: '초기화 LCD I2C 주소 %1',
         LCD_SETCURSORPOSITION: 'LCD 커서 위치 설정 x: %1 y: %2',
         LCD_PRINT: 'LCD 인쇄 %1',
         LCD_CLEAR: 'LCD 지우기',
         LCD_SETBACKLIGHT: 'LCD 백라이트 %1 설정',
         LCD_SATE_ON: '켜짐',
         LCD_SATE_OFF: '꺼짐',
         LCD_SETCURSORSTYLE: 'LCD 커서 %1 스타일 %2 설정',
         LCD_SATE_DISPLAY: '디스플레이',
         LCD_SATE_HIDE: '숨기기',
         LCD_STYLE_BLINK: '깜박임',
         LCD_STYLE_NOBLINK: '깜박이지 않음',
         MATIRXDISPLAY_CATEGORY: '매트릭스',
         MATIRXDISPLAY_INIT: '매트릭스 디스플레이 DIN11 CLK13 핀 CS %1 초기화',
         MATIRXDISPLAY_INIT_TOOLTIP: 'DIN을 MOSI에 고정하고 CLK를 SCK에 고정합니다.',
         MATIRXDISPLAY_DRAWPIXEL: '매트릭스 디스플레이 그리기 픽셀 x: %1 y: %2 색상 %3',
         MATIRXDISPLAY_COLOR_RED: '빨간색',
         MATIRXDISPLAY_COLOR_BLACK: '검은색',
         MATRIX_DISPLAY_GRAPH:' 매트릭스 %1디스플레이 %2번호%3이미지이름 %4 ',
         MATIRXDISPLAY_DRAWLINE: '매트릭스 디스플레이 그리기 선 x0: %1 y0: %2, x1: %3 y1: %4 색상 %5',
         MATIRXDISPLAY_SHOWCHAR: '매트릭스 표시 문자 %1 색상 %2',
         MATIRXDISPLAY_SHOWNUMBER: '매트릭스 디스플레이 쇼 번호 %1 색상 %2',
         MATIRXDISPLAY_SCROLLSHOW: '매트릭스 디스플레이 루프 쇼 %1 속도 %2',
         MATIRXDISPLAY_FACE: '매트릭스 디스플레이 이미지 %1',
         MATIRXDISPLAY_FILL: '매트릭스 디스플레이 채우기 색상 %1',
         MATIRXDISPLAY_REFRESH: '매트릭스 디스플레이 새로 고침',
         MATIRXDISPLAY_CLEAN: '매트릭스 지우기',
         MATIRXDISPLAY_SETBRIGHTNESS: '매트릭스 디스플레이 설정 밝기 %1',
         MATIRXDISPLAY_SETROTATION: '매트릭스 디스플레이 세트 회전 %1',
         IR_CATEGORY: 'IR 리모트',
         IR_INIT: 'IR 원격 초기화 PIN#%1',
         IR_DATA: '데이터 수신',
         IR_READ: '데이터 읽기',
         IR_REFRESH: '데이터 새로 고침',
    });
    Object.assign(Blockly.ScratchMsgs.locales['pl'], {
        KS_VARIABLE_LABEL:'Typ zmiennej',
        KS_variables_declare:'Deklaracja %1 zmiennej Typ %2 Nazwa %3 Przypisana do %4',
        KS_variables_set:'Ustaw zmienną %1 na %2',
        KS_variables_change:'Zmień tryb zmiennej %1 %2',
        KS_variables_value: 'zmienna %1',
        KS_variables_setString:'Ustaw zmienną łańcuchową %1 o %2',
        KS_global:'Globalny',
        KS_local:'Lokalny',
        KS_MATH_INT: 'int',
        KS_MATH_LONG: 'długi',
        KS_MATH_FLOAT: 'pływa',
        KS_MATH_BOOLEAN: 'wartość logiczna',
        KS_MATH_BYTE: 'bajt',
        KS_MATH_CHAR: 'znak',
        KS_MATH_STRING: 'ciąg znaków',
        KS_MATH_UNSIGNED_INT: 'bez znaku int',
        KS_MATH_WORD: 'słowo',
        KS_MATH_UNSIGNED_LONG: 'długi bez znaku',
        KS_MATH_UNSIGNED_CHAR: 'znak bez znaku',
        KS_MATH_DOUBLE: 'podwójne',

        KS_TEXT_LABEL:'TEKST',
        KS_char: 'znak%1',
        KS_string: 'ciąg%1',
        KS_data: '%1',

        KS_LOGIC_LABEL:'logika',
        KS_judge:'%1%2%3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED pin%1 out%2',
        LED_ANALOG: 'LED %1 analogWrite%2',
        ATBUZZER_CATEGORY: 'Brzęczyk',
        ATBUZZER_STATE: 'pin brzęczyka%1 out%2',
        BUZZER_CATEGORY: 'Mówca',
        BUZZER_TONE: 'Ton PIN#%1 częstotliwość%2',
        BUZZER_TONE_D: 'Ton PIN#%1 częstotliwość%2 czas trwania%3',
        BUZZER_MUSIC: 'Ton PIN#%1 odtwarzanie muzyki%2',
        BUZZER_NOTONE: 'NoTone%1',
        BUTTON_CATEGORY: 'Przycisk',
        BUTTON_READ_STATE: 'Naciśnięto przycisk %1 interfejsu?',
        BUTTON_READ_VALUE: 'Wartość stanu przycisku w interfejsie %1',
        PIR_CATEGORY: 'PIR',
        PIR_READ_VALUE: 'Odczyt interfejsu %1 czujnika ruchu PIR',
        LIGHTSENSOR_CATEGORY: 'Światło',
        LIGHTSENSOR_READ_VALUE: 'odczytaj wartość światła %1',
        POTSENSOR_CATEGORY: 'Doniczka',
        POTSENSOR_READ_VALUE: 'odczytaj wartość puli %1',
        SOUNDSENSOR_CATEGORY: 'Dźwięk',
        SOUNDSENSOR_READ_VALUE: 'odczytaj wartość dźwięku %1',
        HC_SR04_CATEGORY: 'Ultradźwięki',
        HC_SR04_READ_DISTANCE: 'HC-SR04 pin wyzwalający %1 pin echa %2 odległość odczytu %3',
        DHT_CATEGORY: 'DHT11',
        DHT_INIT: 'init dht11 %1 pin %2 tryb %3',
        DHT_READ_TEMPERATURE: 'dht11 %1 odczyt temperatury %2',
        DHT_READ_HUMIDITY: 'dht11 %1 odczyt wilgotności',
        KS_SERVO_CATEGORY: 'Serwo',
        KS_SERVO_ANGLE: 'Serwo PIN#%1 stopień%2 opóźnienie%3',
        KS_SERVO_READ: 'Serwo PIN#%1 stopień odczytu',
        WS2812B_CATEGORY: 'LED RGB',
        WS2812B_INIT: 'styk %1 %2 diod RGB',
        WS2812B_SETBRIGHTNESS: 'pin %1 Jasność LED %2',
        WS2812B_CLEAR: 'pin %1 kasuje wszystkie diody',
        WS2812B_SETRANGECOLOR: 'pin %1 RGB %2 do %3 pokazuje kolor %4',
        WS2812B_RGTOCOLOR: 'czerwony %1 zielony %2 niebieski %3',
        WS2812B_SHOWRAINBOW: 'pin %1 %2 do %3 Diody LED RGB pokazują kolor gradientu od %4 do %5',
        WS2812B_SHIFT: 'pin %1 przesuwa piksele o %2',
        WS2812B_ROTATE: 'pin %1 obraca piksele o %2',
        WS2812B_SHOWBARGRAPH: 'pin %1 %2 do %3 Diody LED RGB pokazują histogram aktualna wartość: %4 maksymalna wartość: %5',
        FOURTUBE_CATEGORY: '4 cyfrowe tuby',
        FOURTUBE_STRING: 'Ciąg wyświetlania TM1650 %1',
        FOURTUBE_DOT: 'TM1650 %1dot%2',
        FOURTUBE_STATE: 'TM1650%1',
        LCD_CATEGORY: 'LCD',
        LCD_INIT: 'początkowy adres I2C lcd %1',
        LCD_SETCURSORPOSITION: 'ustaw pozycję kursora lcd x: %1 y: %2',
        LCD_PRINT: 'wydruk LCD %1',
        LCD_CLEAR: 'wyczyść wyświetlacz',
        LCD_SETBACKLIGHT: 'ustaw podświetlenie lcd %1',
        LCD_SATE_ON: 'włączone',
        LCD_SATE_OFF: 'wyłączony',
        LCD_SETCURSORSTYLE: 'ustaw styl kursora lcd %1 %2',
        LCD_SATE_DISPLAY: 'wyświetlacz',
        LCD_SATE_HIDE: 'ukryj',
        LCD_STYLE_BLINK: 'miga',
        LCD_STYLE_NOBLINK: 'brak mrugnięcia',
        MATIRXDISPLAY_CATEGORY: 'Macierz',
        MATIRXDISPLAY_INIT: 'wyświetlanie Macierz DIN11 CLK13 pin CS %1',
        MATIRXDISPLAY_INIT_TOOLTIP: 'przypnij DIN do MOSI i CLK do SCK.',
        MATIRXDISPLAY_DRAWPIXEL: 'wyświetlacz Macierz rysuje piksel x: %1 y: %2 kolor %3',
        MATIRXDISPLAY_COLOR_RED: 'czerwony',
        MATIRXDISPLAY_COLOR_BLACK: 'czarny',
        MATRIX_DISPLAY_GRAPH:' Matryca %1 wyświetlacz %2 Nie%3 nazwa obrazu%4 ',
        MATIRXDISPLAY_DRAWLINE: 'Macierz wyświetla linię rysowania x0: %1 y0: %2, x1: %3 y1: %4 kolor %5',
        MATIRXDISPLAY_SHOWCHAR: 'wyświetlacz Macierz pokazuje znak %1 kolor %2',
        MATIRXDISPLAY_SHOWNUMBER: 'wyświetlacz Macierz pokazuje numer %1 kolor %2',
        MATIRXDISPLAY_SCROLLSHOW: 'pętla wyświetlacza Macierz pokazuje %1 prędkość %2',
        MATIRXDISPLAY_FACE: 'Macierz wyświetla obraz %1',
        MATIRXDISPLAY_FILL: 'kolor wypełnienia wyświetlacza Macierz %1',
        MATIRXDISPLAY_REFRESH: 'odśwież widok wyświetlacza Macierz',
        MATIRXDISPLAY_CLEAN: 'Macierz wyczyszczona',
        MATIRXDISPLAY_SETBRIGHTNESS: 'wyświetlacz Macierz ustawia jasność %1',
        MATIRXDISPLAY_SETROTATION: 'obrót zestawu wyświetlania Macierz %1',
        IR_CATEGORY: 'Pilot na podczerwień',
        IR_INIT: 'PIN zdalnej inicjalizacji IR#%1',
        IR_DATA: 'Otrzymane dane',
        IR_READ: 'Odczytaj dane',
        IR_REFRESH: 'Odśwież dane',
    });
    Object.assign(Blockly.ScratchMsgs.locales['pt'], {
        KS_VARIABLE_LABEL:'Tipo de variável',
         KS_variables_declare:'Declare %1 variável Tipo %2 Nome %3 Atribuído a %4',
         KS_variables_set:'Definir %1 variável por %2',
         KS_variables_change:'Alterar %1 modo de variável %2',
         KS_variables_value: 'variável %1',
         KS_variables_setString:'Definir variável de string %1 por %2',
         KS_global:'Global',
         KS_local:'Local',
         KS_MATH_INT: 'int',
         KS_MATH_LONG: 'longo',
         KS_MATH_FLOAT: 'flutuar',
         KS_MATH_BOOLEAN: 'booleano',
         KS_MATH_BYTE: 'byte',
         KS_MATH_CHAR: 'char',
         KS_MATH_STRING: 'string',
         KS_MATH_UNSIGNED_INT: 'int unsigned',
         KS_MATH_WORD: 'palavra',
         KS_MATH_UNSIGNED_LONG: 'não assinado longo',
         KS_MATH_UNSIGNED_CHAR: 'caractere não assinado',
         KS_MATH_DOUBLE: 'duplo',

         KS_TEXT_LABEL:'TEXT',
         KS_char: 'char%1',
         KS_string: 'string%1',
         KS_data: '%1',

         KS_LOGIC_LABEL:'lógica',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'LED pino%1 fora%2',
         LED_ANALOG: 'LED %1 analogWrite%2 ',
         ATBUZZER_CATEGORY: 'Campainha',
         ATBUZZER_STATE: 'pino da campainha%1 fora%2',
         BUZZER_CATEGORY: 'Alto-falante',
         BUZZER_TONE: 'Tom PIN#%1 frequência%2',
         BUZZER_TONE_D: 'Tom PIN#%1 frequência%2 duração%3',
         BUZZER_MUSIC: 'Tone PIN#%1 toca música%2',
         BUZZER_NOTONE: 'NoTone%1',
         BUTTON_CATEGORY: 'Botão',
         BUTTON_READ_STATE: 'O botão %1 da interface foi pressionado?',
         BUTTON_READ_VALUE: 'O valor do estado do botão na interface %1',
         PIR_CATEGORY: 'PIR',
         PIR_READ_VALUE: 'Ler interface %1 sensor de movimento PIR',
         LIGHTSENSOR_CATEGORY: 'Luz',
         LIGHTSENSOR_READ_VALUE: 'leia o valor da luz %1',
         POTSENSOR_CATEGORY: 'Pote',
         POTSENSOR_READ_VALUE: 'ler o valor do pote %1',
         SOUNDSENSOR_CATEGORY: 'Som',
         SOUNDSENSOR_READ_VALUE: 'leia o valor do som %1',
         HC_SR04_CATEGORY: 'Ultrassônico',
         HC_SR04_READ_DISTANCE: 'HC-SR04 pino de ativação %1 pino de eco %2 distância de leitura %3',
         DHT_CATEGORY: 'DHT11',
         DHT_INIT: 'inicializar dht11 %1 pino %2 modo %3',
         DHT_READ_TEMPERATURE: 'dht11 %1 leitura da temperatura %2',
         DHT_READ_HUMIDITY: 'dht11 %1 leitura de umidade',
         KS_SERVO_CATEGORY: 'Servo',
         KS_SERVO_ANGLE: 'PIN do servo#%1 grau%2 atraso%3',
         KS_SERVO_READ: 'PIN do servo#%1 grau de leitura',
         WS2812B_CATEGORY: 'LED RGB',
         WS2812B_INIT: 'pino %1 %2 LEDs RGB',
         WS2812B_SETBRIGHTNESS: 'pino %1 brilho do LED %2',
         WS2812B_CLEAR: 'pino %1 limpa todos os LEDs',
         WS2812B_SETRANGECOLOR: 'pino %1 RGB %2 a %3 mostra a cor %4',
         WS2812B_RGBTOCOLOR: 'vermelho %1 verde %2 azul %3',
         WS2812B_SHOWRAINBOW: 'pino %1 %2 a %3 LEDs RGB mostram uma cor gradiente de %4 a %5',
         WS2812B_SHIFT: 'pino %1 desloca pixels em %2',
         WS2812B_ROTATE: 'pino %1 gira pixels em %2',
         WS2812B_SHOWBARGRAPH: 'pino %1 %2 a %3 LEDs RGB mostram o valor atual do histograma: %4 valor máximo: %5',
         FOURTUBE_CATEGORY: '4 tubos digitais',
         FOURTUBE_STRING: 'Sequência de exibição TM1650 %1',
         FOURTUBE_DOT: 'TM1650 %1dot%2',
         FOURTUBE_STATE: 'TM1650%1',
         LCD_CATEGORY: 'LCD',
         LCD_INIT: 'inicializar endereço LCD I2C %1',
         LCD_SETCURSORPOSITION: 'definir a posição do cursor lcd x: %1 y: %2',
         LCD_PRINT: 'impressão LCD %1',
         LCD_CLEAR: 'limpar lcd',
         LCD_SETBACKLIGHT: 'definir luz de fundo do LCD %1',
         LCD_SATE_ON: 'ligado',
         LCD_SATE_OFF: 'desligado',
         LCD_SETCURSORSTYLE: 'definir cursor lcd %1 estilo %2',
         LCD_SATE_DISPLAY: 'exibir',
         LCD_SATE_HIDE: 'ocultar',
         LCD_STYLE_BLINK: 'piscar',
         LCD_STYLE_NOBLINK: 'sem piscar',
         MATIRXDISPLAY_CATEGORY: 'Matriz',
         MATIRXDISPLAY_INIT: 'exibição de matriz inicial DIN11 CLK13 pin CS %1',
         MATIRXDISPLAY_INIT_TOOLTIP: 'pino DIN para MOSI e CLK para SCK.',
         MATIRXDISPLAY_DRAWPIXEL: 'Matriz display desenha pixel x: %1 y: %2 cor %3',
         MATIRXDISPLAY_COLOR_RED: 'vermelho',
         MATIRXDISPLAY_COLOR_BLACK: 'preto',
         MATRIX_DISPLAY_GRAPH:' Matriz %1 exibição %2 Não%3 nome da imagem%4 ',
         MATIRXDISPLAY_DRAWLINE: 'Matriz exibir linha de desenho x0: %1 y0: %2, x1: %3 y1: %4 cor %5',
         MATIRXDISPLAY_SHOWCHAR: 'Matriz display show char %1 color %2',
         MATIRXDISPLAY_SHOWNUMBER: 'exibição Matriz mostra número %1 cor %2',
         MATIRXDISPLAY_SCROLLSHOW: 'Matriz display loop mostra %1 velocidade %2 ',
         MATIRXDISPLAY_FACE: 'Imagem de exibição Matriz %1',
         MATIRXDISPLAY_FILL: 'Matriz exibir cor de preenchimento %1',
         MATIRXDISPLAY_REFRESH: 'atualizar a exibição do display Matriz',
         MATIRXDISPLAY_CLEAN: 'Matriz limpa',
         MATIRXDISPLAY_SETBRIGHTNESS: 'Matriz display set brilho %1',
         MATIRXDISPLAY_SETROTATION: 'rotação do conjunto de exibição Matriz %1',
         IR_CATEGORY: 'IR Remoto',
         IR_INIT: 'PIN de inicialização remota IV#%1',
         IR_DATA: 'Dados recebidos',
         IR_READ: 'Ler os dados',
         IR_REFRESH: 'Atualizar dados',
    });
    Object.assign(Blockly.ScratchMsgs.locales['ru'], {
        KS_VARIABLE_LABEL: 'Тип переменной',
         KS_variables_declare:'Объявить переменную %1 Тип %2 Имя %3 Назначено %4',
         KS_variables_set:'Установить переменную %1 на %2',
         KS_variables_change:'Изменить режим переменной %1 %2',
         KS_variables_value: 'переменная %1',
         KS_variables_setString:'Установить %1 строковую переменную на %2',
         KS_global: 'Глобальный',
         KS_local: 'Местный',
         KS_MATH_INT: 'целое',
         KS_MATH_LONG: 'длинный',
         KS_MATH_FLOAT: 'плавающая',
         KS_MATH_BOOLEAN: 'логическое значение',
         KS_MATH_BYTE: 'байт',
         KS_MATH_CHAR: 'символ',
         KS_MATH_STRING: 'строка',
         KS_MATH_UNSIGNED_INT: 'целое число без знака',
         KS_MATH_WORD: 'слово',
         KS_MATH_UNSIGNED_LONG: 'длинное без знака',
         KS_MATH_UNSIGNED_CHAR: 'беззнаковый символ',
         KS_MATH_DOUBLE: 'двойной',

         KS_TEXT_LABEL:'ТЕКСТ',
         KS_char: 'символ%1',
         KS_string: 'строка%1',
         KS_data: '%1',

         KS_LOGIC_LABEL: 'логика',
         KS_judge:'%1 %2 %3',
         LED_CATEGORY: 'LED',
         LED_SET_LED_STATE: 'LED pin%1 out%2',
         LED_ANALOG: 'LED %1 AnalogWrite%2 ',
         ATBUZZER_CATEGORY: 'Зуммер',
         ATBUZZER_STATE: 'вывод зуммера%1 из%2',
         BUZZER_CATEGORY: "Динамик",
         BUZZER_TONE: 'Тон PIN#%1, частота%2',
         BUZZER_TONE_D: 'Тональный PIN-код #%1, частота%2, продолжительность%3',
         BUZZER_MUSIC: 'Тон PIN#%1 для воспроизведения музыки%2',
         BUZZER_NOTONE: 'NoTone%1',
         BUTTON_CATEGORY: "Кнопка",
         BUTTON_READ_STATE: 'Кнопка интерфейса %1 была нажата？',
         BUTTON_READ_VALUE: 'Значение состояния кнопки в интерфейсе %1',
         PIR_CATEGORY: "ПИР",
         PIR_READ_VALUE: 'Чтение интерфейса %1 PIR датчика движения',
         LIGHTSENSOR_CATEGORY: 'Свет',
         LIGHTSENSOR_READ_VALUE: 'прочитать значение света %1',
         POTSENSOR_CATEGORY: "Горшок",
         POTSENSOR_READ_VALUE: 'прочитать значение горшка %1',
         SOUNDSENSOR_CATEGORY: 'Звук',
         SOUNDSENSOR_READ_VALUE: 'прочитать значение звука %1',
         HC_SR04_CATEGORY: 'Ультразвук',
         HC_SR04_READ_DISTANCE: 'HC-SR04 триггерный вывод %1 эхо-вывод %2 расстояние чтения %3',
         DHT_CATEGORY: 'DHT11',
         DHT_INIT: 'инициализировать dht11 %1 вывод %2 режим %3',
         DHT_READ_TEMPERATURE: 'dht11 %1 чтение температуры %2',
         DHT_READ_HUMIDITY: 'dht11 %1 считанная влажность',
         KS_SERVO_CATEGORY: 'Сервопривод',
         KS_SERVO_ANGLE: 'ПИН-код сервопривода №%1 градус%2 задержка%3',
         KS_SERVO_READ: 'Сервопривод PIN#%1 градус чтения',
         WS2812B_CATEGORY: 'светодиод RGB',
         WS2812B_INIT: 'вывод %1 %2 светодиодов RGB',
         WS2812B_SETBRIGHTNESS: 'вывод %1 яркость светодиода %2',
         WS2812B_CLEAR: 'вывод %1 очистить все светодиоды',
         WS2812B_SETRANGECOLOR: 'вывод %1 RGB от %2 до %3 показывает цвет %4',
         WS2812B_RGBTOCOLOR: 'красный %1 зеленый %2 синий %3',
         WS2812B_SHOWRAINBOW: 'контакт %1 %2 до %3 RGB-светодиодов показывает градиентный цвет от %4 до %5',
         WS2812B_SHIFT: 'закрепить %1 сдвинуть пиксели на %2',
         WS2812B_ROTATE: 'закрепить %1, повернуть пиксели на %2',
         WS2812B_SHOWBARGRAPH: 'вывод %1 от %2 до %3 RGB-светодиоды показывают текущее значение гистограммы: %4 максимальное значение: %5',
         FOURTUBE_CATEGORY: '4 цифровых лампы',
         FOURTUBE_STRING: 'Отображаемая строка TM1650 %1',
         FOURTUBE_DOT: 'TM1650 %1dot%2',
         FOURTUBE_STATE: 'TM1650%1',
         LCD_CATEGORY: 'ЖК-дисплей',
         LCD_INIT: 'инициализировать ЖК-адрес I2C %1',
         LCD_SETCURSORPOSITION: 'установить позицию жидкокристаллического курсора x: %1 y: %2',
         LCD_PRINT: 'ЖК-печать %1',
         LCD_CLEAR: 'очистить ЖК-дисплей',
         LCD_SETBACKLIGHT: 'установить подсветку ЖК-дисплея %1',
         LCD_SATE_ON: 'вкл.',
         LCD_SATE_OFF: 'выкл.',
         LCD_SETCURSORSTYLE: 'установить ЖК-курсор %1 в стиле %2',
         LCD_SATE_DISPLAY: 'дисплей',
         LCD_SATE_HIDE: 'скрыть',
         LCD_STYLE_BLINK: 'мигать',
         LCD_STYLE_NOBLINK: 'не мигает',
         MATIRXDISPLAY_CATEGORY: 'Матрица',
         MATIRXDISPLAY_INIT: 'инициализировать Матрица дисплей DIN11 CLK13 pin CS %1',
         MATIRXDISPLAY_INIT_TOOLTIP: 'закрепить DIN на MOSI и CLK на SCK.',
         MATIRXDISPLAY_DRAWPIXEL: 'Матрица display draw pixel x: %1 y: %2 color %3',
         MATIRXDISPLAY_COLOR_RED: 'красный',
         MATIRXDISPLAY_COLOR_BLACK: 'черный',
         MATRIX_DISPLAY_GRAPH:' Матрица %1 отображение %2 №%3 имя изображения%4 ',
         MATIRXDISPLAY_DRAWLINE: 'линия рисования Матрица display x0: %1 y0: %2, x1: %3 y1: %4 color %5',
         MATIRXDISPLAY_SHOWCHAR: 'Матрица display show char %1 color %2',
         MATIRXDISPLAY_SHOWNUMBER: 'количество показов дисплея Матрица %1, цвет %2',
         MATIRXDISPLAY_SCCROLLSHOW: 'цикл дисплея Матрица показывает %1 скорость %2 ',
         MATIRXDISPLAY_FACE: 'Изображение дисплея Матрица %1',
         MATIRXDISPLAY_FILL: 'цвет заливки дисплея Матрица %1',
         MATIRXDISPLAY_REFRESH: 'обновить отображение Матрица display',
         MATIRXDISPLAY_CLEAN: 'Очистка матрицы',
         MATIRXDISPLAY_SETBRIGHTNESS: 'яркость дисплея Матрица установлена %1',
         MATIRXDISPLAY_SETROTATION: 'поворот дисплея Матрица установлен на %1',
         IR_CATEGORY: 'ИК-пульт',
         IR_INIT: 'ПИН-код инициализации ИК-пульта #%1',
         IR_DATA: 'Полученные данные',
         IR_READ: 'Прочитать данные',
         IR_REFRESH: 'Обновить данные',
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        KS_VARIABLE_LABEL:'變量類型',
        KS_variables_declare:'聲明 %1 數字變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_declare2:'聲明 %1 字符串變量 類型 %2 名稱 %3 賦值為 %4',
        KS_variables_set:'設置 %1 變量 為 %2',
        KS_variables_change:'設置 %1 變量 模式 %2',
        KS_variables_value: '變量 %1',
        KS_variables_setString:'設置 %1 字符串變量 為 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整數',
        KS_MATH_LONG: '長整數',
        KS_MATH_FLOAT: '小數',
        KS_MATH_BOOLEAN: '布爾',
        KS_MATH_BYTE: '字節',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '無符號整數',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '無符號長整數',
        KS_MATH_UNSIGNED_CHAR: '無符號字符',
        KS_MATH_DOUBLE: '雙精度浮點數',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'邏輯',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED 接口%1 輸出%2 ',
        LED_ANALOG: 'LED燈 %1 模擬輸出%2',
        ATBUZZER_CATEGORY: '有源蜂鳴器',
        ATBUZZER_STATE: '蜂鳴器 接口%1 輸出%2 ',
        BUZZER_CATEGORY: '揚聲器',
        BUZZER_TONE: '播放聲音 引腳%1 頻率%2',
        BUZZER_TONE_D: '播放聲音 引腳%1 頻率%2 節拍%3',
        BUZZER_MUSIC: '揚聲器 引腳%1 播放音樂%2',
        BUZZER_NOTONE: '結束聲音 引腳%1',
        BUTTON_CATEGORY: '按鍵開關',
        BUTTON_READ_STATE: '接口%1按鈕被按下？ ',
        BUTTON_READ_VALUE: '接口%1按鈕的狀態值',
        PIR_CATEGORY: '人體紅外傳感器',
        PIR_READ_VALUE: '讀取接口 %1 紅外熱釋電傳感器',
        LIGHTSENSOR_CATEGORY: '光線傳感器',
        LIGHTSENSOR_READ_VALUE: '讀取接口%1光線強度',
        POTSENSOR_CATEGORY: '可調電阻模塊',
        POTSENSOR_READ_VALUE: '讀取接口%1電阻值',
        SOUNDSENSOR_CATEGORY: '聲音傳感器',
        SOUNDSENSOR_READ_VALUE: '讀取接口%1聲音數值',
        HC_SR04_CATEGORY: '超聲波傳感器',
        HC_SR04_READ_DISTANCE: '超聲波傳感器 trig 引腳 %1 echo 引腳 %2 讀取距離 %3',
        DHT_CATEGORY: '溫濕度',
        DHT_INIT: '初始化 溫濕度 %1 引腳 %2 型號 %3',
        DHT_READ_TEMPERATURE: '溫濕度 %1 讀取溫度 %2',
        DHT_READ_HUMIDITY: '溫濕度 %1 讀取濕度',
        KS_SERVO_CATEGORY: '舵機',
        KS_SERVO_ANGLE: '舵機 引腳%1 角度%2 延時(毫秒)%3',
        KS_SERVO_READ: '舵機 引腳%1 讀取度數',
        WS2812B_CATEGORY: 'RGB燈',
        WS2812B_INIT: '初始化 RGB燈 接口 %1 燈總數 %2',
        WS2812B_SETBRIGHTNESS: 'RGB燈 設置接口 %1 燈帶亮度為 %2',
        WS2812B_CLEAR: 'RGB燈 接口 %1 全部熄滅',
        WS2812B_SETRANGECOLOR: 'RGB燈 接口 %1 燈號 %2 到 %3 顯示顏色 %4',
        WS2812B_RGBTOCOLOR: '紅 %1 綠 %2 藍 %3',
        WS2812B_SHOWRAINBOW: 'RGB燈 接口 %1 燈號 %2 到 %3 顯示漸變顏色 色調從 %4 到 %5',
        WS2812B_SHIFT: 'RGB燈 接口 %1 移動 %2 單位',
        WS2812B_ROTATE: 'RGB燈 接口 %1 循環移動 %2 單位',
        WS2812B_SHOWBARGRAPH: 'RGB燈 接口 %1 燈號 %2 到 %3 顯示柱狀圖 當前值 %4 最大值 %5',
        FOURTUBE_CATEGORY: '4位數碼管',
        FOURTUBE_STRING: '數碼管TM1650顯示字符串%1',
        FOURTUBE_DOT: '數碼管TM1650第%1個 小數點%2',
        FOURTUBE_STATE: '數碼管TM1650 %1',
        LCD_CATEGORY: '1602顯示屏',
        LCD_INIT: '初始化 顯示屏 I2C 地址 %1',
        LCD_SETCURSORPOSITION: 'set 顯示屏 光標位置 x: %1 y: %2',
        LCD_PRINT: '顯示屏 打印 %1',
        LCD_CLEAR: '清空 顯示屏',
        LCD_SETBACKLIGHT: '設置 顯示屏 背光 %1',
        LCD_SATE_ON: '開',
        LCD_SATE_OFF: '關',
        LCD_SETCURSORSTYLE: '設置 顯示屏 光標 %1 樣式 %2',
        LCD_SATE_DISPLAY: '顯示',
        LCD_SATE_HIDE: '隱藏',
        LCD_STYLE_BLINK: '閃爍',
        LCD_STYLE_NOBLINK: '不閃爍',
        MATIRXDISPLAY_CATEGORY: '點陣屏',
        MATIRXDISPLAY_INIT: '初始化點陣屏DIN11 CLK13 引腳 CS %1',
        MATIRXDISPLAY_INIT_TOOLTIP: '引腳 DIN 接 MOSI， CLK 接 SCK。 ',
        MATIRXDISPLAY_DRAWPIXEL: '點陣屏繪製點 x: %1 y: %2 顏色 %3',
        MATIRXDISPLAY_COLOR_RED: '紅色',
        MATIRXDISPLAY_COLOR_BLACK: '黑色',
        MATRIX_DISPLAY_GRAPH:' 點陣屏%1 顯示%2 第%3組圖案 名稱%4 ',
        MATIRXDISPLAY_DRAWLINE: '點陣屏繪製直線 x0: %1 y0: %2, x1: %3 y1: %4 顏色 %5',
        MATIRXDISPLAY_SHOWCHAR: '點陣屏顯示字符 %1 顏色 %2',
        MATIRXDISPLAY_SHOWNUMBER: '點陣屏顯示數字 %1 顏色 %2',
        MATIRXDISPLAY_SCROLLSHOW: '點陣屏滾動顯示 %1 速度 %2 ',
        MATIRXDISPLAY_FACE: '點陣屏 顯示圖片%1',
        MATIRXDISPLAY_FILL: '點陣屏填充顏色 %1',
        MATIRXDISPLAY_REFRESH: '刷新點陣屏顯示',
        MATIRXDISPLAY_CLEAN: '點陣清屏',
        MATIRXDISPLAY_SETBRIGHTNESS: '點陣屏設置亮度 %1',
        MATIRXDISPLAY_SETROTATION: '點陣屏設置旋轉 %1',
        IR_CATEGORY: '紅外接收',
        IR_INIT: '初始化紅外接收 引腳%1',
        IR_DATA: '接收到紅外遙控的數據',
        IR_READ: '讀取紅外接收數據',
        IR_REFRESH: '刷新紅外接收數據',
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        KS_VARIABLE_LABEL:'变量类型',
        KS_variables_declare:'声明 %1 数字变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_declare2:'声明 %1 字符串变量 类型 %2 名称 %3 赋值为 %4',
        KS_variables_set:'设置 %1 变量 为 %2',
        KS_variables_change:'设置 %1 变量 模式 %2',
        KS_variables_value: '变量 %1',
        KS_variables_setString:'设置 %1 字符串变量 为 %2',
        KS_global:'全局',
        KS_local:'局部',
        KS_MATH_INT: '整数',
        KS_MATH_LONG: '长整数',
        KS_MATH_FLOAT: '小数',
        KS_MATH_BOOLEAN: '布尔',
        KS_MATH_BYTE: '字节',
        KS_MATH_CHAR: '字符',
        KS_MATH_STRING: '字符串',
        KS_MATH_UNSIGNED_INT: '无符号整数',
        KS_MATH_WORD: '字',
        KS_MATH_UNSIGNED_LONG: '无符号长整数',
        KS_MATH_UNSIGNED_CHAR: '无符号字符',
        KS_MATH_DOUBLE: '双精度浮点数',

        KS_TEXT_LABEL:'文本',
        KS_char: '\'%1\'',
        KS_string: '\"%1\"',
        KS_data: '%1',

        KS_LOGIC_LABEL:'逻辑',
        KS_judge:'%1 %2 %3',
        LED_CATEGORY: 'LED',
        LED_SET_LED_STATE: 'LED 接口%1 输出%2 ',
        LED_ANALOG: 'LED灯 %1 模拟输出%2',
        ATBUZZER_CATEGORY: '有源蜂鸣器',
        ATBUZZER_STATE: '蜂鸣器 接口%1 输出%2 ',
        BUZZER_CATEGORY: '扬声器',
        BUZZER_TONE: '播放声音 引脚%1 频率%2',
        BUZZER_TONE_D: '播放声音 引脚%1 频率%2 节拍%3',
        BUZZER_MUSIC: '扬声器 引脚%1 播放音乐%2',
        BUZZER_NOTONE: '结束声音 引脚%1',
        BUTTON_CATEGORY: '按键开关',
        BUTTON_READ_STATE: '接口%1按钮被按下？',
        BUTTON_READ_VALUE: '接口%1按钮的状态值',
        PIR_CATEGORY: '人体红外传感器',
        PIR_READ_VALUE: '读取接口 %1 红外热释电传感器',
        LIGHTSENSOR_CATEGORY: '光线传感器',
        LIGHTSENSOR_READ_VALUE: '读取接口%1光线强度',
        POTSENSOR_CATEGORY: '可调电阻模块',
        POTSENSOR_READ_VALUE: '读取接口%1电阻值',
        SOUNDSENSOR_CATEGORY: '声音传感器',
        SOUNDSENSOR_READ_VALUE: '读取接口%1声音数值',
        HC_SR04_CATEGORY: '超声波传感器',
        HC_SR04_READ_DISTANCE: '超声波传感器 trig 引脚 %1 echo 引脚 %2 读取距离 %3',
        DHT_CATEGORY: '温湿度',
        DHT_INIT: '初始化 温湿度 %1 引脚 %2 型号 %3',
        DHT_READ_TEMPERATURE: '温湿度 %1 读取温度 %2',
        DHT_READ_HUMIDITY: '温湿度 %1 读取湿度',
        KS_SERVO_CATEGORY: '舵机',
        KS_SERVO_ANGLE: '舵机 引脚%1 角度%2 延时(毫秒)%3',
        KS_SERVO_READ: '舵机 引脚%1 读取度数',
        WS2812B_CATEGORY: 'RGB灯',
        WS2812B_INIT: '初始化 RGB灯 接口 %1 灯总数 %2',
        WS2812B_SETBRIGHTNESS: 'RGB灯 设置接口 %1 灯带亮度为 %2',
        WS2812B_CLEAR: 'RGB灯 接口 %1 全部熄灭',
        WS2812B_SETRANGECOLOR: 'RGB灯 接口 %1 灯号 %2 到 %3 显示颜色 %4',
        WS2812B_RGBTOCOLOR: '红 %1 绿 %2 蓝 %3',
        WS2812B_SHOWRAINBOW: 'RGB灯 接口 %1 灯号 %2 到 %3 显示渐变颜色 色调从 %4 到 %5',
        WS2812B_SHIFT: 'RGB灯 接口 %1 移动 %2 单位',
        WS2812B_ROTATE: 'RGB灯 接口 %1 循环移动 %2 单位',
        WS2812B_SHOWBARGRAPH: 'RGB灯 接口 %1 灯号 %2 到 %3 显示柱状图 当前值 %4 最大值 %5',
        FOURTUBE_CATEGORY: '4位数码管',
        FOURTUBE_STRING: '数码管TM1650显示字符串%1',
        FOURTUBE_DOT: '数码管TM1650第%1个 小数点%2',
        FOURTUBE_STATE: '数码管TM1650 %1',
        LCD_CATEGORY: '1602显示屏',
        LCD_INIT: '初始化 显示屏 I2C 地址 %1',
        LCD_SETCURSORPOSITION: 'set 显示屏 光标位置 x: %1 y: %2',
        LCD_PRINT: '显示屏 打印 %1',
        LCD_CLEAR: '清空 显示屏',
        LCD_SETBACKLIGHT: '设置 显示屏 背光 %1',
        LCD_SATE_ON: '开',
        LCD_SATE_OFF: '关',
        LCD_SETCURSORSTYLE: '设置 显示屏 光标 %1 样式 %2',
        LCD_SATE_DISPLAY: '显示',
        LCD_SATE_HIDE: '隐藏',
        LCD_STYLE_BLINK: '闪烁',
        LCD_STYLE_NOBLINK: '不闪烁',
        MATIRXDISPLAY_CATEGORY: '点阵屏',
        MATIRXDISPLAY_INIT: '初始化点阵屏DIN11 CLK13 引脚 CS %1',
        MATIRXDISPLAY_INIT_TOOLTIP: '引脚 DIN 接 MOSI， CLK 接 SCK。',
        MATIRXDISPLAY_DRAWPIXEL: '点阵屏绘制点 x: %1 y: %2 颜色 %3',
        MATIRXDISPLAY_COLOR_RED: '红色',
        MATIRXDISPLAY_COLOR_BLACK: '黑色',
        MATRIX_DISPLAY_GRAPH:' 点阵屏%1 显示%2 第%3组图案 名称%4 ',
        MATIRXDISPLAY_DRAWLINE: '点阵屏绘制直线 x0: %1 y0: %2, x1: %3 y1: %4 颜色 %5',
        MATIRXDISPLAY_SHOWCHAR: '点阵屏显示字符 %1 颜色 %2',
        MATIRXDISPLAY_SHOWNUMBER: '点阵屏显示数字 %1 颜色 %2',
        MATIRXDISPLAY_SCROLLSHOW: '点阵屏滚动显示 %1 速度 %2 ',
        MATIRXDISPLAY_FACE: '点阵屏 显示图片%1',
        MATIRXDISPLAY_FILL: '点阵屏填充颜色 %1',
        MATIRXDISPLAY_REFRESH: '刷新点阵屏显示',
        MATIRXDISPLAY_CLEAN: '点阵清屏',
        MATIRXDISPLAY_SETBRIGHTNESS: '点阵屏设置亮度 %1',
        MATIRXDISPLAY_SETROTATION: '点阵屏设置旋转 %1',
        IR_CATEGORY: '红外接收',
        IR_INIT: '初始化红外接收 引脚%1',
        IR_DATA: '接收到红外遥控的数据',
        IR_READ: '读取红外接收数据',
        IR_REFRESH: '刷新红外接收数据',
        
    });
    return Blockly;
}

exports = addMsg;
