/* eslint-disable func-style */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        HUSKYLENSVISION_CATEGORY: 'HuskyLens camera',
        HUSKYLENSVISION_BEGIN_I2C: 'Initializes HuskyLens (I2C) address 0x32',
        HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens switches to the %1 algorithm',
        FACE_RECOGNITION: 'face recognition',
        OBJECT_TRACKING: 'object tracking',
        OBJECT_RECOGNITION: 'object recognition',
        LINE_TRACKING: 'line walking',
        COLOR_RECOGNITION: 'color recognition',
        TAG_RECOGNITION: 'label recognition',
        OBJECT_CLASSIFICATION: 'Object Classify ',
        QR_RECOGNITION: 'Qr code recognition (exclusive to Education Edition)',
        BARCODE_RECOGNITION: 'Bar code recognition(exclusive to Education Edition)',
        HUSKYLENSVISION_REQUEST: 'HuskyLens Request a data deposit result',

        HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens Gets the total number of learned ids from the result',
        HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens gets %1 from the result in the screen?',
        RESULT_BLOCK: 'BLOCK',
        RESULT_ARROW: 'ARROW',
        HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens Gets the %1 parameter near the center box from the result',
        BLOCK_PARAMETER_ID: 'ID',
        BLOCK_PARAMETER_XCENTER: 'X centre',
        BLOCK_PARAMETER_YCENTER: 'Y centre',
        BLOCK_PARAMETER_WIDTH: 'width',
        BLOCK_PARAMETER_HEIGHT: 'height',
        HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens Gets the %1 parameter near the center arrow from the result',
        ARROW_PARAMETER_ID: 'ID',
        ARROW_PARAMETER_XORIGIN: 'X starting point',
        ARROW_PARAMETER_YORIGIN: 'Y starting point',
        ARROW_PARAMETER_XTARGET: 'X end point',
        ARROW_PARAMETER_YTARGET: 'Y end point',

        HUSKYLENSVISION_IS_LEARNED: 'HuskyLens Get ID %1 from the results learned?',
        HUSKYLENSVISION_IS_APPEAR: 'HuskyLens Get ID %1 %2 from the result in the screen ?',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens Gets parameter %2 of the ID %1 box from the result',
        HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens Gets parameter %2 for the ID %1 arrow from the result',

        HUSKYLENSVISION_READ_COUNT: 'HuskyLens Gets the %1 total from the result',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens Gets the %2 argument of the %1 th box from the result',
        HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens Gets the %2 parameter of the %1th arrow from the result',

        HUSKYLENSVISION_READ_COUNT2: 'HuskyLens Get the ID %1 %2 total from the result',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens Gets parameter %3 of the %2th box of ID %1 from the result',
        HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens Gets parameter %3 of the %2th arrow of ID %1 from the result',

        HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens automatically learns an ID %1',
        HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens Forget all learning data for the current algorithm',
        HUSKYLENSVISION_WRITE_NAME: 'HuskyLens Set the current algorithm ID %1 to name %2',

        HUSKYLENSVISION_WRITE_OSD: 'HuskyLens Superposition the text %3 on the screen at X:%1, Y:%2',
        HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens Clear the text displayed on the screen',

        HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'HuskyLens Trigger %1 saved on memory card',
        PHOTO_TAKE_PHOTO: 'PHOTO',
        PHOTO_SCREEN_SHOT: 'SHOT',
        HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens  %1 The current algorithm data is SD card %2 model',
        MODEL_SAVE: 'SAVE',
        MODEL_LOAD: 'LOAD'

    });
    Object.assign(Blockly.ScratchMsgs.locales['de'], {
        HUSKYLENSVISION_CATEGORY: 'HuskyLens-Kamera',
        HUSKYLENSVISION_BEGIN_I2C: 'Initialisiert die HuskyLens (I2C)-Adresse 0x32',
        HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens wechselt zum %1-Algorithmus',
        FACE_RECOGNITION: 'Gesichtserkennung',
        OBJECT_TRACKING: 'Objektverfolgung',
        OBJECT_RECOGNITION: 'Objekterkennung',
        LINE_TRACKING: 'Line Walking',
        COLOR_RECOGNITION: 'Farberkennung',
        TAG_RECOGNITION: 'Label-Erkennung',
        OBJECT_CLASSIFICATION: 'Objekt klassifizieren',
        QR_RECOGNITION: 'Qr-Code-Erkennung (exklusiv für Education Edition)',
        BARCODE_RECOGNITION: 'Barcode-Erkennung (exklusiv für Education Edition)',
        HUSKYLENSVISION_REQUEST: 'HuskyLens fordert ein Dateneingabeergebnis an',

        HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens ruft die Gesamtzahl der gelernten IDs aus dem Ergebnis ab',
        HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens erhält %1 vom Ergebnis auf dem Bildschirm?',
        RESULT_BLOCK: 'BLOCK',
        RESULT_ARROW: 'PFEIL',
        HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens ruft den %1-Parameter in der Nähe des mittleren Felds aus dem Ergebnis ab',
        BLOCK_PARAMETER_ID: 'ID',
        BLOCK_PARAMETER_XCENTER: 'X-Mitte',
        BLOCK_PARAMETER_YCENTER: 'Y-Mitte',
        BLOCK_PARAMETER_WIDTH: 'Breite',
        BLOCK_PARAMETER_HEIGHT: 'Höhe',
        HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens ruft den %1-Parameter in der Nähe des mittleren Pfeils aus dem Ergebnis ab',
        ARROW_PARAMETER_ID: 'ID',
        ARROW_PARAMETER_XORIGIN: 'X-Startpunkt',
        ARROW_PARAMETER_YORIGIN: 'Y-Startpunkt',
        ARROW_PARAMETER_XTARGET: 'X-Endpunkt',
        ARROW_PARAMETER_YTARGET: 'Y-Endpunkt',

        HUSKYLENSVISION_IS_LEARNED: 'HuskyLens erhält ID %1 aus den gelernten Ergebnissen?',
        HUSKYLENSVISION_IS_APPEAR: 'HuskyLens erhält ID %1 %2 aus dem Ergebnis im Bildschirm?',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens ruft Parameter %2 der ID %1-Box aus dem Ergebnis ab',
        HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens holt Parameter %2 für die ID %1 Pfeil aus dem Ergebnis',

        HUSKYLENSVISION_READ_COUNT: 'HuskyLens ruft die %1-Gesamtsumme aus dem Ergebnis ab',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens ruft das %2-Argument der %1-ten Box aus dem Ergebnis ab',
        HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens ruft den %2-Parameter des %1. Pfeils aus dem Ergebnis ab',

        HUSKYLENSVISION_READ_COUNT2: 'HuskyLens ermittelt die ID %1 %2 insgesamt aus dem Ergebnis',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens ruft Parameter %3 der %2. Box der ID %1 aus dem Ergebnis ab',
        HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens holt Parameter %3 des %2. Pfeils von ID %1 aus dem Ergebnis',

        HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens verwendet die ID %1',
        HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens vergisst alle Lerndaten für den aktuellen Algorithmus',
        HUSKYLENSVISION_WRITE_NAME: 'HuskyLens setzt die aktuelle Algorithmus-ID %1 auf den Namen %2',

        HUSKYLENSVISION_WRITE_OSD: 'HuskyLens überlagert den Text %3 auf dem Bildschirm bei X:%1, Y:%2',
        HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens löscht den auf dem Bildschirm angezeigten Text',

        HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'HuskyLens Trigger %1 auf Speicherkarte gespeichert',
        PHOTO_TAKE_PHOTO: 'FOTO',
        PHOTO_SCREEN_SHOT: 'SHOT',
        HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens %1 Die aktuellen Algorithmusdaten sind das Modell der SD-Karte %2',
        MODEL_SAVE: 'SPEICHERN',
        MODEL_LOAD: 'LADEN'
    });
    Object.assign(Blockly.ScratchMsgs.locales['es'], {
        HUSKYLENSVISION_CATEGORY: 'Cámara HuskyLens',
        HUSKYLENSVISION_BEGIN_I2C: 'Inicializa la dirección 0x32 de HuskyLens (I2C)',
        HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens cambia al algoritmo %1',
        FACE_RECOGNITION: 'reconocimiento facial',
        OBJECT_TRACKING: 'seguimiento de objetos',
        OBJECT_RECOGNITION: 'reconocimiento de objetos',
        LINE_TRACKING: 'caminar en línea',
        COLOR_RECOGNITION: 'reconocimiento de color',
        TAG_RECOGNITION: 'reconocimiento de etiquetas',
        OBJECT_CLASSIFICATION: 'Objeto Clasificar',
        QR_RECOGNITION: 'Reconocimiento de código QR (exclusivo de la Edición Educativa)',
        BARCODE_RECOGNITION: 'Reconocimiento de código de barras (exclusivo de Education Edition)',
        HUSKYLENSVISION_REQUEST: 'HuskyLens solicita un resultado de depósito de datos',

        HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens obtiene el número total de identificadores aprendidos del resultado',
        HUSKYLENSVISION_IS_APPEAR_DIRECT: '¿HuskyLens obtiene %1 del resultado en la pantalla?',
        RESULT_BLOCK: 'BLOQUEAR',
        RESULT_ARROW: 'FLECHA',
        HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens obtiene el parámetro %1 cerca del cuadro central del resultado',
        BLOCK_PARAMETER_ID: 'ID',
        BLOCK_PARAMETER_XCENTER: 'Centro X',
        BLOCK_PARAMETER_YCENTER: 'Centro Y',
        BLOCK_PARAMETER_WIDTH: 'ancho',
        BLOCK_PARAMETER_HEIGHT: 'altura',
        HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens obtiene el parámetro %1 cerca de la flecha central del resultado',
        ARROW_PARAMETER_ID: 'ID',
        ARROW_PARAMETER_XORIGIN: 'X punto de partida',
        ARROW_PARAMETER_YORIGIN: 'Punto de inicio Y',
        ARROW_PARAMETER_XTARGET: 'X punto final',
        ARROW_PARAMETER_YTARGET: 'Punto final Y',

        HUSKYLENSVISION_IS_LEARNED: '¿HuskyLens obtiene el ID %1 de los resultados obtenidos?',
        HUSKYLENSVISION_IS_APPEAR: '¿HuskyLens obtiene el ID %1 %2 del resultado en la pantalla?',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens obtiene el parámetro %2 del cuadro ID %1 del resultado',
        HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens obtiene el parámetro %2 para la flecha ID %1 del resultado',

        HUSKYLENSVISION_READ_COUNT: 'HuskyLens obtiene el %1 total del resultado',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens obtiene el argumento %2 del cuadro %1 del resultado',
        HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens obtiene el parámetro %2 de la %1ª flecha del resultado',

        HUSKYLENSVISION_READ_COUNT2: 'HuskyLens Obtener el ID %1 %2 total del resultado',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens obtiene el parámetro %3 del %2.º cuadro del ID %1 del resultado',
        HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens obtiene el parámetro %3 de la %2 flecha del ID %1 del resultado',

        HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens lernt automatisch eine ID %1',
        HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens olvida todos los datos de aprendizaje para el algoritmo actual',
        HUSKYLENSVISION_WRITE_NAME: 'HuskyLens Establece el ID del algoritmo actual %1 para nombrar %2',

        HUSKYLENSVISION_WRITE_OSD: 'HuskyLens superpone el texto %3 en la pantalla en X:%1, Y:%2',
        HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens borra el texto que se muestra en la pantalla',

        HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'HuskyLens Trigger %1 guardado en la tarjeta de memoria',
        PHOTO_TAKE_PHOTO: 'FOTO',
        PHOTO_SCREEN_SHOT: 'DISPARO',
        HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens %1 Los datos del algoritmo actual son el modelo de tarjeta SD %2',
        MODEL_SAVE: 'GUARDAR',
        MODEL_LOAD: 'CARGAR'
    });
    Object.assign(Blockly.ScratchMsgs.locales['fr'], {
        HUSKYLENSVISION_CATEGORY:'Caméra HuskyLens',
         HUSKYLENSVISION_BEGIN_I2C: 'Initialise l"adresse HuskyLens (I2C) 0x32',
         HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens passe à l"algorithme %1',
         FACE_RECOGNITION: 'reconnaissance faciale',
         OBJECT_TRACKING: 'suivi d"objet',
         OBJECT_RECOGNITION : 'reconnaissance d"objet',
         LINE_TRACKING: 'marche en ligne',
         COLOR_RECOGNITION: 'reconnaissance des couleurs',
         TAG_RECOGNITION: 'reconnaissance d"étiquette',
         OBJECT_CLASSIFICATION: 'Classification d"objet',
         QR_RECOGNITION:'Reconnaissance du code Qr (exclusive à Education Edition)',
         BARCODE_RECOGNITION:'Reconnaissance de codes à barres (exclusive à Education Edition)',
         HUSKYLENSVISION_REQUEST: 'HuskyLens Demande un résultat de dépôt de données',

         HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens obtient le nombre total d"identifiants appris à partir du résultat',
         HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens obtient %1 du résultat à l"écran ?',
         RESULT_BLOCK: 'BLOC',
         RESULT_ARROW: 'FLÈCHE',
         HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens obtient le paramètre %1 près de la zone centrale à partir du résultat',
         BLOCK_PARAMETER_ID: 'ID',
         BLOCK_PARAMETER_XCENTER: 'Centre X',
         BLOCK_PARAMETER_YCENTER: 'Y centre',
         BLOCK_PARAMETER_WIDTH: 'largeur',
         BLOCK_PARAMETER_HEIGHT: 'hauteur',
         HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens obtient le paramètre %1 près de la flèche centrale à partir du résultat',
         ARROW_PARAMETER_ID: 'ID',
         ARROW_PARAMETER_XORIGIN: 'X point de départ',
         ARROW_PARAMETER_YORIGIN: 'Y point de départ',
         ARROW_PARAMETER_XTARGET: 'Point final X',
         ARROW_PARAMETER_YTARGET: 'Point final Y',

         HUSKYLENSVISION_IS_LEARNED: 'HuskyLens obtient l"ID %1 à partir des résultats appris ?',
         HUSKYLENSVISION_IS_APPEAR: 'HuskyLens Obtenir l"ID %1 %2 à partir du résultat à l"écran ?',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens obtient le paramètre %2 de la boîte ID %1 à partir du résultat',
         HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens obtient le paramètre %2 pour la flèche ID %1 à partir du résultat',

         HUSKYLENSVISION_READ_COUNT: 'HuskyLens obtient le total %1 à partir du résultat',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens récupère l"argument %2 de la %1 ème boîte à partir du résultat',
         HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens obtient le paramètre %2 de la %1ème flèche à partir du résultat',

         HUSKYLENSVISION_READ_COUNT2: 'HuskyLens obtient l"ID %1 %2 total à partir du résultat',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens obtient le paramètre %3 de la %2ème case d"ID %1 à partir du résultat',
         HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens obtient le paramètre %3 de la %2ème flèche d"ID %1 à partir du résultat',

         HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens apprend automatiquement un ID %1',
         HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens oublie toutes les données d"apprentissage pour l"algorithme actuel',
         HUSKYLENSVISION_WRITE_NAME: 'HuskyLens définit l"ID d"algorithme actuel %1 sur le nom %2',

         HUSKYLENSVISION_WRITE_OSD: 'HuskyLens Superposition du texte %3 sur l"écran à X:%1, Y:%2',
         HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens Efface le texte affiché à l"écran',

         HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'Déclencheur HuskyLens %1 enregistré sur la carte mémoire',
         PHOTO_TAKE_PHOTO: 'PHOTO',
         PHOTO_SCREEN_SHOT: 'PIR',
         HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens %1 Les données d"algorithme actuelles sont le modèle de la carte SD %2',
         MODEL_SAVE: 'ENREGISTRER',
         MODEL_LOAD: 'CHARGER'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ja'], {
        HUSKYLENSVISION_CATEGORY: 'ハスキーレンズ カメラ',
         HUSKYLENSVISION_BEGIN_I2C: 'HuskyLens (I2C) アドレス 0x32 を初期化します',
         HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens は %1 アルゴリズムに切り替わります',
         FACE_RECOGNITION: '顔認識',
         OBJECT_TRACKING: 'オブジェクト追跡',
         OBJECT_RECOGNITION: 'オブジェクト認識',
         LINE_TRACKING: 'ラインウォーキング',
         COLOR_RECOGNITION: '色認識',
         TAG_RECOGNITION: 'ラベル認識',
         OBJECT_CLASSIFICATION: 'オブジェクトの分類 ',
         QR_RECOGNITION: 'Qr コード認識 (Education Edition のみ)',
         BARCODE_RECOGNITION: 'バーコード認識(Education Edition のみ)',
         HUSKYLENSVISION_REQUEST: 'HuskyLens データ デポジット結果をリクエスト',

         HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens は結果から学習された ID の総数を取得します',
         HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens は画面内の結果から %1 を取得しますか?',
         RESULT_BLOCK: 'ブロック',
         RESULT_ARROW: 'ARROW',
         HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens は結果から中央ボックス近くの %1 パラメータを取得します',
         BLOCK_PARAMETER_ID: 'ID',
         BLOCK_PARAMETER_XCENTER: 'X 中心',
         BLOCK_PARAMETER_YCENTER: 'Y 中心',
         BLOCK_PARAMETER_WIDTH: '幅',
         BLOCK_PARAMETER_HEIGHT: '高さ',
         HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens は結果から中央矢印付近の %1 パラメータを取得します',
         ARROW_PARAMETER_ID: 'ID',
         ARROW_PARAMETER_XORIGIN: 'X 開始点',
         ARROW_PARAMETER_YORIGIN: 'Y 開始点',
         ARROW_PARAMETER_XTARGET: 'X 終点',
         ARROW_PARAMETER_YTARGET: 'Y 終点',

         HUSKYLENSVISION_IS_LEARNED: 'HuskyLens は学習結果から ID %1 を取得しますか?',
         HUSKYLENSVISION_IS_APPEAR: 'HuskyLens 画面の結果から ID %1 %2 を取得しますか?',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens は結果から ID %1 ボックスのパラメータ %2 を取得します',
         HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens は結果から ID %1 矢印のパラメータ %2 を取得します',

         HUSKYLENSVISION_READ_COUNT: 'HuskyLens は結果から合計 %1 を取得します',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens は結果から %1 番目のボックスの %2 引数を取得します',
         HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens は結果から %1 番目の矢印の %2 パラメータを取得します',

         HUSKYLENSVISION_READ_COUNT2: 'HuskyLens の結果から ID %1 合計 %2 を取得',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens は結果から ID %1 の %2 番目のボックスのパラメータ %3 を取得します',
         HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens は結果から ID %1 の %2 番目の矢印のパラメータ %3 を取得します',

         HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens 自動学习一次 ID %1',
         HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens は現在のアルゴリズムの学習データをすべて忘れます',
         HUSKYLENSVISION_WRITE_NAME: 'HuskyLens 現在のアルゴリズム ID %1 を名前 %2 に設定します',

         HUSKYLENSVISION_WRITE_OSD: 'HuskyLens はテキスト %3 を画面上の X:%1、Y:%2 に重ね合わせます',
         HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens 画面に表示されたテキストをクリアします',

         HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'HuskyLens トリガー %1 がメモリ カードに保存されました',
         PHOTO_TAKE_PHOTO: '写真',
         PHOTO_SCREEN_SHOT: 'ショット',
         HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens %1 現在のアルゴリズム データは SD カード %2 モデルです',
         MODEL_SAVE: '保存',
         MODEL_LOAD: 'ロード'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ko'], {
        HUSKYLENSVISION_CATEGORY: 'HuskyLens 카메라',
         HUSKYLENSVISION_BEGIN_I2C: 'HuskyLens(I2C) 주소 0x32를 초기화합니다.',
         HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens가 %1 알고리즘으로 전환됩니다.',
         FACE_RECOGNITION: '얼굴 인식',
         OBJECT_TRACKING: '객체 추적',
         OBJECT_RECOGNITION: '객체 인식',
         LINE_TRACKING: '라인워킹',
         COLOR_RECOGNITION: '색상 인식',
         TAG_RECOGNITION: '라벨 인식',
         OBJECT_CLASSIFICATION: '객체 분류',
         QR_RECOGNITION: 'Qr 코드 인식(교육용 버전에만 해당)',
         BARCODE_RECOGNITION: '바코드 인식(교육용 버전에만 해당)',
         HUSKYLENSVISION_REQUEST: 'HuskyLens 데이터 보관 결과 요청',

         HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens는 결과에서 학습된 총 ID 수를 가져옵니다.',
         HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens가 화면 결과에서 %1을(를) 얻습니까?',
         RESULT_BLOCK: '차단',
         RESULT_ARROW: '화살표',
         HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens는 결과에서 중앙 상자 근처의 %1 매개변수를 가져옵니다.',
         BLOCK_PARAMETER_ID: 'ID',
         BLOCK_PARAMETER_XCENTER: 'X 중심',
         BLOCK_PARAMETER_YCENTER: 'Y 중심',
         BLOCK_PARAMETER_WIDTH: '너비',
         BLOCK_PARAMETER_HEIGHT: '높이',
         HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens는 결과의 가운데 화살표 근처에 있는 %1 매개변수를 가져옵니다.',
         ARROW_PARAMETER_ID: 'ID',
         ARROW_PARAMETER_XORIGIN: 'X 시작점',
         ARROW_PARAMETER_YORIGIN: 'Y 시작점',
         ARROW_PARAMETER_XTARGET: 'X 끝점',
         ARROW_PARAMETER_YTARGET: 'Y 끝점',

         HUSKYLENSVISION_IS_LEARNED: '학습된 결과에서 HuskyLens ID %1을(를) 얻으시겠습니까?',
         HUSKYLENSVISION_IS_APPEAR: 'HuskyLens는 화면 결과에서 ID %1 %2을(를) 얻습니까?',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens는 결과에서 ID %1 상자의 %2 매개변수를 가져옵니다.',
         HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens는 결과에서 ID %1 화살표에 대한 %2 매개변수를 가져옵니다.',

         HUSKYLENSVISION_READ_COUNT: 'HuskyLens는 결과에서 총 %1을(를) 가져옵니다.',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens는 결과에서 %1번째 상자의 %2 인수를 가져옵니다.',
         HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens는 결과에서 %1번째 화살표의 %2 매개변수를 가져옵니다.',

         HUSKYLENSVISION_READ_COUNT2: 'HuskyLens 결과에서 총 ID %1 %2 가져오기',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens는 결과에서 ID %1의 %2번째 상자 중 %3 매개변수를 가져옵니다.',
         HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens는 결과에서 ID %1의 %2번째 화살표의 %3 매개변수를 가져옵니다.',

         HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens의 자체 학습 ID %1',
         HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens 현재 알고리즘에 대한 모든 학습 데이터를 잊어버립니다.',
         HUSKYLENSVISION_WRITE_NAME: 'HuskyLens 현재 알고리즘 ID %1을(를) 이름 %2로 설정합니다',

         HUSKYLENSVISION_WRITE_OSD: 'HuskyLens는 화면의 X:%1, Y:%2에 %3 텍스트를 겹쳐 놓습니다.',
         HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens 화면에 표시된 텍스트를 지웁니다.',

         HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'HuskyLens 트리거 %1이(가) 메모리 카드에 저장되었습니다.',
         PHOTO_TAKE_PHOTO: '사진',
         PHOTO_SCREEN_SHOT: '샷',
         HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens %1 현재 알고리즘 데이터는 SD 카드 %2 모델입니다',
         MODEL_SAVE: '저장',
         MODEL_LOAD: '로드'
    });
    Object.assign(Blockly.ScratchMsgs.locales['pl'], {
        HUSKYLENSVISION_CATEGORY: 'Aparat HuskyLens',
        HUSKYLENSVISION_BEGIN_I2C: 'Inicjuje adres HuskyLens (I2C) 0x32',
        HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens przełącza na algorytm %1',
        FACE_RECOGNITION: 'rozpoznawanie twarzy',
        OBJECT_TRACKING: 'śledzenie obiektu',
        OBJECT_RECOGNITION: 'rozpoznawanie obiektu',
        LINE_TRACKING: 'chodzenie po linie',
        COLOR_RECOGNITION: 'rozpoznawanie kolorów',
        TAG_RECOGNITION: 'rozpoznawanie etykiet',
        OBJECT_CLASSIFICATION: 'Klasyfikacja obiektów',
        QR_RECOGNITION: 'Rozpoznawanie kodu Qr (wyłącznie w wersji edukacyjnej)',
        BARCODE_RECOGNITION: 'Rozpoznawanie kodu kreskowego (wyłącznie w wersji edukacyjnej)',
        HUSKYLENSVISION_REQUEST: 'HuskyLens Żądanie wyniku depozytu danych',

        HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens Pobiera z wyniku całkowitą liczbę wyuczonych identyfikatorów',
        HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens pobiera %1 z wyniku na ekranie?',
        RESULT_BLOCK: 'BLOK',
        RESULT_ARROW: 'STRZAŁKA',
        HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens Pobiera z wyniku parametr %1 w pobliżu środkowego pola',
        BLOCK_PARAMETER_ID: 'Identyfikator',
        BLOCK_PARAMETER_XCENTER: 'Środek X',
        BLOCK_PARAMETER_YCENTER: 'Środek Y',
        BLOCK_PARAMETER_WIDTH: 'szerokość',
        BLOCK_PARAMETER_HEIGHT: 'wysokość',
        HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens Pobiera z wyniku parametr %1 w pobliżu środkowej strzałki',
        ARROW_PARAMETER_ID: 'Identyfikator',
        ARROW_PARAMETER_XORIGIN: 'X punkt początkowy',
        ARROW_PARAMETER_YORIGIN: 'Punkt początkowy Y',
        ARROW_PARAMETER_XTARGET: 'Punkt końcowy X',
        ARROW_PARAMETER_YTARGET: 'Punkt końcowy Y',

        HUSKYLENSVISION_IS_LEARNED: 'HuskyLens Uzyskać identyfikator %1 z poznanych wyników?',
        HUSKYLENSVISION_IS_APPEAR: 'HuskyLens Uzyskaj identyfikator %1 %2 z wyniku na ekranie?',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens pobiera z wyniku parametr %2 pola ID %1',
        HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens Pobiera z wyniku parametr %2 dla strzałki ID %1',

        HUSKYLENSVISION_READ_COUNT: 'HuskyLens pobiera z wyniku łącznie %1',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens Pobiera z wyniku argument %2 z %1-go pola',
        HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens Pobiera z wyniku parametr %2 %1-tej strzałki',

        HUSKYLENSVISION_READ_COUNT2: 'HuskyLens Pobierz z wyniku identyfikator %1 %2 ogółem',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens Pobiera z wyniku parametr %3 z %2-tego pola o identyfikatorze %1',
        HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens Pobiera z wyniku parametr %3 %2-ej strzałki o ID %1',

        HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens automatycznie uczy się identyfikatora %1',
        HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens Zapomnij wszystkie dane uczące dla bieżącego algorytmu',
        HUSKYLENSVISION_WRITE_NAME: 'HuskyLens Ustaw bieżący identyfikator algorytmu %1 na nazwę %2',

        HUSKYLENSVISION_WRITE_OSD: 'HuskyLens Superpozycja tekstu %3 na ekranie w X:%1, Y:%2',
        HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens Wyczyść tekst wyświetlany na ekranie',

        HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'Wyzwalacz HuskyLens %1 zapisany na karcie pamięci',
        PHOTO_TAKE_PHOTO: 'FOTO',
        PHOTO_SCREEN_SHOT: 'STRZAŁ',
        HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens %1 Bieżące dane algorytmu to model karty SD %2',
        MODEL_ZAPISZ: 'ZAPISZ',
        MODEL_LOAD: 'ŁADUJ'
    });
    Object.assign(Blockly.ScratchMsgs.locales['pt'], {
        HUSKYLENSVISION_CATEGORY: 'Câmera HuskyLens',
         HUSKYLENSVISION_BEGIN_I2C: 'Inicializa endereço HuskyLens (I2C) 0x32',
         HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens muda para o algoritmo%1',
         FACE_RECOGNITION: 'reconhecimento facial',
         OBJECT_TRACKING: 'rastreamento de objeto',
         OBJECT_RECOGNITION: 'reconhecimento de objeto',
         LINE_TRACKING: 'andar na linha',
         COLOR_RECOGNITION: 'reconhecimento de cores',
         TAG_RECOGNITION: 'reconhecimento de rótulo',
         OBJECT_CLASSIFICATION: 'Classificação de objeto',
         QR_RECOGNITION: 'Reconhecimento de código QR (exclusivo para Education Edition)',
         BARCODE_RECOGNITION: 'Reconhecimento de código de barras (exclusivo para Education Edition)',
         HUSKYLENSVISION_REQUEST: 'HuskyLens solicita um resultado de depósito de dados',

         HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens obtém o número total de ids aprendidos do resultado',
         HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens obtém %1 do resultado na tela?',
         RESULT_BLOCK: 'BLOCO',
         RESULT_ARROW: 'SETA',
         HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens obtém o parâmetro%1 próximo à caixa central do resultado',
         BLOCK_PARAMETER_ID: 'ID',
         BLOCK_PARAMETER_XCENTER: 'centro X',
         BLOCK_PARAMETER_YCENTER: 'centro Y',
         BLOCK_PARAMETER_WIDTH: 'largura',
         BLOCK_PARAMETER_HEIGHT: 'altura',
         HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens obtém o parâmetro%1 próximo à seta central do resultado',
         ARROW_PARAMETER_ID: 'ID',
         ARROW_PARAMETER_XORIGIN: 'Ponto inicial X',
         ARROW_PARAMETER_YORIGIN: 'Ponto inicial Y',
         ARROW_PARAMETER_XTARGET: 'Ponto final X',
         ARROW_PARAMETER_YTARGET: 'Ponto final Y',

         HUSKYLENSVISION_IS_LEARNED: 'HuskyLens obtém ID%1 dos resultados aprendidos?',
         HUSKYLENSVISION_IS_APPEAR: 'HuskyLens obtém ID %1 %2 do resultado na tela?',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens Obtém o parâmetro %2 da caixa ID %1 do resultado',
         HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens obtém o parâmetro %2 para a seta ID %1 do resultado',

         HUSKYLENSVISION_READ_COUNT: 'HuskyLens obtém o total de %1 do resultado',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens Obtém o argumento %2 da %1ª caixa do resultado',
         HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens Obtém o parâmetro %2 da %1ª seta do resultado',

         HUSKYLENSVISION_READ_COUNT2: 'HuskyLens Obtenha o ID %1 %2 total do resultado',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens Obtém o parâmetro %3 da %2ª caixa de ID %1 do resultado',
         HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens Obtém o parâmetro %3 da %2ª seta do ID %1 do resultado',

         HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens aprende automaticamente um ID%1',
         HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens Esqueça todos os dados de aprendizado para o algoritmo atual',
         HUSKYLENSVISION_WRITE_NAME: 'HuskyLens Defina o ID do algoritmo atual %1 para o nome %2',

         HUSKYLENSVISION_WRITE_OSD: 'HuskyLens Superposition o texto %3 na tela em X:%1, Y:%2',
         HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens Limpa o texto exibido na tela',

         HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'Gatilho HuskyLens %1 salvo no cartão de memória',
         PHOTO_TAKE_PHOTO: 'FOTO',
         PHOTO_SCREEN_SHOT: 'Tiro',
         HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens %1 Os dados do algoritmo atual são do modelo %2 do cartão SD',
         MODEL_SAVE: 'SALVAR',
         MODEL_LOAD: 'CARREGAR'
    });
    Object.assign(Blockly.ScratchMsgs.locales['ru'], {
        HUSKYLENSVISION_CATEGORY: 'Камера HuskyLens',
         HUSKYLENSVISION_BEGIN_I2C: 'Инициализирует адрес HuskyLens (I2C) 0x32',
         HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens переключается на алгоритм %1',
         FACE_RECOGNITION: 'распознавание лиц',
         OBJECT_TRACKING: 'отслеживание объекта',
         OBJECT_RECOGNITION: 'распознавание объекта',
         LINE_TRACKING: 'ходьба по линии',
         COLOR_RECOGNITION: 'распознавание цвета',
         TAG_RECOGNITION: 'распознавание метки',
         OBJECT_CLASSIFICATION: 'Классификация объектов',
         QR_RECOGNITION: 'Распознавание Qr-кода (эксклюзивно для Education Edition)',
         BARCODE_RECOGNITION: 'Распознавание штрих-кода (эксклюзивно для Education Edition)',
         HUSKYLENSVISION_REQUEST: 'HuskyLens Запрос результата хранения данных',

         HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens получает общее количество изученных идентификаторов из результата',
         HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens получает %1 из результата на экране?',
         РЕЗУЛЬТАТ_БЛОК: 'БЛОК',
         RESULT_ARROW: 'СТРЕЛКА',
         HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens получает параметр %1 рядом с центральным полем из результата',
         BLOCK_PARAMETER_ID: 'Идентификатор',
         BLOCK_PARAMETER_XCENTER: 'Центр X',
         BLOCK_PARAMETER_YCENTER: 'Центр Y',
         BLOCK_PARAMETER_WIDTH: 'ширина',
         BLOCK_PARAMETER_HEIGHT: 'высота',
         HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens получает параметр %1 рядом с центральной стрелкой из результата',
         ARROW_PARAMETER_ID: 'Идентификатор',
         ARROW_PARAMETER_XORIGIN: 'Начальная точка X',
         ARROW_PARAMETER_YORIGIN: 'Начальная точка Y',
         ARROW_PARAMETER_XTARGET: 'Конечная точка X',
         ARROW_PARAMETER_YTARGET: 'Конечная точка Y',

         HUSKYLENSVISION_IS_LEARNED: 'HuskyLens получает идентификатор %1 из полученных результатов?',
         HUSKYLENSVISION_IS_APPEAR: 'HuskyLens Get ID %1 %2 из результата на экране ？',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens получает параметр %2 поля ID %1 из результата',
         HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens получает параметр %2 для стрелки ID %1 из результата',

         HUSKYLENSVISION_READ_COUNT: 'HuskyLens получает %1 всего результата',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens получает аргумент %2 %1-го поля из результата',
         HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens получает параметр %2 %1-й стрелки из результата',

         HUSKYLENSVISION_READ_COUNT2: 'HuskyLens Получите идентификатор %1 %2 всего из результата',
         HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens получает параметр %3 %2-го поля с идентификатором %1 из результата',
         HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens получает параметр %3 %2-й стрелки с идентификатором %1 из результата',
 
         HUSKYLENSVISION_LEARN_ONCE:  'HuskyLens автоматически запоминает идентификатор %1',
         HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens забыть все данные обучения для текущего алгоритма',
         HUSKYLENSVISION_WRITE_NAME: 'HuskyLens Установите для текущего идентификатора алгоритма %1 имя %2',

         HUSKYLENSVISION_WRITE_OSD: 'HuskyLens наложите текст %3 на экран в точках X:%1, Y:%2',
         HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens Очистить текст, отображаемый на экране',

         HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'Триггер HuskyLens %1 сохранен на карте памяти',
         PHOTO_TAKE_PHOTO: 'ФОТО',
         PHOTO_SCREEN_SHOT: "КАДР",
         HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens %1 Текущие данные алгоритма — модель SD-карты %2',
         MODEL_SAVE: 'СОХРАНИТЬ',
         МОДЕЛЬ_LOAD: 'ЗАГРУЗИТЬ'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        HUSKYLENSVISION_CATEGORY: 'HuskyLens攝像頭',
        HUSKYLENSVISION_BEGIN_I2C: '初始化HuskyLens (I2C) 地址 0x32',
        HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens 切換到 %1 算法',
        FACE_RECOGNITION: '人臉識別',
        OBJECT_TRACKING: '物體追踪',
        OBJECT_RECOGNITION: '物體識別',
        LINE_TRACKING: '巡線',
        COLOR_RECOGNITION: '顏色識別',
        TAG_RECOGNITION: '標籤識別',
        OBJECT_CLASSIFICATION: '物體分類',
        QR_RECOGNITION: '二維碼識別(教育版獨有)',
        BARCODE_RECOGNITION: '條形碼識別(教育版獨有)',
        HUSKYLENSVISION_REQUEST: 'HuskyLens 請求一次數據 存入結果',

        HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens 從結果中獲取 已學ID總數',
        HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens 從結果中獲取 %1 在畫面中 ?',
        RESULT_BLOCK: '方框',
        RESULT_ARROW: '箭頭',
        HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens 從結果中獲取靠近中心 方框 的 %1 參數',
        BLOCK_PARAMETER_ID: 'ID',
        BLOCK_PARAMETER_XCENTER: 'X中心',
        BLOCK_PARAMETER_YCENTER: 'Y中心',
        BLOCK_PARAMETER_WIDTH: '寬度',
        BLOCK_PARAMETER_HEIGHT: '高度',
        HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens 從結果中獲取靠近中心 箭頭 的 %1 參數',
        ARROW_PARAMETER_ID: 'ID',
        ARROW_PARAMETER_XORIGIN: 'X起點',
        ARROW_PARAMETER_YORIGIN: 'Y起點',
        ARROW_PARAMETER_XTARGET: 'X終點',
        ARROW_PARAMETER_YTARGET: 'Y終點',

        HUSKYLENSVISION_IS_LEARNED: 'HuskyLens 從結果中獲取ID %1 已學習 ?',
        HUSKYLENSVISION_IS_APPEAR: 'HuskyLens 從結果中獲取ID %1 %2 在畫面中 ?',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens 從結果中獲取ID %1 方框 的參數 %2',
        HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens 從結果中獲取ID %1 箭頭 的參數 %2',

        HUSKYLENSVISION_READ_COUNT: 'HuskyLens 從結果中獲取 %1 總數',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens 從結果中獲取第 %1 個 方框 的 %2 參數',
        HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens 從結果中獲取第 %1 個 箭頭 的 %2 參數',

        HUSKYLENSVISION_READ_COUNT2: 'HuskyLens 從結果中獲取ID %1 %2 總數',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens 從結果中獲取ID %1 第 %2 個 方框 的參數 %3',
        HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens 從結果中獲取ID %1 第 %2 個 箭頭 的參數 %3',

        HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens 自動學習一次ID %1',
        HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens 遺忘當前算法的所有學習數據',
        HUSKYLENSVISION_WRITE_NAME: 'HuskyLens 設置當前算法ID %1 名字為 %2',

        HUSKYLENSVISION_WRITE_OSD: 'HuskyLens 在屏幕X:%1 Y:%2 位置 疊加顯示文字 %3',
        HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens 清除屏幕顯示的文字',

        HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'HuskyLens 觸發 %1 保存在內存卡',
        PHOTO_TAKE_PHOTO: '拍照',
        PHOTO_SCREEN_SHOT: '截屏',
        HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens  %1 當前算法數據為SD卡 %2 號模型',
        MODEL_SAVE: '保存',
        MODEL_LOAD: '加載'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        HUSKYLENSVISION_CATEGORY: 'HuskyLens摄像头',
        HUSKYLENSVISION_BEGIN_I2C: '初始化HuskyLens (I2C) 地址 0x32',
        HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens 切换到 %1 算法',
        FACE_RECOGNITION: '人脸识别',
        OBJECT_TRACKING: '物体追踪',
        OBJECT_RECOGNITION: '物体识别',
        LINE_TRACKING: '巡线',
        COLOR_RECOGNITION: '颜色识别',
        TAG_RECOGNITION: '标签识别',
        OBJECT_CLASSIFICATION: '物体分类',
        QR_RECOGNITION: '二维码识别(教育版独有)',
        BARCODE_RECOGNITION: '条形码识别(教育版独有)',
        HUSKYLENSVISION_REQUEST: 'HuskyLens 请求一次数据 存入结果',

        HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens 从结果中获取 已学ID总数',
        HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens 从结果中获取 %1 在画面中 ？',
        RESULT_BLOCK: '方框',
        RESULT_ARROW: '箭头',
        HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens 从结果中获取靠近中心 方框 的 %1 参数',
        BLOCK_PARAMETER_ID: 'ID',
        BLOCK_PARAMETER_XCENTER: 'X中心',
        BLOCK_PARAMETER_YCENTER: 'Y中心',
        BLOCK_PARAMETER_WIDTH: '宽度',
        BLOCK_PARAMETER_HEIGHT: '高度',
        HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens 从结果中获取靠近中心 箭头 的 %1 参数',
        ARROW_PARAMETER_ID: 'ID',
        ARROW_PARAMETER_XORIGIN: 'X起点',
        ARROW_PARAMETER_YORIGIN: 'Y起点',
        ARROW_PARAMETER_XTARGET: 'X终点',
        ARROW_PARAMETER_YTARGET: 'Y终点',

        HUSKYLENSVISION_IS_LEARNED: 'HuskyLens 从结果中获取ID %1 已学习 ?',
        HUSKYLENSVISION_IS_APPEAR: 'HuskyLens 从结果中获取ID %1 %2 在画面中 ?',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens 从结果中获取ID %1 方框 的参数 %2',
        HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens 从结果中获取ID %1 箭头 的参数 %2',

        HUSKYLENSVISION_READ_COUNT: 'HuskyLens 从结果中获取 %1 总数',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens 从结果中获取第 %1 个 方框 的 %2 参数',
        HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens 从结果中获取第 %1 个 箭头 的 %2 参数',

        HUSKYLENSVISION_READ_COUNT2: 'HuskyLens 从结果中获取ID %1 %2 总数',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens 从结果中获取ID %1 第 %2 个 方框 的参数 %3',
        HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens 从结果中获取ID %1 第 %2 个 箭头 的参数 %3',

        HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens 自动学习一次ID %1',
        HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens 遗忘当前算法的所有学习数据',
        HUSKYLENSVISION_WRITE_NAME: 'HuskyLens 设置当前算法ID %1 名字为 %2',

        HUSKYLENSVISION_WRITE_OSD: 'HuskyLens 在屏幕X:%1 Y:%2 位置 叠加显示文字 %3',
        HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens 清除屏幕显示的文字',

        HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'HuskyLens 触发 %1 保存在内存卡',
        PHOTO_TAKE_PHOTO: '拍照',
        PHOTO_SCREEN_SHOT: '截屏',
        HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens  %1 当前算法数据为SD卡 %2 号模型',
        MODEL_SAVE: '保存',
        MODEL_LOAD: '加载'

    });

    Object.assign(Blockly.ScratchMsgs.locales['zh-tw'], {
        HUSKYLENSVISION_CATEGORY: 'HuskyLens攝像頭',
        HUSKYLENSVISION_BEGIN_I2C: '初始化HuskyLens (I2C) 地址 0x32',
        HUSKYLENSVISION_WRITE_ALGORITHM: 'HuskyLens 切換到 %1 演算法',
        FACE_RECOGNITION: '人臉識別',
        OBJECT_TRACKING: '物體追蹤',
        OBJECT_RECOGNITION: '物體識別',
        LINE_TRACKING: '巡線',
        COLOR_RECOGNITION: '顏色識別',
        TAG_RECOGNITION: '標籤識別',
        OBJECT_CLASSIFICATION: '物體分類',
        QR_RECOGNITION: '二維碼識別(教育版獨有)',
        BARCODE_RECOGNITION: '條碼識別(教育版獨有)',
        HUSKYLENSVISION_REQUEST: 'HuskyLens 請求一次數據 存入結果',

        HUSKYLENSVISION_READ_LEARNED_ID_COUNT: 'HuskyLens 從結果中獲取 已學ID總數',
        HUSKYLENSVISION_IS_APPEAR_DIRECT: 'HuskyLens 從結果中獲取 %1 在畫面中 ?',
        RESULT_BLOCK: '方框',
        RESULT_ARROW: '箭頭',
        HUSKYLENSVISION_READ_BLOCK_CENTER_PARAMETER_DIRECT: 'HuskyLens 從結果中獲取靠近中心 方框 的 %1 參數',
        BLOCK_PARAMETER_ID: 'ID',
        BLOCK_PARAMETER_XCENTER: 'X中心',
        BLOCK_PARAMETER_YCENTER: 'Y中心',
        BLOCK_PARAMETER_WIDTH: '寬度',
        BLOCK_PARAMETER_HEIGHT: '高度',
        HUSKYLENSVISION_READ_ARROW_CENTER_PARAMETER_DIRECT: 'HuskyLens 從結果中獲取靠近中心 箭頭 的 %1 參數',
        ARROW_PARAMETER_ID: 'ID',
        ARROW_PARAMETER_XORIGIN: 'X起點',
        ARROW_PARAMETER_YORIGIN: 'Y起點',
        ARROW_PARAMETER_XTARGET: 'X終點',
        ARROW_PARAMETER_YTARGET: 'Y終點',

        HUSKYLENSVISION_IS_LEARNED: 'HuskyLens 從結果中獲取ID %1 已學習 ?',
        HUSKYLENSVISION_IS_APPEAR: 'HuskyLens 從結果中獲取ID %1 %2 在畫面中 ?',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER: 'HuskyLens 從結果中獲取ID %1 方框 的參數 %2',
        HUSKYLENSVISION_READ_ARROW_PARAMETER: 'HuskyLens 從結果中獲取ID %1 箭頭 的參數 %2',

        HUSKYLENSVISION_READ_COUNT: 'HuskyLens 從結果中獲取 %1 總數',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER_DIRECT: 'HuskyLens 從結果中獲取第 %1 個 方框 的 %2 參數',
        HUSKYLENSVISION_READ_ARROW_PARAMETER_DIRECT: 'HuskyLens 從結果中獲取第 %1 個 箭頭 的 %2 參數',

        HUSKYLENSVISION_READ_COUNT2: 'HuskyLens 從結果中獲取ID %1 %2 總數',
        HUSKYLENSVISION_READ_BLOCK_PARAMETER2: 'HuskyLens 從結果中獲取ID %1 第 %2 個 方框 的參數 %3',
        HUSKYLENSVISION_READ_ARROW_PARAMETER2: 'HuskyLens 從結果中獲取ID %1 第 %2 個 箭頭 的參數 %3',

        HUSKYLENSVISION_LEARN_ONCE: 'HuskyLens 自動學習一次ID %1',
        HUSKYLENSVISION_FORGET_LEARN: 'HuskyLens 遺忘當前演算法的所有學習數據',
        HUSKYLENSVISION_WRITE_NAME: 'HuskyLens 設置當前演算法ID %1 名字為 %2',

        HUSKYLENSVISION_WRITE_OSD: 'HuskyLens 在螢幕X:%1 Y:%2 位置 疊加顯示文字 %3',
        HUSKYLENSVISION_CLEAR_OSD: 'HuskyLens 清除螢幕顯示的文字',

        HUSKYLENSVISION_PHOTO_TO_SD_CARD: 'HuskyLens 觸發 %1 保存在內存卡',
        PHOTO_TAKE_PHOTO: '拍照',
        PHOTO_SCREEN_SHOT: '截屏',
        HUSKYLENSVISION_MODEL_TO_TF_CARD: 'HuskyLens  %1 當前演算法數據為SD卡 %2 號模型',
        MODEL_SAVE: '保存',
        MODEL_LOAD: '加載'
        
    });

    return Blockly;
}

exports = addMsg;